ATTACK SCENARIO RECOGNITION THROUGH HETEROGENEOUS
EVENT STREAM ANALYSIS
Sunu Mathew, Shambhu Upadhyaya
Department of Computer Science and Engineering
State University of New York at Buffalo
Buffalo, NY 14260
{smathew2, shambhu}@cse.buffalo.edu

ABSTRACT
Stealthy, goal-oriented multistage attacks are
difficult to detect since they often consist of specific attack steps that do not cause significant variations in the statistical distributions ofdata streams.
We present an approach for attack scenario detection and recognition that is based on analyzing
data streams from multiple heterogeneous sensors.
Events captured from these sensors are used to generate high-dimensional state vectors that characterize overall system-wide activity. Monitoring the
time series ofthese state vectors through Principal
Component Analysis forms the basis ofan anomaly
detection technique for real-time scenario detection. Data traffic from a real network that emulates a military intelligence network is used to test
and validate this approach. Results indicate that
our approach is both effective and has low computational requirements, making it a candidate for
practical implementation.

significant. Cyber-security tools such as intrusion
detection systems (IDSs), anti-virus software and
firewalls provide efficient solutions for the detection of single step and well-known multi-step exploits. Complex multistage attack scenarios, however, evade detection by these sensors since their
attack vectors may not raise sensor alarms. Some
of the reasons why detection of these high-level attack scenarios is difficult are listed below:
• The attack scenario indicators are spread over
multiple user and system actions and events;
thus the entire scope of the attack scenario
is not immediately apparent. Zero-day attack
scenarios do not have well-defined signatures
analogous to signatures for root-kits and attack
scripts; hence detection and identification of
attacks is not straightforward.
• Typical attack monitoring techniques (e.g., by
IDSs) may not be effective since the attack
components along the monitored dimensions
may fall below sensor detection thresholds.

1. INTRODUCTION
A computational environment involves a variety
of hardware, software and human elements with
myriad possibilities for interaction. Several interesting attack paradigms such as multistage attack scenarios are possible in these environments;
these attacks are of special importance in sensitive
domains (e.g., military and corporate espionage)
where the threats to cyber-infrastructure may be

• Some attack scenarios (e.g., collusion by insiders) may not involve any explicit attack
steps. Individual actions may be legitimate in
themselves, but combinations of actions may
be highly unusual with respect to typical activity, and thus possibly be malicious.
In this paper, we approach the scenario detection problem as one of anomaly detection in a
high-dimensional space (Section 2). We develop

lof7
978-1-4244-5239-2/09/$26.00 ©2009 IEEE

a framework in which data streams from heterogeneous sensors (e.g., IDSs and host-logs) are used
to define state vectors that represent time periods
of overall network function. The time series of
state vectors are analyzed using principal component analysis (PCA) [3], and suitable techniques
for efficient attack scenario detection are developed. We experimentally demonstrate and validate
the techniques by applying them to the detection of
complex attacks generated on real networks (Section 3). Section 4 compares our approach with others, and Section 5 concludes the paper with some
directions for future research.

2. PROBLEM FORMULATION AND
TECHNICAL OVERVIEW
A cyber-attack scenario intuitively represents a
departure from normal function as far as the overall
system (host + network) activity is concerned. In a
computational environment involving multiple interacting users, hosts and services (e.g., email, http,
ftp traffic, etc.), the presence of an attack (Le., the
'signal') can be masked by event traffic caused by
normal activity on the network (Le., 'noise'). Our
premise is that a composite characterization (as opposed to monitoring individual features) of cyberactivity can guide the development of suitable techniques for detecting anomalous behavior indicative
of multistage attacks. System state is characterized
in our approach by event-streams generated by heterogeneous sensors such as IDSs and host log-files
deployed on the network. A time series of multidimensional, multivariate state vectors is used to
facilitate anomaly detection and may be defined as
follows Suppose there are m.i> 1,2, ..n types of data
streams (e.g., distinct sensor-types, distinct types
of log sources, etc.), each contributing d, dimensions (features) with n, instances each (e.g., sensors
placed at different locations, multiple hosts providing log files), then this defines an m-dimensional
(m = I'!=l Pi » d, * ni) state vector S. {Sl ,S2, ...S; ..}
constitutes a time-series of state vectors representing consecutive periods of system activity.
Principal Component Analysis (PCA) is a tech-

nique that attempts to discover the inherent geometrical structure of high-dimensional data. A set
of multivariate data vectors is analyzed to uncover
hidden correlations that might exist among the variables (dimensions). PCA finds new orthogonal dimensions (called Principal Components) that are
linear combinations ofthe original data variables by
accounting for the variances that exist in the data.
Thus, the first Principal Component (PC) is the direction of greatest variance; the second PC is the
direction of greatest variance that is unexplained by
the first PC and orthogonal to it, and so on. Consider a set of m dimensional multivariate data observations Xl, X2 , X3 , •••• , X n represented in matrix format. Suppose (A.I,UI),(A.2,U2), ....(A.m ' um ) are the
m eigenvalue-eigenvector pairs obtained through
Singular Value Decomposition [8]. By choosing
the k eigen-vectors corresponding to the largest
eigen-values that are responsible for most of the
variance in the original space, one obtains a lower
dimensional space for data approximation. Effectively, the conclusion is that most of the 'signal'
in the data occupies a k dimensional subspace (the
'PC-space') while the other m - k dimensions constitute 'noise.' Suppose the k eigen-vectors are arranged to form the m x k matrix U (Le., each column is an eigen-vector), then each data vector Xi
(column vector format) in the original space can
be projected onto the PC-space (to create an eigenstate, Le., projected vector) as follows:
T
Yi = u (Xi - p), P is the mean ofthe data
In our application, since the state vectors are
composed of multivariate data from heterogeneous
sensors with possibly different (and unknown)
measurement scales, we perform PCA analysis using the correlation matrix (instead of the more frequently used covariance matrix) to avoid undue influence from any particular data variable.
Anomaly Detection: Initial training of the detection system begins by recording activity while
the system is operating in a typical, but attackfree environment. Sensor outputs (Le., state vectors) generated during this operational period represent baseline behavior of the system. PC analysis yields a suitable k dimensional PC-space that
can be used for data approximation; the state vee-

20f7

tors are projected onto this space to obtain corresponding lower-dimensional eigen-states representing normal activity.
The set of data points (eigen states) in the PC
space is treated as a single cluster and its centroid is
identified. Since the dimensions ofthe PC space are
orthogonal to each other, we find that the Euclidean
distance is a sufficient distance metric, and the centroid is chosen so as to minimize the sum of the
squared Euclidean distances of the cluster points.
That is, if YI ,Y2 ,Y3, .... ,Yn are the eigen-states corresponding to normal behavior, then the centroid
of the normal activity cluster is Cnormal = ~ L~IYi.
We use an additional statistic, the standard deviation of eigen-state distances from Cnormal, crdistance,
as another measure associated with the normal activity cluster. The detection of anomalous timeperiods (eigen-states) during the testing phase proceeds by projecting state-vectors generated in realtime onto the PC-space and then calculating the distances of the resulting eigen-states from the cluster centroid. A distance indicating an outlier (say,
greater than or equal to pcrdistance, P = 3 typically
for the normal distribution) signifies an anomaly,
and hence a possibility that malicious activity is in
progress. If obtaining anomaly-free data for training is not feasible, multivariate trimming of training data can minimize the effects of noise and other
isolated anomalies.

3. EXPERIMENTAL ANALYSIS
Test Network: Our experimental network developed by Skaion Corporation ([22]) emulates an
unclassified network used by the United States Intelligence Community called the Open Source Information System (OSIS). The OSIS network consists of different enclaves with multiple Windows
and Linux machines, web, mail and other servers.
The event traffic available to us is calibrated to
match realistic levels, and consists of host and network events generated by normal activity in addition to ground truth for specially developed multistage attacks. The configuration of the OSIS network is shown in Figure 1. An example attack
scenario (called Bank Shot Attack) in the OSIS en-

CumulativeVariance
SubspaceDimensionality

Table 1. The number of PC's that are required to explain observed variance in the
training dataset

vironment just described is as follows: Attacker
performs preliminary scanning ofthe target in the
BPRD subnet - An initial attack on a Windows system fails - Attacker moves to a secondary target
running Linux - The attacker compromises the target via its web server by carrying out a buffer overflow attack on a 'well-known script' which connects to a Mysql database - The attacker queries
the database for confidential information.
Now, we describe the heterogeneous features
that are identified for state characterization and
state vector definition.
Feature Selection:
Consider the monitored
network in Figure 1. We focus on monitoring the subnet called Bprd on the lower left.
The primary functionality of this network consists of an Apache webserver www.bprd.osis.gov
(100.10.20.4), which accesses a MySql database
on logos.bprd.osis.gov (100.10.20.3).
Additional hosts considered are the Linux machines
osiris.bprd.osis.gov and www.shield.osis.gov. The
path to the Bprd subnet is monitored by several
Snort sensors (Snort 2.1.2 at Trunk, Snort 3.2.3 and
Snort 2.4.1 at Trunk, Colo and Bprd), in addition
to a single Dragon [7] sensor. We focus on collecting a set of features from both host and network data streams to provide a broad characterization of overall state for sufficient validation of our
techniques. For the network sensors, we collect the
following features - alert count, distinct event-type
count, number of distinct IP addresses as source of
an event, and the number of distinct IP addresses
as the destination of an event. For the log-files,
we record the event frequency, bringing the total
dimensionality of the feature space to 36.
Attack Detection: Training state vectors are
generated at 90-second time intervals (for convenience; other values are possible here) and used to
compute the PC-space. Table 1 depicts the rela-

30f7

ce-tccanc n Facility

1100 .1 .0 .0 116 )

Legen d
Ptll..;;lI~I ,;..: t1 t1;-..rll..d u·....n

..

*,o.. :OS·i;'· ~·ii~·~i:; ·;~d ·::~ n

Figure 1. OSIS - The computernetwork in which traffic, attacks and alerts are generated

tionship between the number of PCs and the corresponding level of variance that is encapsulated by
the PC-space. Training state vectors are projected
onto the PC-space and the centroid and standard deviation of the normal-activity eigen-states are calculated as described previously. Data streams captured during specific attack scenarios (called 4sl ,
4s3, 4s4, 4s13, 4s14) are used for testing the attack detection approach. Each test state vector is
projected onto the PC-space, and the Euclidean distance D, between the eigen-state and the centroid of
the normal activity cluster is calculated. A threshold is used for outlier separation; we use 3cr as an
anomaly separator.
Figure 2 depicts the anomaly scores of eigenstates during a test with scenario 4s I. Vectors
are projected onto a 6-dimensional PC space that
accounts for 85% of the original variance. The
anomalous time periods identified are 4, 5, 6, 7
and 9 based on a 3crdistance threshold and this corresponds to a detection rate of 77% for this scenario.
It is desirable to achieve an accurate correspondence between the detected anomaly state vectors
and the actual duration ofthe attack scenario (as determined by ground truth) . Our technique is essen-

tially a signal detection approach; well-known techniques from this area can be applied to minimize
scenario fragmentation and better indicate actual
attack duration. One such technique for smoothing time-series data in statistics is an Exponential
Weighted Moving Average (EWMA) [I] whereby
the signal 1/ at a time instance t includes a weighted
contribution of values from the past 1/ = aDt + (I - ex)1/-1
With the use of the filter and ex = 0.75, a detection
rate of about 85% is achieved for identifying timeperiods consistent with attack activity. Generally,
we find that ex values of 0.75 and 0.65 are useful in
minimizing fragmentation to obtain a better estimation of the duration of anomalous activity.
It must be noted that the technique is mainly one
that detects ' abnormal behavior' which may not always correspond to attack activity. The nature of
the attack (i.e., its threat vector) and the density
of attack activity are important considerations. The
number oftime periods detected as anomalous (during the scenario) for several scenarios is depicted in
Table 2. Scenario 4s4 (2 abnormal states) was an
attack that involved Microsoft Word, and did not
have much impact on the monitored dimensions,

40f7

Scenario
Anomalous periods

Table 3.
Average distances of 4s1
anomaly states to scenario signatures

Table 2. The number of anomalous states
during attack scenario timeframe

while scenario 4s13 was a firewall misconfiguration which resulted in significantly abnormal activtiy. Testing with randomly chosen normal activity states revealed a false positive rate of approximately 25% (since non-attack activity can also lead
to non-typical behavior). For effective attack detection, considering the number ofconsecutive anomalous states and a comparison with previous attacks
(below) may be a useful approach.
Scenario Recognition:
Once a period of
anomalous activity (i.e., the attack scenario) and the
associated eigen states are detected, forensic analysis can reveal the semantics of this attack. Note that
since the anomaly detection was conducted in the
PC-space, the direct correspondence of the attack
with specific events in the original feature space
is not immediately apparent. However, it is useful to characterize the newly detected scenario by a
Signature Vector so that future occurrences of the
same or similar scenarios can be recognized and
their likely semantics recalled for timely attack mitigation. For this purpose, as before, we consider
the anomalous eigen-states that constitute the attack
scenario as an attack cluster and compute its centroid to generate the signature. A future occurrence
of a previously encountered scenario can be recognized by comparing distances of run-time eigenstates with specific scenario signature-vectors in
a database and then employing a nearest-neighbor
identification approach. Table 3 shows the average
distances between the anomaly vectors of scenario
4s 1 and the signature vectors of several scenarios,
and the values seem to validate the approach . The
closest distance is to the actual scenario signature
of 4s 1, and the next closest distance is to scenario
4s3, which is also the scenario that is semantically
most similar to the one being tested.
Runtime Attack Visualization: A useful collateral benefit of being able to approximate a highdimensional state vector (essentially a representa-

Attack Scenario 451 - "0

'e
c

"iiiu

1500

u;
:J

"0

ro

E

5
c;

1000

E

.g

"uc

500

'"

u;
i5
2

4

6

8

10

12

14

16

Time Slice

Figure 2. Distances of eigen-states from normal
clustercentroid (PC space accounts for 85% variance)

tion of network-wide activity) by a low dimensional
vector is that this can enable innovative near realtime attack detection mechanisms by exploiting the
power of visualization. A graphical tool that can
plot eigen-states can aid in the detection of evolving attack scenarios by human security analysts. A
scatter diagram of a 3 dimensional PC-space for attack scenario 4s1 is shown in Figure 3. It can be
seen that even low dimensional projections can offer reasonable approximations of the original state
vector and visual identification of outlier states can
indicate the temporal evolution of an attack. Finally, although SVD computation of an n x m matrix has a run-time complexity of O(nm 2 ) [13], the
calculation of principal components is done offline
and the technique has low computational requirements in the practical case.

4. COMPARISON WITH OTHER WORK
Correlation of intrusion sensor alerts for attack
scenario detection has also received much attention
in the literature. Data mining and event correlation based on attribute similarities are the focus of

50f7

Cluster Scatter diagram

state in a distributed network to enable the detection of complex goal-oriented attack scenarios. We
use multiple heterogeneous high level sensors such
as lOSs and system logs to define an overall network state as opposed to using only uniform data
sources. Our PC analysis is aimed at detecting
anomalies in the interactions among multiple hosts
and services and include host, network and application events. The attack scenarios that we can detect,
therefore, are more complex and interesting than
the volume anomalies that many other approaches
consider. Also, the use of realistic training and attack data from widely used sensors allows us to analyze the performance of the techniques in actual
deployment environments.

+

400
PC3 200

o

-200
-400

o
PC2

Figure 3. Scatter diagram of attack scenario in
3-dimensional eigen space

many research efforts ([21], [5], [24], [6]). Several other techniques detect anomalies by mining
data to match attack models ([23], [4], [14], [15]
[12]). A logic programming approach to detecting
attack scenarios is the focus of [17] and [16]. Good
surveys of anomaly detection techniques including
those applied to computer security are available in
[18] and [2].
PCA is widely used in several application domains , and recently has found use as an anomaly
detection technique in computer security. In [20],
the authors use a robust Principal Component Classifier for anomaly detection; distances in a PC
space are computed and a combination ofPCs with
high and low eigen-values are used. In [25], the
Euclidean distance in the PC space is used for
anomaly detection in an approach similar to ours.
Both these approaches, however, have the goal of
building simple anomaly detectors from homogeneous low-level network connection data (KDD
CUP [9] dataset). In [26], the authors use PCA
for analysis of audit data such as system calls, shell
commands and network packets by considering the
frequency rate of events. In [10] and [11], the authors detect network traffic anomalies (such as volume anomalies) by mining network flow data using
the principal components technique.
Our approach in this paper differs significantly
from other works cited here. Our primary motivation is a high level characterization of system

5. CONCLUDING REMARKS
We believe that our approach in this paper is
the first application of dimensionality reduction in
the context of monitoring high-level heterogeneous
cyber-activity for deviations. Properly synchronizing the data from multiple sensors is an important
issue and correlation frameworks such as Prelude
([19]) may be suitable here . Attacks may be spread
over multiple time periods and hence the duration
of each state is an important point - time periods
must be sufficiently broad so that the corresponding states are detected as anomalous. The application ofPCA is normally done under the assumption
of normal distribution for the data dimensions; it is
not clear if sensor data is always Gaussian. However, as pointed out, PCA has been successfully
used with cyber-data in other research, and is effective in this case as we have demonstrated. In future work, we plan to investigate the application of
these techniques to specific attack paradigms (e.g.,
insider threat). We also plan to compare the performance of the scheme with that of alternate approaches such as Independent Component Analysis
(lCA).
ACKNOWLEDGEMENT: The authors would
like to thank Dr. Eric Van Den Berg at Telcorida
Technologies for useful discussions regarding the
application of PCA to cyber-attack detection.

60f7

References
[1] Engineering
Statistics
Internet
Handbook.
Available
Online:
http://ismi.sematech.org/stats/handbook.htm.
[2] J. S. A. Lazarevic, V. Kumar. Intrusion Detection: A Survey, In Managing Cyber Threats: Issues, Approaches and Challenges, 2005.
[3] C. M. Bishop. Pattern Recognition and Machine
Learning. Springer, 2006.
[4] S. Cheung, U. Lindqvist, and M. Fong. Modeling
multistep cyber attacks for scenario recognition.
In Proceedings ofthe DARPA Information Survivability Conference and Exposition (DISCEX III),
pages 284-292, Washington, DC, USA, 2003.
[5] F. Cuppens. Managing Alerts in a Multi-Intrusion
Detection Environment. InACSAC '01: Proceedings of the 17th Annual Computer Security Applications Conference, page 22, Washington, DC,
USA, 2001.
[6] O. Dain and R. Cunningham. Fusing a heterogeneous alert stream into scenarios. ACM Computer
and Communications Security, 2001.
[7] Dragon
intrusion
detection
sensor
http://www.enterasys.com/products/.
[8] G. Golub and C. V. Loan. Matrix Computations,
3rd Edition. Johns Hopkins, Baltimore, 1996.
[9] Kdd cup 1999 data, http://kdd.ics.uci.edu/
databases/kddcup99/kddcup99 .htm I.
[10] A. Lakhina. Diagnosing network-wide traffic
anomalies. In ACM SIGCOMM, pages 219-230,
2004.
[11] A. Lakhina, M. Crovella, and C. Diot. Mining
anomalies using traffic feature distributions. SIGCOMM Comput. Commun. Rev., 35(4):217-228,
2005.
[12] S. Mathew, R. Giomundo, S. Upadhyaya, M. Sudit, and A. Stotz. Understanding multistage attacks by attack-track based visualization of heterogeneous event streams". In Third ACM International Workshop on Visualizationfor Computer
Security (ACM VizSec, in conjunction with ACM
CCS), Fairfax County, VA, November 2006.
[13] M. Misra, H. H. Yue, S. J. Qin, and C. Ling. Multivariate process monitoring and fault diagnosis by
multi-scale pea. In Computers and Chemical Engineering, pages 1281-1293,2002.
[14] P.Ning, Y. Cui, D. Reeves, and D. Xu. Techniques
and Tools for Analyzing Intrusion Alerts. ACM
Transactions on Information and System Security
(TISSEC), May 2004.

70f7

[15] P. Ning and D. Xu. Hypothesizing and reasoning
about attacks missed by intrusion detection systems. ACM Transactions on Information and System Security (TISSEC), 7(4):591-627,2004.
[16] X. Ou, W. F. Boyer, and M. A. McQueen. A
Scalable Approach to Attack Graph Generation.
In Proceedings of the ACM Conference on Computers and Communications Security, Alexandria,
VA, November 2006.
[17] X. Ou, S. Govindavajhala, and A. W. Appel. MulVAL: A logic-based network security analyzer. In
Proceedings ofthe USENIX Security Symposium,
Baltimore, MD, August 2005.
[18] A. Patcha and J.-M. Park. An overview ofanomaly
detection techniques: Existing solutions and latest technological trends. Computer Networks,
51(12):3448 - 3470, 2007.
[19] Prelude
ids
-http://www.preludeids.com/en/welcome/index.html.
[20] M. L. Shyu, S. C. Chen, K. Sarinnapakorn, and
L. Chang. A novel anomaly detection scheme
based on principal component classifier. In IEEE
Foundations and New Directions ofData Mining
Workshop, in conjunction with ICDM03, pages
172-179, 2003.
[21] S. Staniford, J. Hoagland, andJ. McAlerney. Practical Automated Detection of Stealthy Portscans.
Journal of Computer Security, 10(1/2):105-136,
2002.
[22] R. Stapleton-Gray and S. Gorton. Rendering the
Elephant: Characterizing Sensitive Networks for
an Uncleared Audience. In Proceedings of the
IEEE International Information Assurance Workshop, pages 208-214, West Point, NY, USA, 2006.
[23] S. Templeton and K. Levitt. A requires/provides
model for computer attacks.
Proceedings of
the 2000 Workshop on New Security Paradigms,
2001.
[24] A. Valdes and K. Skinner. Probabilistic Alert Correlation. In Proceedings of the 4th International
Symposium on Recent Advances in Intrusion Detection, pages 54-68, Davis, California, 2001.
[25] W. Wang and R. Battiti. Identifying intrusions in
computer networks based on principal component
analysis, 2005.
[26] W. Wang, X. Guan, and X. Zhang. Processing of
massive audit data streams for real-time anomaly
intrusion detection. Computer Communications,
31(1):58 -72,2008.

