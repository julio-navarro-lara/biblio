2014 IEEE 12th International Conference on Dependable, Autonomic and Secure Computing

An Approach of Discovering Causal Knowledge for Alert Correlating Based on Data Mining
Feng Xuewei1), 2), Wang Dongxia1), 2), Huang Minhuan1), 2) , Sun Xiaoxia1), 2)
1) Beijing Institute of System Engineering, Beijing 100101, China 2) Nation Key Laboratory of Science and Technology on Information System Security, Beijing, 100101, China e-mail: brafum@yeah.net, dongxiawang@126.com

Abstract--The process of attackers exploiting the target facilities is always gradual in cyberspace, and multiple attack steps would be performed in order to achieve the ultimate goal. How to identify the attack scenarios is one of the challenges in many research fields, such as cyberspace security situation awareness, the detection of APT (Advanced Persistent Threat) and so on. Alert correlation analysis based on causal knowledge is one of the widely adopted methods in CEP (Complex Event Processing), which is a promising way to identify multi-step attack processes and can reconstruct attack scenarios. However, current researches suffer from the problem of defining causal knowledge manually. In order to solve this problem, we propose an approach of mining for causal knowledge automatically based on the Markov property in this paper. Firstly, the raw alert stream is clustered into several alert sets, then each set is mined in order to obtain the one step transition probability matrix based on the Markov property, and after being generated, each matrix represents a piece of causal knowledge. Then we fuse the knowledge which has overlapping steps to create the knowledge base of attack patterns. Finally the experimental results show that this approach is feasible. Keywords--alert correlation; causal knowledge; data mining; attack scenario

I.

INTRODUCTION

Currently, the main defense architecture of information systems is still based on the classic PDR (Protection, Detection, Response) model that is to defend in depth. In such a defense ideology, multiple security devices (such as firewalls, intrusion detection systems, anti-virus systems, etc.) are deployed in cyberspace to protect assets one by one [1]. When attack activity occurs, these devices also serve as sensors to generate alerts. However, due to the continuous development of attacks, especially the emergence of APT, and the problems of false positives and false negatives, the number of alerts may be massive while their values are low density. It is impossible for the administrators to figure out the complete pictures or scenarios of attack activities from these alerts manually. Furthermore, the emergence of cyberspace and large data applications is also a new challenge to alert correlation. Bass proposed a method of building the next generation distributed intrusion detection system using the technology of multi-sensor data fusion in 1999 [2]. Since then, alert
978-1-4799-5079-9/14 $31.00 Å  2014 IEEE DOI 10.1109/DASC.2014.19 57

correlation becomes a hotspot, which aims to identify attack activities and reconstruct attack scenarios from the multisource alerts. However, there is not a standard definition about alert correlation by far, and researchers generally consider that as an application of data fusion in the field of intrusion detection [3][4]. We classify the relationships between alerts into three categories, namely redundant, logical, and conflicting [5]. Therefore, alert correlation aims at analyzing and determining the three relationships between a series of alerts generated by security sensors. After extracting the redundant alerts and correlating the logical alerts and eliminating the conflicting alerts, we generate abstract knowledge to describe the attack activities, which is more comprehensive and understandable than an alert. At present, clustering is widely used for extracting the redundant alerts. The arising of conflicting alerts is due to the rules' conflict between different sensors, so optimizing the rules from a global viewpoint is the key to eliminate conflicting alerts. In this paper we focus on the correlation of logical alerts, which is a nut of alert correlation and can be used for reconstructing the attack scenarios. The main content of logical alert correlation is to identify the causal relationship between different alerts. To determine a behavior is normal or abnormal must be based on the empirical criteria and judgements. Similarly, to identify the causal relationship between different alerts relies on the existing causal knowledge. The knowledge must not be produced solely by experts' manual definition, and the manual definition can not deal with an unknown attack scenario. Therefore, how to mine for the causal knowledge from a real cyberspace automatically is one of the key issues in logical alert correlation. In this paper, we present an approach of mining for the causal knowledge automatically based on the Markov property. Firstly, after being clustered according to the related IP addresses, alerts will be formed as several sets. Secondly, each set is mined in parallel for the one step transition probability matrix between different attack types based on the Markov property, that is to mine for the causal knowledge hiding in each set. Thirdly, after fusing the knowledge which has overlapping steps, the knowledge base is created, and we also study on the method of alert correlation based on the knowledge base. Finally, we test the mining approach, and the experimental results show that the approach is feasible.

The remainder of this paper is organized as follows: section 2 analyzes the existing researches on causal knowledge mining. Section 3 describes how to cluster alerts according to the related IP address. The mining process for the one step transition probability matrix in each set is explained in detail in section 4. In section 5, we test the knowledge mining approach. At last this paper is summarized and we suggest the future work in section 6. II. RELATED WORK The causal relationship is the most common relationship between alerts, and there is a causal relationship between each step of the multi-step attacks. Causal knowledge is the formalization of the relationship, and it is the template or pattern of attack scenarios, which can be used for instructing the correlation of alerts. A. Alert correlation based on the causal knowledge Alert correlation based on the causal knowledge has a lot of advantages, especially in the reconstruction of attack scenarios. To sum up, alert correlation based on the causal knowledge can be divided into three categories: 1) the predicate knowledge-based alert correlation. Causal knowledge is predefined as predicates in this method and every attack type has a predicate knowledge. The knowledge is a three tuples <Pre_i, attack_typei, Post_i>, where Pre_i means the prerequisites that the successful attack attack_typei requires, Post_i means the consequences that the successful attack_typei produced. Alert A and B can be correlated (A before B), if and only if the consequences of A can fully or partially match the prerequisites of B. Researches related to alert correlation based on the predicate knowledge include the project of TIAA lead by Ning[6][7], the project of MIRADOR lead by ONERA's Cuppens[8] and Steven Templeto's JIGSAW[9]. 2) The template knowledgebased alert correlation. In this method, causal knowledge is predefined in the form of attack tree, Bayesian networks, Markov chains and so on. The knowledge is a template or pattern, which indicates an attack scenario. It can be used for matching alert sequences to identify attack scenarios. Related researches include Qin and Lee's Bayesian network probability-based correlation and Granger Causality Testbased correlation[10], Steven's attack scenarios recognition method based on the expert system[11], and Nurbol's alert correlation and filtering method based on the hidden Markov model[12]. 3) Some other knowledge-based alert correlation, for example, Liu's heterogeneous multi-sensor data fusion method with multi-class support vector machine[13], Julisch's root cause analysis method[14], Amann's network intrusion detection method with real-time Intelligence[15] and so on. B. Causal Knowledge Mining and modeling Although the predicate logic, Bayesian networks and Markov chains have been used for modeling the causal knowledge, the modeling process relies on experts' experiences, which means the knowledge always needs to be predefined manually in the form of Bayesian networks or Markov chains[10][12]. There are some methods of causal

knowledge mining[16][17][18], however, the mining objects of these methods are not the real alert stream, but the atomic knowledge which has been predefined, such as Ning's causal predicate[6]. There are also some correlation rules mining methods, but these rules are not causal knowledge. Instead, they are criterions which are used for clustering alerts[19][20]. In order to reduce the administrators' burden of defining the causal knowledge manually and deal with the unknown attack scenarios, we undertake a study on how to create the causal knowledge automatically by mining the real raw alert stream in this paper. III. ALERTS CLUSTERING BASED ON THE RELATED IP
ADDRESS

It is unadvisable to mine for the causal knowledge directly in the huge raw alert stream, the reason can be described as follows: firstly, there may be several independent attacks hiding in the alert stream simultaneity, so mining for the knowledge directly will result in the confusion of different attack scenarios. Secondly, it goes against the use of parallel processing. Therefore, in order to mine for the knowledge accurately and efficiently from the raw stream, we cluster the alerts firstly. Alerts triggered by the same attack scenario are always similar, especially in IP address. So we cluster the alerts into several sets based on the related IP address, and then process each set in parallel. Because each set indicates only one attack scenario and can be processed in parallel, the accuracy and efficiency of knowledge mining will be improved considerably. Performance or efficiency is also an important metrics of knowledge mining methods, particularly in the cyberspace and the big data environment. After being produced and submitted by various sensors, the alerts are standardized firstly. We define a standard alert as a 8-tuples ai = (timestamp, pluginID, pluginSID, srcIP, srcPort, desIP, desPort, priority ) according to the IDMEF[21], where timestamp indicates date and time when the sensor detects a malicious behavior or signature, pluginID is the identification of the sensor that produced this alert and pluginSID is the class label that the sensor assigned to this alert, srcIP and srcPort indicate the malicious behavior's source IP address and source port number, correspondingly, desIP and desPort are the victim or destination's IP address and port number, priority indicates the alert's rank. In this definition, pluginID and pluginSID belong to the key assignments, they together determine the alert's type, namely the attack's type. So the remainder of this paper will use the variable type to indicate attack's type directly. The alerts clustering method works based on the following hypothesis: Hypothesis 1. If alert ai and aj are address related and can be clustered together, then ai's IP address, whether the source IP address or the destination IP address, is always the same as one of aj's IP addresses. IP addresses of the alerts, which are triggered by the same attack scenario, are always related. For example, in a multi-step attack scenario, the destination node of a previous attack step is always the source node of the next attack step.

58

Therefore, the essence of Hypothesis 1 is to cluster the alerts which are triggered by the same attack activity into one set based on the above-mentioned relationship of IP address. After being generated, each set is corresponding to one attack scenario and therefore is the input of the causal knowledge mining approach. The clustering process makes the input of the mining approach more accurate, and the process can be shown as Fig.1. Algorithm 1 is the computable description of the related IP address-based alerts clustering method, where IPseti means set Ai's IP address, which is composed of the source IP addresses and destination IP addresses of the alerts belonging to set Ai, clusterSet means all the sets.

preprocess stage, and the location and distribution of attack scenarios can be restored more effortless. IV. THE CAUSAL KNOWLEDGE ANALYZING AND MINING Considering that attack patterns are hidden inside of the sets produced by algorithm 1, we focus on mining for the causal knowledge from each set in this section. Because Markov chain model can be used for modeling the randomization process effectively, we use it to define the causal knowledge in alert correlation. As shown in Fig.2, a Markov chain represents a piece of causal knowledge, each state in the chain is an attack type, and the transitions between the states indicate the conditional probability of the corresponding attack scenario transferring from the current attack type to the next one. The summation of all transition probability of each state must be equal to 1 in Markov chain model. In summary, the causal knowledge is defined as follows: the causal knowledge in alert correlation is a directed graph G (V, E,  ), where V is the set of nodes, namely all the attack types appeared in an attack scenario, E is the set of edges that link the nodes, which presents the relationship between the nodes,  is the set of transition probability, which presents the conditional probability of transferring from the current state node to the next state node.
Attack Type_j 0.4 Attack Type_i 1.0 0.6 Attack Type_k 0.8 Attack Type_y 1.0 0.2

Figure 1. Alerts clustering based on the related IP address.

Algorithm 1. clustering alerts which are related in IP address. Inputthe real alert stream A={ a0, a1, ..., ai,...}; Outputseveral sets A0, A1, ... , An; 1. WHILE A is not empty 2. atemp = A.first and drop A.first ; 3. IF A0 is not existing yet 4. create A0 and add atemp to A0 ; 5. ELSE { 6. FOREACH Ai : clusterSet{ 7. IF atemp.IP is in Ai.IPset 8. add atemp to Ai ; 9. GOTO 1; 10. } 11. create An and add atemp to An ; 12. } 13. END

Attack Type_x 0.7

0.3

Figure 2. The Markov chain representation of the causal knowledge in alert correlation

AttackType i j k x y 0.0 0.0 1.0 0.0 0.0 i 0.4 0.0 0.6 0.0 0.0 j k x y 0.0 0.0 0.0 0.2 0.8 0.0 0.0 0.0 0.3 0.7 0.0 0.0 0.0 0.0 1.0

The clustering process is a preliminary step of the causal knowledge mining. After being processed, the real alert stream will be clustered into several sets, and these sets are the data base of the subsequent mining process. Compared to the existing alerts clustering methods, the advantage of this method is that it does not require the subjective concept of "distance" to measure the similarity between two alerts. By contrast, it identifies the alerts' IP addresses directly, and then cluster alerts into several sets based on the addresses' relationship, that is Hypothesis 1. By clustering alerts in this way, there will be no loss of information in the alert

Figure 3. The transition probability matrix between attack types of the alerts

Markov chain model is non-aftereffect, i.e. the value of the next state only depends on the current state, which is the state sequence before the current state does not impact on the value of the next state. See as Eq.1. p(xi+1|xi, xi-1...x1) = p(xi+1|xi) (1)

The property mentioned-above is called the first-order Markov property. Markov chain model can also be defined as a transition probability matrix, where each element in the

59

matrix is the transition probability that the attack type of the corresponding row transfers to the attack type of the corresponding column, Fig. 3 is the transition probability matrix of the Markov chain in Fig. 2. The first-order Markov chain's transition probability matrix is called one step transition probability matrix. In this paper we use the firstorder Markov chain to model the causal knowledge, so the core of the knowledge mining approach is to create the one step transition probability matrix between attack types. Each element tlk in the one step transition probability matrix T={tlk} presents the conditional probability of the current state l transferring to state k at the next time, i.e. p(k|l). In the context of alert correlation, it is the conditional probability that attack step k will be taken after attack step l has already been taken. After analyzing all the sets produced by algorithm 1, the knowledge mining algorithm creates a one step transition probability matrix for each set. The mining algorithm is shown in Algorithm 2.
Algorithm 2. Mining an alert set for the one step transition probability matrix. Inputalert set A={a0, a1, ..., ai, ...}, which are related in IP address; Output  set A's one step transition probability matrix T={tlk}; 1. FOREACH ai :A{ 2. IF i == 0 3. l = ai.type and k = ai+1.type; 4. add l and k to the set of alert types V; 5. create T according to V; 6. tlk++; 7. ELSE 8. l = ai.type and k = ai+1.type; 9. IF ai+1.type is not included in V 10. add ai+1.type to V; 11. add row and column of ai+1.type to T; 12. tlk++; 13. ELSE 14. tlk++; 15. } 16. /*process the matrix T, and make the summation of each row equal to 1*/ 17. let size be the number of T's row or column; 18. FOR i = 0, 1, ...size 19. let sum be the summation of row i; 20. FOR j = 0, 1, ...size 21. tij = tij/sum; 22. END 23. END

ai+1.type is only related to ai.type, so algorithm 2 will increase the counter from ai.type to ai+1.type, that is tlk++ in algorithm 2. In order to satisfy the requirement of Markov chain model, that is the summation of all transition probabilities of every state must be equal to 1, the matrix must be postprocessed after being generated. In order to make the summation of each row of the matrix equal to 1, we convert the transition frequency between attack types to the transition probability. For each row in matrix T, each element of this row is divided by the summation of all the elements in this row, the probability distribution will be acquired. Algorithm 2 does not have to wait until the set has been built completely, it can process the uncompleted set in realtime, that is it can work simultaneously with algorithm 1. Meanwhile, because of the independence of various alert sets, the one step transition probability matrix hiding in each set can be mined in parallel. In a real application environment, the knowledge mining engine assigns a processing thread for each set based on algorithm 2, and mines for the transition probability matrixes in parallel. The performance of the knowledge mining algorithm is of great importance especially in cyberspace and big data environment. V. EXPERIMENT ANALYSIS In order to validate the effectiveness of the knowledge mining approach proposed in this paper, we test it based on the well-known DARPA 2000 data set in our laboratory. We use DARPA 2000 intrusion scenario specific data set LLDOS1.0 to evaluate the causal knowledge mining approach. The data set LLDOS1.0 contains a complete DDos (Distributed Denial of Service) attack scenario which is composed of five attack steps. The first attack step in the DDos scenario can be explained as following, the attacker scans four networks to find sadmind services from the source, the signature or attack type of this step is "RPC sadmind UDP PING", which is presented by the IDS of Snort. The second attack step is that the attacker attempts to overflow the buffers of these sadmind services from the source and gain root privileges of the corresponding hosts, the type is "RPC sadmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow attempt". During the third step, the attacker logins into the compromised hosts as root and installs the program of mstream, namely the DDos daemon, this type is "RSERVICES rsh root". Next in the fourth step, the daemon's handler which is in the source and clients which are installed in the compromised hosts interact, and prepare to carry out the flooding attack, the type of this step is "DDOS mstream handler to client" or "DDOS mstream client to handler". Finally, in the fifth attack step, the distributed compromised hosts send a huge number of packets whose source IP addresses are spurious to the target, and start the flooding attack, the type is "BAD-TRAFFIC loopback traffic". While experimenting, we use the IDS Snort as a security senor which will generate alerts, so the above-mentioned types or signatures are all based on Snort.

While processing the alert sequence of set A, algorithm 2 will firstly check the attack type of each alert, and if a new attack type appeared, it will add a new row and column in matrix T for the new attack type, see as attack type y in Fig.3. This ensures that all attack types in set A will be included in matrix T. Algorithm 2 mines for the causal knowledge based on the neighboring attack types. If alert ai is followed by alert ai+1 in time serial, then according to the first-order Markov property, the appearance of attack type

60

We replayed the LLDOS1.0 data set in the LAN by using the tool of TCP-replay, and alerts generated by Snort were clustered into nine sets by algorithm 1, that is A1 to A9. Then these nine sets are mined in parallel for the one step transition probability matrixes. Finally, the matrixes of A1's, A2's and A3's are shown in Fig.4, where the sequence number of the attack type is assigned based on the appearing order of the corresponding alert.
Sequence Numbers 1 2 3 Attack Types INFO web bug 0x0 gif attempt WEB-CGI finger access WEB-CGI redirect access

(a) Attack types and the one step transition probability matrix in set A1 Sequence Numbers 1 2 3 4 5 6 7 8 9 10 11 12 ICMP PING INFO FTP Bad login INFO TELNET Bad Login RPC sadmind UDP PING RPC sadmind query with root credentials attempt UDP RPC sadmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow attempt WEB-IIS %2E-asp access RSERVICES rsh root DDOS mstream handler to client DDOS mstream client to handler SNMP request udp BAD-TRAFFIC loopback traffic Attack Types

Except for the three sets, alert sets A4 to A9 are noise sets, which are composed of few scattered alerts, so we do not consider these six sets. While analyzing the three one step transition probability matrixes in Fig.4, we find that set A1's matrix and A3's matrix are composed of a few attack types, which indicates that the two attack scenarios are composed of only a few steps. The reason for this is that set A1 and A3 are the background alert sets, they are incidental. The matrix in set A2 is the causal knowledge of the DDos attack. There are twelve attack types in the matrix, and the transition probability between attack types can be found in this matrix as well. Fig.5 is the graphical representation of the matrix, which presents the Markov chain form of the causal knowledge of the DDos attack. We can find the five steps in Fig.5, which is numbered as 4, 6, 8, 9 or 10, and 12. Meanwhile it also contains some other tentative attack steps, this is reasonable, in order to achieve the current goal, the attacker always attempts a lot of tricks before finding the effectual one.

Figure 5. The Markov chain form of the DDos attack causal knowledge

Compared to the existing approaches of mining for causal knowledge[6][7], the advantages of our approach include that it does not require any manual assistance and mines the raw alert stream directly. Meanwhile, the causal knowledge created based on the Markov property does not only present the complete information about the corresponding attack scenarios, but also indicates the transition probability between attack steps, which can be used for inferring and predicting attackers' intents after alert correlation. VI. CONCLUSION Currently, the bottleneck of the logical alert correlation is how to create the causal knowledge automatically, which is the base of identifying various attack scenarios. According to this requirement, in this paper, we propose a novel approach of mining for causal knowledge automatically based on the Markov property. The approach mines raw alert stream directly and does not need any manual assistance. We define causal knowledge in the form of Markov chain, so the core of the approach is to mine for the one step transition probability matrix in each alert set, we achieve this through the algorithms proposed in this paper. At last, the approach is tested based on the data set of LLDOS1.0, the experimental results are consonant with the

(b) Attack types and the one step transition probability matrix in set A2 Sequence Numbers 1 2 3 Attack Types NETBIOS NT NULL session POLICY FTP anonymous login attempt ATTACK-RESPONSES directory listing

(c) Attack types and the one step transition probability matrix in set A3 Figure 4. The causal knowledge in LLDOS1.0 data set

61

anticipation, and the knowledge presents the attacker's exploitation accurately. In the future, we will test the performance of the algorithms deeply. Meanwhile, due to the approach relies on the underlying security sensors, one of the most important works in the future is to analyze the impact of the sensors' false negative rate and false positive rate on the quality of knowledge mining. ACKNOWLEDGMENT The work of this paper is supported by the National Natural Science Foundation of China Project under grant No.61271252.

[9]

[10]

[11]

[12]

[13]

REFERENCES
[1] Schwartau W. Time Based Security: Practical and Provable Methods to Protect Enterprise and Infrastructure, Networks and Nation. America: Interpact Press Springer, 1999 Bass T. Multi-Sensor Data Fusion for next Generation Distributed Intrusion Detection Systems//Proceedings of the 1999 IRIS National Symposium on Sensor and Data Fusion, Laurel, USA, 1999: 24-27. Sheng-hui Chien, Erh-hsien Chang et al. Attack subplan-based attack scenario correlation //Proceedings of the Sixth International Conference on Machine Learning and Cybernetics, Hong Kong, 2007:1881-1887 Xiaowu Liu, Huiqiang Wang et al. Heterogeneous multi-sensor data fusion with multi-class support vector machines: creating network security situation awareness//Proceedings of the Sixth International Conference on Machine Learning and Cybernetics, Hong Kong, 2007:2689-2694 Feng Xuewei, Wang Dongxia et al. Analyzing and Correlating Security Events Using State Machine// Proceedings of the 10th IEEE International Conference on Computer and Information Technology, Bradford, UK, 2010: 2849-2854 Ning P., Cui Y., and D.S.Reeves. Analyzing Intensive Intrusion Events via Correlation//Proceedings of Recent Advances in Intrusion Detection 2002, Springer-Verlag Lecture Notes in Computer Science, Zurich, Switzerland, 2002: 74-94 Ning P., Cui Y. Techniques and tools for analyzing intrusion alerts. ACM Transactions on Information and System Security, 2004,7(2): 274-318 F.Cuppens and A.Miege. Event Correlation in a Cooperative Intrusion Detection Framework//Proceedings of the IEEE Symposium on Security and Privacy, Oakland, CA, 2002:202-215

[14]

[2]

[15]

[3]

[16]

[4]

[17]

[18]

[5]

[19]

[6]

[20]

[7]

[21]

[8]

Templeton, S. and Levit, K. A Requires/provides Model for Computer Attacks//Proceedings of New Security Paradigms Workshop, Ballycotton, County Cork, Ireland, 2000: 256-263 Xinzhou Qin, Wenke Lee. Statistical causality of INFOSEC alert data// Proceedings of Recent Advances in Intrusion Detection 2003, Springer-Verlag Lecture Notes in Computer Science, Berlin, 2003:7394 Steven C, Ulf L, Martin F. Modeling Multistep Cyber Attacks for Scenario Recognition//Proceedings of Third DARPA Information Survivability Conference and Exposition, Washington, 2003: 284-292 Nurbol. Research on Anomaly Detection Based on Data Mining and Multi-stage Intrusion Alert Correlation[Ph.D. dissertation]. Jilin: Jilin University, 2010 Xiaowu Liu, Huiqiang Wang. Heterogeneous multi-sensor data fusion with multi-class support vector machines: creating network security sutiation awareness. Proceeding of the sixth International Conference on Machine and Cybernetics, Hong Kong, 19-22 August 2007 Klaus Julisch et al. Clustering intrusion detection alarms to support root cause analysis. ACM Transactions on Information and System Security(TISSEC), 2003, 6(4): 443-471 Bernhard Amann, Robin Sommer et al. A Lone Wolf No More : Supporting Network Intrusion Detection with Real-Time Intelligence//Proceedings of Recent Advances in Intrusion Detection 2012, Springer-Verlag Lecture Notes in Computer Science, Berlin Heidelberg, 2012: 314-333 Wang Li. Study on Method of Network Multi-stage Attack Plan Recognition. [Ph. D. dissertation]. Hubei: Huazhong University of Science and Technology, 2007 Ma Yangming. Study on the Real-time Correlative Technologies of Network Security Events [Ph.D. dissertation]. Hubei: Huazhong University of Science and Technology, 2007 FU Xiao, SHI Jin, XIE Li. Layered intrusion scenario reconstruction method for automated evidence analysis. Jouranl of Software, 2011, 22(5): 996Ã­1008 EI-Semary A, Edmonds J et al. Applying data mining of fuzzy association rules to network intrusion detection//Proceedings of 2006 IEEE Information Assurance Workshop. Piscataway, NJ, 2006: 100107 Guo Shan-Qing, XIE Li, ZENG Ying-Pei. An Online Rule Generation Model for Intrusion Detection. Chinese Journal of Computers, 2006, 29(9): 1523-1532 Intrusion Detection Working Group. Intrusion detection message exchange format [EB/OL], http://www.ietf.org/internet-drafts/draftietf-idwg-idmef-xml-09.txt, 2005.)

62

