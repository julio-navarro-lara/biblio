Semantic Scheme to Extract Attack Strategies for Web Service Network Security
Wei Yan Department of Electrical and Computer Engineering New Jersey Institute of Technology Newark, NJ 07102 {wy3@njit.edu}

Fang Liu Travelsky Technology Beijing, P.R.China
Abstract---In the recent years, Web technologies have
been used to provide an interface to the distributed services. The advent of the computer networks has accelerated this development, and has sparked the emergence of the numerous environments that enable Web services. However, the computer network security against the Distributed Denial of Service attacks (DDoS) attacks attracts more attentions. The overwhelming alerts generated by the Intrusion Detection Systems make it hard for the security administrator to analyze and extract the attack strategies, which will hamper the performance of the attack detection. One method to resolve the problem is the attack scenarios extraction. In this paper, we propose a novel way to correlate the alerts and extract the attack scenarios. The modified case grammar, Principal-subordinate Consequence Tagging Case Grammar and the alert semantic network, are used to generate the attack classes. Alerts mutual information is also applied to calculate the alert semantic context window size. Afterwards, based on the alert context, the attack instances are extracted.

Index Terms- web services, network security, alerts
correlation, mutual information, intrusion detection.

I.

INTRODUCTION

The size of the internet has increased dramatically over the past years and with internet traffic expected to further increasing for the next few years. With the popularity and the variety of the web services applications, The internet has become an integral part of our society and any distruption of the internet can create major chaos. Distributed Denial of Service attacks become prevailing in recent years, and the economic losses caused by them are severe. The intrusion detection systems (IDS) are used to protect the computer networks and the sensors can detect the traffic anomalies and attacks within the network with the web services. However, IDS can generate a huge volume of alerts and the overwhelming alerts make it

hard for the security experts to analyze, which will hamper the performance of the attack detection. One solution for this problem is the alerts correlation, which can fuse and analyse the attack alerts from heterogeneous IDS for the purposes of extracting the attack strategies. Therefore, decreasing the number of the alerts and extract the attack scenarios quickly for the security administrators is very important for the network security. MIT Lincoln Laboratory [6] divided the alerts into several attack categories. New incoming alerts are possibly added to the existing scenarios after the evaluation of the probability. A new alert is compared to the latest alert in all existing scenarios, and then joined with the scenario with the highest probability score, providing the score is above a minimum threshold. Otherwise, the alert opens up a new scenario. However, this method need generate the attack scenarios in advance by hands which may not be adapted to the large number up to date and diverse attacks and attack strategies. In [5], the idea behind the Prerequisites approach is that earlier stages of an attack are often preparations for later ones. This correlation system used the hyper alert that includes facts, prerequisites, and consequences of the intrusion. The hyper alerts can be correlated if the consequence of a hyper alert fulfills the prerequisites of the second hyper alert. This alert correlation method is largely based on the caual relation, one of the most frequently used relations. However, sometimes launching one certain attack requires several steps, such as gathering related user accounts information, finding some applications' vulnerabilities, and tryig to build up the unauthorized connections to the victims. All these actions can give rise to the alerts, and these alerts can not be correlated with the causal relation. At present, heterogeneous sensors have different alert log formats of alerts representation. If we can convert them into the uniform structure, we may

0-7803-8836-4/04/$20.00 02004 IEEE.
104

reslove the the alerts fusion from the hetegeneous sensors. In this paper, we propose a semantic scheme to extract the DDos attack strategies from the alerts generated by the intrusion detection sensors. We assume that attack scenarios can be regarded as a sequence of attack events and each attack event includes a certain attack action, which can be converted into the semantic roles structure. These semantic roles are independent of the specific attacks. We expounded a modified case grammar, Principalsubordinate Consequence Tagging Case Grammar (PCTCG), which can extract the semantic information from the alerts and correlate them base on their semantic roles. Afterwards, the correlation rules are applied to the PCTCG stream to generate the alerts correlation semantic network. Based on the rule-based correlation weights, we derive the all possible attack scenarios classes for the security administrator, who may make further modifications. The alerts in the attack scenario classes are called the focus alrets. The focus alerts' mutual information is measued and used to determine the alert context window size (ACW henceforth). Based on the determined alert context window range, we can extract the correlation between the alerts.Then the aggregated alert file is reviewed and more specific attack scenarios instances are generated. As far as we know, there is no reseach appling the semantic network and case grammar to the extraction of attack scenarios. The rest of the paper is organized as follows. In section 2, we describe our attack scenario classes extraction model. The Principal-subordinate Consequence Tagging Case Grammar is proposed in section 3. Semantic roles and attributes are introduced in section 4. In section 5, we explain the simulation results, and section 6 is the conclusion.
II.

with the web server through the network cloud, where several forwarding nodes may exist. If an attacker wants to block the path between the client A and the web server, firstly he needs to know which link client A is using to communicate with web server. The attacker can passively eavesdrops the links before and after the ingress node of the cloud and derive the path between client A and web server. With the gained link information, the attacker can launch distributed denial of service (DDoS) attacks to the web server. In order to defend the attacks, the intrusion detection sensors are deployed at the ingress node of the network cloud. In following sections, we propose a semantic scheme to extract the attack strategies for the network security administrators.

,

5ke7rt ~ 5~~~~PCC ove er
e
Attack

PCTCG Stea

Seani emNetworks

2-M1tio orrelatUon
rules

Administrator

Secunty

structure

Attack Scenario Instances

Attack Scenario Classes

Figure 2. Attack Scenarios Classes Extraction.

FUNCTIONAL ARCHITECTURE

ATrACK SCENARIOS EXTRACTION

A Client

Chent B

Web seaer

Figure 1. A simplified Web service system.

A simplified web services system is shown in figure 1. Client A and client B want to communicate

Figure 2 shows the functional architecture of our semantic scheme. It includes the intrusion detection sensors, the semantic knowledge databases, the PCTCG case gramnmar converter, the semantic networks, correlation rules, the attack scenario classes, scenario instances and description structure. Firstly the sensors are disposed at the ingress of the Web services networks, where they generate the alert log files. Those sensors can be heterogeneous with different alert reporting formats. There exist several semantic knowledge databases and every kind of sensor has its own semantic knowledge database, which stores the semantic information of all the alert messages of the sensor. In figure 2, the alert files and the sensor type are the inputs to the PCTCG converter. Using the semantic information in the corresponding semantic knowledge database, the PCTCG converter can transfer the incoming alert messages into uniform PCTCG stream. Be noted that not all the incoming alerts but all the different alerts in the alert log are converted into PCTCG stream. That will not have much computation tradeoff. For example, for the dataset of 2000 DARPA Intrusion Detection Scenario of MIT Lincoln Laboratory, we use the Snort as the sensor and set the home net as 172.16.112.0, 172.16.115.0. The alert log file includes 9 different alerts whileas there are totally

105

430 alets. Afterwards, the semantic networks are built up from PCTCG stream. After applying the correlation rules, all the possible attack scenario classes are generated, which the security administrator may further modify. Finally, the alert files are aggregated and reviewed and the attack scenarios instances are generated. Based on the attack scenario instances, the attack scenario description structures are generated to inform the security administrator of the whole attack process from different steps.
III.

1.

2.
3. 4.
5.

IPsweep of the victim netowork from a remote site. Probe IP addresses and look for the running sadmind daemons. Breaking via the sadmind vulnerability. Install of the DDoS software on the victim hosts. Launching the DDoS attacks.

UNIFORM ALERT FORMAT AND PRINCIPALSUBORDINATE CONSEQUENCE TAGGING CASE GRAMMAR

At present, in order to get different views of the attacks, multiple intrusion detection sensors are deployed in the networks. Sometimes, these deployed sensors are heterogeneous sensors. Therefore, correlating these sensors' different alerts becomes increasingly important. However, the immature state of the alerts standards and the nonuniformity of attack descriptions of the heterogeneous sensors give rise of the difficulties of emerging the alert logs from those sensors. Hence, the heterogenous types of intrusion alerts should be converted into uniform format to enhance the detection capability, and give more complete pictures of attacks. A standard format, IDMEF (Intrusion Detection Message Exchange Format) was proposed to provide a standard data format which intrusion detections systems can use to exchange alerts[3]. However, one principle problem of IDMEF is its use of XML, which limits the syntactic or semantic representation of the alerts. In this paper, we proposed an attack scenarios extraction method in the view of the attack behavioral action. Our assumption is that it is the attackers'actions that cuase the generation of the intrusion alerts on the sensors and the actions we observe in the sensor's alert logs are enough for us to extract the scenarios. The notion that DDoS attack processes are composed exclusively of some discrete units - human behavioral action units, and these actions are strictly sequential in time domain, is the starting point of our models. Based on that, we can view the process of attacks as a behavior-action stream (such as starting from the information and vulnerabilities gathering to lauching attacks). For example, the attack scenario in the dataset of 2000 DARPA Intrusion Detection Scenario of MIT Lincoln Laboratory can be divied by the following

Formal linguistic models can be applied to our model, if we think every verbal in linguistics is related to a certain action. In this paper, we modified the traditional case grammar theory and proposed the Principal-subordinate Consequence Tagging Case Grammar (PCTCG) as the standard semantic format to represent the alerts format Providing abundant semantic cases, PCTCG make it possible to fuse the alerts from different sensors through aggregation and semantic correlation. Case grammar is proposed by Fillmore[1,2] and widely used by the field of linguistics. It describes the relation between a verb and the other components. In case grammar, verbal's case frame structure specifies the slots from the sentences containing the types of relationship (semantic roles) between verbal and other entities[1,2]. Case grammar includes a set of cases, including agent, theme, intrument, and location, etc., We adopted the case grammar to convert the alerts to the uniform semantic format stream with the following reasons:
1.
In case grammar, the verb is the focus of a sentence, and the noun phrases in a sentence stand in a specific case relationship with the verb. For attack scenarios extraction, we assume that that each attack scenario is composed of attack events and each attack event includes a -certain attack action. It is the attack action that give rise to the semantic information. Case grammar is easily to be represented by the semantic network. Semantic network can use abundant semantic relations to express the alerts correlations. We can use the action to reslove the alerts fusion and different alert formats of hetegeneous sensors. The attack action is much more universal than the alert logs. If we can convert hetegeneous sensors' format into a universal action-based format, then we can get over the obstocle of different formats and reslove the alerts fusion.

2.

3.

stages[7]:

As we mentioned above, in the view of behavioral action analysis, the attackers' actions are more universal than the sensors' alert format. For example,

106

for a certain attack action, two sensors using heterogeneous alert formats can generate two different type of alert records. However, the action which caused the alerts stay the same. This situation can happen in the linguistic field. In the sentence The boy kicked the footbal, the boy plays an agentive role in the action, while the football is on the receiving end of the action. Even if we can rewrite the sentence by the passive way: The football was kicked by the boy. The reverse mapping does not occur. Case grammar is used to address this mapping between the semantic roles. Unlike the syntactic level, the case grammar theory is of deep or semantic case[2], it does not change under the grammatical transformation of sentences, for example, from passive to active.
Tablel. Syntactic vs. Semantic
Sentences football The football was kicked by the boy
The boy kicked the

Subject
Boy

Syntactic level Object
Boy

Football

_

Agent
Boy

Semantic level Theme

Football

Football

Boy

Football

As shown in table 1, subject and object roles change in syntactic level when the sentence changes from active to passive way. However, the Agent (Agent is to cause the action of the verb.) and Theme (Theme is the object in motion or being located.) roles in semantic level remain the same. In this paper, we propose the modified case grammar, Principal-subordinate Consequence Tagging Case Grammar (PCTCG) to generate uniform alert representive format. PCTCG is formally defined as:
G=

definition. On the other hand, because every attack action gives rise to a certain consequence (for example, obtain related network information or enable further steps of attack to happen), it is important for the security experts to clearly know what consequences the current attack may bring, and to predict what the next step should be. Thus we added the consequence tagging into the set of semantic cases C . The consequence tagging is composed of three alert consequence entities: gather information, making enable, and lauching attack. In case grammar, each verb should have the noun phrases to fill the case slots. Therefore, we apply the Principal-subordinate relation to two alerts and add the subordinate into the set of semantic roles C . When one alert is in the principal phase, we think it as a verb and replace the other alert with its subordinate keywords (noun phasses) and vice versa. If the subordinate keywords is in a specific case relationship with the verb, we think these two alerts are correlated. From this point of view, we add the S into the PCTCG definition. For every alert, we defineas some subordinate keywords which can describe this alert well. S is the set of subordinate key words. For example, consider the Snort alert message RPC sadmind UDP PING, we can present it using PCTCG:
{ {PRC sadnidl UDP PG}Smt,,

{has obiect, possible caue, by mas of; cmsem

tagging},

{SahnidRPC sevice, {+infmmfion 4pxiveledge}, ping, gather infrmlion},

ping}} {Sa}in}

{Mn, C,

F, S}

where Mn is the alert messages set of the sensor with sensor name n , C specifies the set of possible semantic roles between alerts, F is the set of arguments, and S is subordinate keywords. Since there is not a universally agreed set of semantic roles in case grammar, the choice of the set of semantic roles, C depends on the specific applications. One thing needed to be mentioned is that the classical case grammar generouslly includes a set of the selection restrictions on the arguments, which specifies accepting or rejecting case fillers between main verb and the noun phrases[2]. For example, the object of the verb, drinking must be a liquid sbstance. In PCTCG, since the task of the selection restriction of traditional case grammar has been shifted to the the semantic knowledge databases, the set of selection restrictions will not be included in PCTCG

Here, has object, possible cause, by means of, consequence tagging are the semantic roles, port, (buffer overflow, + previledge], portmap GETPOR request, infornation collection fills the slots of above semantic cases respectively, and Sadmind, port are the subordinate keywords.
IV.
SEMANTIC ATTRIBUTES AND SEMANTIC ROLES

In this section, we will describe the semantic roles and attributes of PCTCG. In the field of linguistics, the semantic relations are related to the lexical entities, such as verb, noun, etc., and have the function of establishing the links between the senses of words. At present, there are approximately over one hundred semantic relations have been defined. In this paper, our goal is to find a well-defined set of semantic roles for extracting the attack strategies. We

107

focus on the following questions that security administrators would naturally ask about a attack actions: When did the actions happen? Where did the actions happen? By which means the actions happen? What results did the actions cause? etc.,
Table 2. Alert Semantic Roles vs. Example.
Alert Semantic Roles Example OBJECT has object RPC Sadmind UDP ping Sadmind be object of Finger daemon-* finger request LOCATIN has location SNMP request tcp-> port 161 be location of Port 1080 - SCAN socks proxy attempt METHOD has instrument Scan proxy attempt * scan by means of Usemame, password- login (POSSIBLE) CAUSE cause PRC NETMGT overflow - rsh root be caused by User account- FINGER 0 query PART-WHOLE meronymy port m port 161 holonymy Root* priviledge CONSEQUENCE TAGGING gather information RPC portxnap Sadmind request UDP making enable Reservice rsh root launching attack FINGER redirection attempt

NETMGT PROC SERVICE CLIENT DOAMIN overflow attempt. The semantic network of two alerts is:

semantic attributes and case filler. Be noted that each slot does not include nested structure, which means a slot can not be composed of another slot. Otherwise, when applying correlation rules to semantic network, there will be more than 2 levels of semantic operations which will decrease semantic logic of the correlation extraction. Consider two Snort alerts: RPC Portmap Sadmind request UDP and RPC Sadmind UDP

Node 1: RPC Sadmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow atermpt Node 2: RPC Portmap Sadmind request UDP

Figure 3. An example of semantic network.

Our semantic roles build up two-level hierarchy. The first level is semantic roles and it includes Object, Location, Method, (Possible) Cause, Part-VWhole, and Consequence Tagging. The sencond level shows all semantic attributes in PCTCG and their weights. Semantic attributes are used to acquire the correlate between two alerts bi-directionally. Object role means the receiving end of the action and it has has object and be object of attributes. Since the attack actions generating the alerts sometimes are successful and sometimes just attempts and may fail. The possible cause and cause semantic roles illuminate above situations respectively (The weight ofpossible cause is 3, and the weight of cause is 5). The meronymy (has a object) and holonymy (is a part of) attributes from part-whole role describe the situations that one entity contains other entity. Finally, consequence tagging role explains at which stage the attack may locate: gather information, making enable or launching attacks. Table 2 shows the examples of the semantic roles and attributes. Semantic network is a kind of representation in which the conception nodes are connected by the links representing some type of relationship between the nodes [4]. In this section, we only consider semantic network between two alerts, because our attack scenarios are based on all possible correlations between newly incoming alert and previous alert. The semantic network is a weighed graph consisting of the nodes (PCTCG semantic case fillers) and the edges (PCTCG semantic attributes). On the other hand, it is based on the slots, which is composed of

We defined the correlation rules and apply these rules to the semantic network. The correlation rules try to test the semantic attributes matching between the principle alert and subordinate alert. Suppose we have two alerts: alert A and alert B. We denote alert A's principle case filler and subordinate keyword as A :: filler and A :: keyword respectively. The same is to alert B. We defined the (possible) cause, enable, instrument, object, part-whole, and spatial relations. The correlation rules matching phases are all from the primary alert to the subordinate alert. Because each slot does not include nested structure, the semantic attributes' length is no more than 2. For example, the correlation in figure 3 is:
possible cause rule
Node 1: RPC Sadmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow attempt Node 2: RPC Porstap Sadmind request UDP

Figure 4. Correlation rules.

V.

ALERT CONTEXT WINDOW

In this section, we will describe how to generate the attack scenario instances based on the attack scenario classes. Since the attack scenario classes include all the possible combinations of attack strategies and the attackers may only adopt the subset of the attck strategies to lauch the attacks, we have to consider the alerts context of the specific alert file to find out

108

them. Because of the high volume of the alerts, it is not possible to consider corelations between the interested focus alert and all other alrets. Therefore, we have to find the alerts context window size, and only take consideration of the correlations within the context window and generat the attack scenarios from them. In the natural language processing, context was used to determination the pronumciation, words collocation and words unambiguity [10,11]. Here the alerts context refer to the alerts with the source and destination IP addresses, and timestamps within a certain context window. The alert context window ("ACW" henceforth) size is an important parameter of the alert context, which is the number of alerts before and after the interested alert. What size of the ACW? If the ACW size is too small, the correlated alerts would be absent. On the other hand, if the ACW size is too large, unnecessary computations and correlation noises (unrelated alerts) will be added. In the condition of attack scenarios extraction, the requirement for the ACW is that it should provide enough semantic information, and restrain the correlation noises. However, there is no general method to define the size of context window in the natural language processing. In [9], the context window ą5 can provide 95% context for the linguistic collocations. [12] also set the window size 5 to show the constraints between verbs and arguments. However, small window size can identify the fixed expressions and word collocations which hold over short range. In this paper, we are interested in the semantic correlations between the alerts, therefore, we look forward to the larger alert window size which can cover the semantic knowledge. The mutual information method was used in [10] to decide the size of context for predicting the pronunciation of a word. Mutual information is defined to be: MI(X, Y, d) = p(x, y, d)I(x, y, d)
XcX yEY

attack scenarios alert within the context size of the focus attack scenarios alert y. Figure 5 shows the mutual information at distance d for the DARPA 2000 LLDOS 1.0, LLDoS 2.0.2, and 1999 week 2 Friday datasets of MIT Lincoln Laboratory.
Mutual informatfon vs. alert semantc context window size

0

10

20

Figure 5. Mutual information at various ACW size.

30 40 50 alert semanbc context window size

From the figure 5, we can see that as the alert context window size increases, the degree of the mutual information decreases. At some distances, the associations are very small and do not decrease significantly, which means there are almost no associations between them. We chose 60 as the ACW size. One big difference between the linguistic context window plot and ACW plot is that linguistic context window plot is much smoother than the latter. It is because the attackers may keep trying to gather network or vulnerabilities or compromise hosts which causes p(x, y, d) much higher. Among the 6 kinds of correlations mentioned above, since (possible) cause, object, enable and instrument are related with time sequence, whereas spatial and partwhole are related with space, the ACW ranges are different, as shown in table 3.
Table 3. Context alerts ranges.
Time-sequential
YES YES YES YES NO NO Correlation

I(x, y, d) log2
=

p(x, y, d)

where I(x, y, d) is the association ratio of two units x and y, and p(x) and p(y) are the probabilities of x and y , and p(x, y, d) is the probability that x occurs before or after y at the distance d. If there is an association between x and y, I (x, y, d) >> 0. In natural language processing, x is called the context words and y is the focus words. Here we let x be the

p(X)p(y)

(Possible) Cause

Part-whole

Instrument Object
Spatial

Enable

Context alerts range after 60 alerts after 60 alerts after 60 alerts after 60 alerts before and after 60 alerts before and after 60 alerts

If a focus alert along with the alerts within its ACW range construct the sub-classes of the attack scenarios

109

Possible cause rule, Instrument rule

Node 1: RPC Porimap Sadmind request UDP Node 2: RPC Sadmind UDP Ping Node 3: RPC Sadnmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow attempt Node 4: Reservices rsh root Node 5: Attack response directory list Node 6: TELNET access/ TELNET login incorrect Node 7: Netbios NT null session Node 8: Web MISC doc/access Node 9: Bad-traffic loopback traffic

Figure 5. Alert scenario class of DARPA LLDOS1.0 dataset.
AS (DARPA 2000) =

objective same: attack 172.16.115.20, 172.16.112.10, 172.16.115.50
gather information: RPC Portmap Sadmind request UDP,
<202.77.162.213, 172.16.115.20, 10:08:07.354091> <202.77.162.213, 172.16.112.10, 10:15:10.023115>
<

enable RPC Sadmind UDP Ping,
<

202.77.162.213, 172.16.115.20, 10:08:07.359636>

< 202.77.162.213, 172.16.112.10, 10:15:10.026586>
< 202.77.162.213, 172.16.115.50, 10:15:10.102257>

202.77.162.213, 172.16.115.50, 10:15:10.098496>

RPC Sadmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow
<
<

cause

Telnet access,

202.77.162.213, 172.16.115.20, 10:33:14.728748>
202.77.162.213, 172.16.115.20, 10:33:23.011892
>

<

202.77.162.213, 172.16.115.20, 10:33:32.470221>}\

get control:

RPC Portmap Sadmind request UDP
<

cause
< < <

RPC Sadmind UDP NETMGT_PROC_SERVICE CLIENT_DOMAIN overflow

202.77.162.213, 172.16.115.20, 10:33:10.611612>

202.77.162.213, 172.16.115.20, 10:33:10.621429>

<202.77.162.213, 172.16.115.20, 10:33:12.642958>
< <
<

202.77.162.213,172.16.115.20,10:33:12.652687>
202.77.162.213, 172.16.115.20, 10:33:18.885651>

202.77.162.213, 172.16.115.20, 10:33:18.875888>

202.77.162.213, 172.16.115.20, 10:33:20.913357> 202.77.162.213, 172.16.115.20, 10:33:27.155926>
202.77.162.213, 172.16.115.20, 10:33:29.205551>
insnstrument

<
< <

202.77.162.213, 172.16.115.20, 10:33:20.923039> 202.77.162.213, 172.16.115.20, 10:33:27.165722> 202.77.162.213, 172.16.115.20, 10:33:29.223090>

<

Telnet access,
< <
<

RSERVICES rsh root,
< <
<

172.16.115.20,202.77.162.213, 10:50:01.819752>
172.16.112.10, 202.77.162.213, 10:50:21.064056>

172.16.115.20,202.77.162.213, 10:50:04.146207>
172.16.112.10, 202.77.162.213, 10:50:22.146207>

172.16.115.50, 202.77.162.213, 10:50:37.923074>

172.16.115.20,202.77.162.213, 10:50:38.176538>

launching attacks: bad traffic loopback traffic

Figure 6. Attack scenarios instances of DARPA LLDoS 1.0.

classes, and the source IP addresses are equal to the destination IP addresses or the source IP addresses are equal to destination IP addresses, these alerts and their semantic attributes will build up the attack scenario instances. We developed a scenario description language, which is based on the attack
110

objective and action plans. In order to implement the attack objective, attackers have to take a series attack actions, which can be viewed as the following subobjective: gather information (try to gather the network information and application vulnerabilities), get control (try break into target and get control on

the target), and launching attacks. The scenario description structure is defined as:
AS (attack scenario name) =

REFERENCES [1] Fillmore, C.J., 1977. "The Case for Case Reopened." Studies

objective name:
gather information: < alert message, source IP, dest. IP, timestamp > get control: < alert message, source IP, dest. IP, timestamp >
launching attacks: < alert message, source IP, dest. IP, timestamp >

VI.

SIMULATION

The datasets in our simulation are from the DARPA 2000 and 1999 week 2 alert dataset from MIT Lincoln Laboratory and we set the home net as 1 72.16.112.0, 172.16.115.0 for 2000 DARPA dataset. We used Snort as the IDS sensor. Snort is a lightweight network intrusion detection system capable of logging every possible trace of intrusion attempts [8]. Firstly, we aggregated the duplicate alerts according to the same source IP address and target IP address, and the same consecutive timeslot. After aggregation, the alert file includes 9 different alerts and 125 totally alets. And then we generated the PCTCG format steam of 9 different alerts using the semantic information from the Snort semantic knowledge database. Afterwards, we build up the semantic network of the first two different alerts and try to extract the correlation between them by applying the correlation rules. If they have any correlation, new attack scenario is generated. The new incoming different alert is then correlated with the alerts existing in the attack scenario one by one. By this way, the whole attack scenario is build up. The attack scenario classes and the attack instance description of DARPA 2000 dataset is shown in figure 5 and figure 6 respectively.
VII.

in Syntax and Semantics 8, 59-81. [2] Cook, W., Case Grammar Theory, Washington, DC: Georgetown University Press, 1989. [3] Wei Yan, Edwin Hou, "Extract the attack strategies using alert semantic network", Technical Report, 2004-3, 2004. [4] Vanderwende, L. 1996. The analysis of noun sequences using semantic information extracted from on-line dictionaries. Ph.D. dissertation, Georgetown University, Washington, DC. [5] Peng Ning, Yun Cui, Douglas S. Reeves, "Constructing Attack Scenarios through Correlation of Intrusion Alerts", Proceedings of the 9th ACM Conference on Computer & Communications Security, 245-254. [6] 0. M. Dain and R. K. Cunningham. "Building Scenarios from a Heterogeneous Alert Stream", In IEEE Workshop on Information Assurance and Security, United States Military Academy, West Point, NY, 5-6 June 2001. [7] http://www.ll.mit.edu/IST/ideval/data/2000/LLS_DDOS_1.0. html [8] http://www. Snort.org [9] Martin,W., Al, B. and Sterkenburg, P., "On the processing of text corpus, Lexicography: Principles and Practice", R. Hartmann, New York,1983,56-64. [10] J.M.Lucassen and R.L. Mercer, "An information theoretic approach to the automatic determination of phonemic baseforms", Proceedings of ICASSP, Vol.3, 1984, pp. 42.5.142.5.4. [11] F.Smadja, "Retrieving collocations from text: Xtract", Computational Linguistics, Vol. 19, No. 1, 1993, pp. 143-177. [12] K.Church, "Word association norms, mutual information, and lexicography", Computational Linguistics, Vol. 16, No. 1,1990, pp. 22-29.

CONCLUSION

In this paper, we proposed a semantic scheme to extract the attack strategies for the Web services security. The modified case grammar, PCTCG and semantic network were used to generate the attack scenarios. The focus alerts' mutual information was also applied to determine the alert context window size.

111

