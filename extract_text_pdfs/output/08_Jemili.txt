ATTACK CORRELATION AND PREDICTION SYSTEM BASED ON POSSIBILISTIC NETWORKS
Farah Jemili
Laboratoire RIADI, ENSI, Manouba University Manouba 2010, Tunisia Jmili_farah@yahoo.fr

Montaceur Zaghdoud
Laboratoire RIADI, ENSI, Manouba University Manouba 2010, Tunisia Montaceur.zaghdoud@ensi.rnu.tn

Mohamed Ben Ahmed
Laboratoire RIADI, ENSI, Manouba University Manouba 2010, Tunisia Mohamed.benahmed@riadi.rnu.tn

Abstract. Correlating security alerts and discovering attack strategies are important and challenging tasks for security analysts. Recently, there have been several proposals of attack plans recognition. Most of the proposed approaches focus on the aggregation and analysis of raw security alerts, and build basic or low level attack scenarios. However, in security context, we cannot always observe all of the attacker's activities, and often can only detect incomplete attack steps due to the limitation or deployment of security sensors. Therefore, the attack plan recognition system should have the capability of dealing with partial order and unobserved activities. In this paper we propose an approach based on possibilistic reasoning to correlate attack scenarios and identify their relationship. Based on the correlation results, we further apply inference to recognize the attack plans and predict upcoming attacks. The main advantage of the use of possibilistic networks in our work is that they can handle directly imprecise, i.e. set-valued, information. Keywords: attack correlation, attack plans prediction, possibilistic networks,HCS learning algorithm, junction tree inference

I. INTRODUCTION
The proliferation of Internet access to every network device, the use of distributed rather than centralized computing resources, and the introduction of network-enabled applications has rendered traditional network-based security infrastructures vulnerable to serious attacks. The term attack can be defined as a combination of actions performed by a malicious adversary to violate the security policy of a target computer system or a network domain [1]. Generally, an attack starts with an intrusion to some corporate network through a vulnerable resource and then launching further actions on the network itself. Therefore, we can define the attack prediction process as the sequence of elementary actions that should be performed in order to recognise the attack strategy. The use of distributed and coordinated techniques in attacks makes their detection more difficult. Different events and specific information must be gathered from all sources and combined in order to identify the attack plan. Therefore, it is necessary to develop an advanced attack strategies prediction system that can detect attack strategies so that appropriate responses and actions can be taken in advance to minimize the damages and avoid potential attacks.

Recently, there have been several proposals of attack plans recognition. Most of the proposed approaches focus on the aggregation and analysis of raw security alerts, and build basic or low level attack scenarios [2]. However, in security context, we cannot always observe all of the attacker's activities, and often can only detect incomplete attack steps due to the limitation or deployment of security sensors. Therefore, the attack plan recognition system should have the capability of dealing with partial order and unobserved activities. In this paper we propose a plan recognition system which recognizes the attacker's attack plan and intentions. In our approach, we apply graph techniques based on possibilistic reasoning to correlate attack scenarios and identify their relationship. Based on the correlation results, we further apply inference to recognize the attack plans and predict upcoming attacks. This paper is organized as follows. Section 2 discusses the related work. In Section 3 and 4, we introduce respectively possibilistic networks and junction tree inference algorithm upon which we build our new techniques. Section 5 describes our attack correlation approach and prediction system. We report our experiment and results in Section 6. Section 7 concludes this paper and discusses some future research directions.

II. RELATED WORK
Recently, there have been several proposed techniques of alert correlation and attack scenario prediction. Valdes and Skinner [3] use probabilistic-based reasoning to correlate alerts by measuring and evaluating the similarities of alert attributes. Alert aggregation and scenario construction are conducted by enhancing or relaxing the similarity requirements in some attribute fields. Porras et al. design a Ť mission-impact-based ť correlation system with a focus on the attack impacts on the protected domains [4]. The system uses clustering algorithms to aggregate and correlate alerts. Security incidents are ranked based on the security interests and the relevance of attack to the protected networks and systems. Debar and Wespi [5] apply backward and forward reasoning techniques to correlate alerts with duplicate and consequence relationship. They use clustering algorithms to detect attack scenarios and situations. This approach predefines consequences of attacks in a configuration file. Morin and Debar [6] apply chronicle formalism to aggregate and correlate alerts. The approach performs attack scenario pattern recognition based on known malicious event sequences. Therefore, this approach is similar to misuse detection and cannot detect new attack sequences. Ning et al. [7], Cuppens and Mičge [8] and Cheung et al. [9] build alert correlation systems based on matching the pre/post conditions of individual alerts. The idea of this approach is that prior attack steps prepare for later ones. Therefore, the consequences of earlier attacks correspond to the prerequisites of later attacks. The correlation engine searches alert pairs that have a consequence and prerequisite matching. Further correlation graphs can be built with such alert pairs [7]. One challenge to this approach is that a new attack cannot be paired with any other attacks because its prerequisites and consequences are not defined. Recently, Ning et al. [10] have extended the pre/post condition-based correlation technique to correlate some isolated attack scenarios by hypothesizing missed attack steps. Our approach differs from other work in the following aspects. First, our approach integrates two complementary types of attacks: attacks that are directly related because an earlier attack enables or positively affects the later one, based on security alerts of systems and networks, and attacks that have temporal and statistical patterns eventhough they do not have obvious or direct

relationship in terms of security and performances mesures. Second, we apply possibilistic networks to correlate attack scenarios and identify their relationship. Our approch can especially deal with missing information and therefore can be used to discover new attack strategies.

III. POSSIBILISTIC NETWORKS
Possibilistic networks are directed acyclic graphs (DAG), where each node encodes a variable and every edge represents a Ť causal ť relationship between two variables. Uncertainty is expressed by conditional possibility distributions for each node in the context of its parents [11,12]. Several researchers were recently interested in Possibilistic networks. Rudolf Kruse and Christian Borgelt in [11] wrote that the main advantage of the possibilistic networks over the probabilistic networks is that they can handle directly imprecise, i.e. set-valued, information. They indicated that this is especially useful, if an inference network is to be learned from data and the used database contains a considerable amount of missing values. Whereas in order to learn a probabilistic network these tuples have to be discarded or treated in some complicated manner, possibilistic network learning can easily take them into account and can thus, without problem, make use of all available information. POSSIBILISTIC NETWORK LEARNING ALGORITHM Possibilistic learning algorithms aim to build possibilistic networks from data. The most known algorithms for causal networks construction are HCS and POSSCAUSE. The first one is used to recover simple DAGs and the second one to recover general DAGs [13]. Possibilistic network learning is conducted using the HCS algorithm, a hybrid algorithm proposed by Sangüsa et al. [14],[15]. It is based on Huete and Campos' CH algorithm; it uses a measure of non-specificity to choose among possible subgraphs. Klir in [16] and [17] defined a measure called Uuncertainty for the non-specificity associated with a possibility distribution. Given a variable X with domain {X1,...,Xn } and an associated possibility distribution x(xi), the U-uncertainty for (x) is : U((x)) =  lg2 card (X ) d
0 1

Where X is the -cut for X, That is, X= {xi such that  (xi)  }. U-uncertainty can be extended for joint and conditional distributions [16,17]. HCS algorithm is devised to recover a special case of network, a causal polytree. Causal polytrees can be seen as simple DAGs, where only a single path exists between any two nodes. A polytree as defined in [14] is a kind of DAG where all nodes with common ancestors do not share common descendants. The name "polytree" stems from the fact that these structures can be seen as a collection of several causal trees merged together where arrows converge head to head. Singly connected graphs are graphs that allow a certain kind of cycles: simple cycles. Execution time of HCS algorithm is in the order of (n2) where n is the number of variables in the database.
HCS learning Algorithm

HCS algorithm creates the sheaths corresponding to each variable in the domain, orients them by using the U-uncertainty measure and then merges the resulting subgraphs to obtain the final DAG, which is a singly connected graph. A sheath xi for variable xi is the subgraph

corresponding to those other variables in U that are direct causes and effects of xi. Sheaths are obtained by repeatedly expanding the set of variables that are marginally dependent with respect to xi, those yi in U for which I(xi||yi) holds. This set is called  xi [15]. HCS Algorithm 1. For each xi in U a) Calculate xi b) Calculate xi c) For each y in xi ! Calculate the set of possible neighbours Nxi (y) ! If Nxi (y)=Ř then eliminate y from xi d) Create Gxi For each y in xi If there exists no link between xi and y Then If xi is a root node Then ! Create graph G1 by adding to G1 the link y  x ! Calculate U (G1) ! Create graph G2 by adding to G2 the link x  y ! Calculate U (G2) If U (G1) < U(G2) then Gxi=G1 else Gxi=G2 If xi is not a root node Then add the link x  y 2. Merge all Gxi to obtain G. 3. If resulting graph is not simple then FAIL

IV. JUNCTION TREE INFERENCE ALGORITHM
The most common method to perform discrete exact inference is the Junction Tree algorithm developed by Jensen [18]. The idea of this procedure is to construct a data structure called a junction tree which can be used to calculate any query through message passing on the tree. The first step of JT algorithm creates an undirected graph from an input DAG through a procedure called moralization. Moralization keeps the same edges, but drops the direction, and then connects the parents of every child. Junction tree construction follows four steps: ! JT Inference Step1: Choose a node ordering. Note that node ordering will make a difference in the topology of the generated tree. An optimal node ordering with respect to the junction tree is NP-hard to find. ! JT Inference Step2: Loop through the nodes in the ordering. For each node Xi, create a set Si of all its neighbours. Delete the node Xi from the moralized graph. ! JT Inference Step3: Build a graph by letting each Si be a node. Connect the nodes with weighted undirected edges. The weight of an edge going from Si to Sj is |Si  Sj |. ! JT Inference Step4: Let the junction tree be the maximal-weight spanning tree of the cluster graph.

V. ATTACK CORRELATION AND PREDICTION SYSTEM
In this section, we introduce our correlation mechanism based on possiblistic reasoning technique. In particular, we apply the HCS algorithm for correlation and junction tree to possibilistic inference. In our approach, we first conduct attack aggregation and clustering in order to reduce the redundancy of attacks while retaining important attributes such as source IP, destination IP and port(s). The corresponding algorithm for attack aggregation and clustering can be found in [21]. Attack Correlation The notion of attack correlation as the process of aggregating attacks related to the same event has been studied in [22], [23], and [24]. They define a similarity relationship between attack attributes to aggregate attacks. The second main approach of attack correlation as the process of detecting scenarios of attacks has been discussed in [25], [26], and [27]. In our proposal we use the latter approach, introducing the notion of attack correlation as the process of finding a set of attacks in the stream of intrusion detection alerts organized into a scenario. In practice, we observe that when a host is compromised by an attacker, it usually becomes the target of further attacks or a stepping-stone for launching attacks against other systems. Therefore, the consequences of an attack on a compromised host can be used to reason about a possible matching with the goals of another attack. It is possible to address this correlation by defining pre-/post-conditions of individual attacks and applying condition matching. However, it is infeasible to enumerate and precisely encode all possible attack consequences and goals into pre-/post-conditions. Therefore, we apply possiblistic reasoning to attack correlation by incorporating system indicators of attack consequences and prior knowledge of attack transitions. In this section, we discuss how to apply possibilistic reasoning to attack consequences and goals in order to discover the subtle relationships between attack steps in an attack scenario. Attack Correlation using Possibilistic Networks In our approach, we correlate two complementary types of attacks. First we correlate attacks that are directly related because an earlier attack enables or positively affects the later one [28]. For example, a port scan may be followed by a buffer overflow attack on a scanned service port. We apply possibilistic-based correlation mechanism to reason and correlate attacks based on security states of systems and networks. Second, we correlate attacks that have temporal and statistical patterns even though they do not have obvious or direct relationship in terms of security and performance measures [29]. We apply possibilistic-based correlation mechanism to detect the "causal" relationship between attacks. We apply the HCS algorithm for the correlation process. The HCS algorithm creates the sheaths corresponding to each attack, orients them by using the U-uncertainty measure and then merges the resulting sub graphs to obtain the final DAG. The final DAG is a singly connected graph, where each node encodes an attack and every edge represents a Ť causal ť relationship between two attacks. HCS algorithm takes as input a list of existing conditional dependencies between variables. Initial values of CPTs are pre-defined based on our experience and domain knowledge. CPT values associated with each node adapt to new evidence and therefore can be updated accordingly.

For an attack pair (Ai,Aj), if its correlation value computed by the possibilistic-based model, denoted (Ai,Aj), is larger than a pre-defined threshold, e.g., 0.5, then we say that attack Aj is "caused" by attack Ai . A correlation graph can be constructed based on pairs of correlated attacks. A correlation graph is defined as a directed graph where each edge Eij represents a "causal" relationship from attack Ai to attack Aj. Attacks with "causal" relationship compose the nodes in the correlation graph.We denote the node corresponding to the "causal" attack as causal node, and the node corresponding to the "effected" attack as effected node. A threshold t is pre-defined and attack Ai is considered to be "caused" by attack Aj only when (Ai,Aj) > t. In constructing correlation graphs, we only include the correlated attack pairs whose possibilistic correlation values are over the threshold. In a correlation graph, each edge is associated with a correlation possibility from causal node to effected node. Therefore, we can perform quantitative analysis on the attack strategies. Each path in the graph is potentially a subsequence of an attack scenario. Therefore, based on the possibility associated with each edge, for any two nodes in the graph that are connected by multiple paths, we can compute the overall possibility of each path by (A1,An)=(Ai|pai), where pai represents direct parents of Ai [11], and then rank order and select the one with the highest overall correlation possibility as the most likely sequence connecting the two attacks. Attack correlation with possibilistic networks has several advantages. First, it can incorporate prior knowledge and expertise by populating the CPTs. It is also convenient to introduce partial evidence and find the possibility of unobserved variables. Second, it is capable of adapting to new evidence and knowledge by belief updates through network propagation. Third, the correlation output is possibility rather than a binary result from a logical combination. We can adjust the correlation engine to have the maximum detection rate or a minimum false positive rate by simply adjusting the possibility threshold. Attack plan prediction Given a stream of alerts, we first analyze one or more features of alerts and output results as evidences to the inference process. The inference process based on junction tree algorithm consists in propagating evidences within the possiblistic network. Each path in the graph is potentially a subsequence of an attack scenario. Therefore, based on the possibility degree associated with each edge, we can perform quantitative analysis on the attack strategies. The advantage of our approach is that we do not require a complete ordered attack sequence for inference. Due to possiblistic networks, we have the capability of handling partial order and unobserved activity evidence sets. In practice, we cannot always observe all of the attacker's activities, and can often only detect partial order of attack steps due to the limitation or deployment of security sensors. For example, security sensors such as IDS can miss detecting intrusions and thus result in an incomplete alert stream. In the final selection of possible future goal or attack steps, we can either select the node(s) that has the maximum belief value or the one(s) whose belief value is above a threshold. Figure 1 presents architecture for our system:

Attack scenarios

Correlation (HCS algorithm)

Possibilistic Network

Assesment alerts

Junction Tree Inference

Attack plan prediction

Figure 1: Attack correlation and prediction system

VI EXPERIMENTATION
To evaluate the effectiveness and validity of our attack correlation and prediction system, we applied our algorithms to one of the datasets of the Grand Challenge Problem (GCP) version 3.1 provided by DARPA's Cyber Panel program [19, 20], Scenario I. GCP version 3.1 includes two innovative worm attack scenarios to specifically evaluate attack correlation. In GCP, multiple heterogeneous security systems, e.g., network-based IDSs, hostbased IDSs, firewalls, and network management systems, are deployed in several network enclaves. Therefore, GCP attacks are from both security systems and network management system. In the GCP Scenario I, there are multiple network enclaves in which attacks are conducted separately. We select a network enclave as an example to show the correlation process (Figure 2). In scenario I, there are a little more than 25,000 attack scenarios output by heterogeneous security devices in all enclaves. After attack fusion and clustering, we have around 2,300 attacks. In our example network enclave, there are 320 attacks after aggregation. When applying HCS learning algorithm, we correlate each attack with its Ť causal ť attacks. Figure 2 shows the resulting correlation graph, where DB_FTP_Globbing_Attack represents a buffer over flow attack against the database server, DB_NewClient_Target indicates a suspicious incoming connection to the database server from another server, DB_Illegal_File_Access represents the illegal access (write or read) to the database server, DB_NewClient indicates a suspicious outbound connection from database to an external host, and Loki means a suspicious data export via covert channel.

Plan_Loki

DB_NewClient_Target

DB_FTP_Globbing_Attack

Plan_NewClient

DB_IllegalFileAccess Mail_NewClient Loki

Plan_HostStatus DB_NewClient Plan_RootShareMounted WS1_NewClient Plan_IllegalFileAccess WS1_FileSystemIntegrity

Mail_RootShareMounted

Mail_IllegalFileAccess

Figure 2: Correlation graph based on possibilistic network As discussed in Section 5.2, for any two nodes in the correlation graph that are connected on multiple paths, we can compute the possibility of attack transition along each path, then rank and select the one with highest overall value. For example, from node DB_ FTP_ Globbing_ Attack to node DB_NewClient in the graph shown in Figure 2, there are 6 paths that connect these two nodes. Based on the possibility or confidence associated on the edge, we can compute the value of each path and rank the order. For example, the overall confidence for the attack path DB_FTP_Globbing_AttackLokiDB_NewClient is: (DB_FTP_Globbing_Attack,Loki, DB_NewClient)=(DB_FTP_Globbing_Attack)*(Loki|DB_FTP_Globbing_Attack)*(DB_Ne wClient|Loki). Table 1 shows the ordered multi-paths according to the corresponding path values. From the table, we can see that it is more confident to say that the attacker is more likely to launch FTP_Globbing_Attack against the Database Server, then New Client attack from the Database Server that denotes a suspicious connection to an external site. Table 1: Ranking of paths from node DB_FTP_Globbing_Attack to node DB_NewClient.  denotes (DB_FTP_Globbing_Attack) Order Nodes Along the Path Score Path1 DB_FTP_Globbing_AttackDB_ NewClient *0.68 Path2 DB_FTP_Globbing_AttackLokiDB_NewClient *0.52 Path3 DB_FTP_Globbing_AttackDB_NewClient_TargetDB_ NewClient *0.43 Path4 DB_FTP_Globbing_AttackDB_IllegalFileAccessDB_NewClient *0.41 Path5 DB_FTP_Globbing_AttackDB_NewClient_TargetLokiDB_NewClient *0.37 Path6 DB_FTP_Globbing_AttackDB_NewClient_TargetDB_IllegalFileAccess *0.18 DB_NewClient Experimentation results: The correlation rate can be defined as the rate of attacks correctly correlated by our system. False positive correlation rate is the rate of attacks correlated by the system when no relationship exists

between them. False negative correlation rate is the rate of attacks having in fact relationship but the system fails to identify them as correlated attacks. Table 2 shows experimentation results measured by our system: Table 2: Experimentation results Correlation rate 92.5 % False positive correlation rate 6.5 % False negative correlation rate 6.3 %

Table 2 shows high performance of our system in attack correlation and prediction. The use of possibilistic networks was especially useful, because we have deal with a lot of missing information.

Figure 3: Experimentation results Discussion Applying our algorithms of scenario correlation and attack prediction to the GCP data set, we correlate attack scenarios and make correct prediction on the upcoming type of attack. In our approach, attack scenarios dataset is the basis for automatically correlating attack scenarios at a higher level and conducting possibilistic inference for attack prediction. We argue that, in practice, the attack scenarios dataset can be defined as comprehensively as possible by security experts with their knowledge of attacks and attack strategies, as well as the understanding of networks and systems under protection and the mission goals. The attack scenarios dataset can be expanded or re-defined with the new knowledge of attacks or attack scenarios. Therefore, we believe that our approach is practical and has the potential to provide security operators a way to automatically correlate attack scenarios and predict future attacks based on the observed evidence and networks under protection.

VII. CONCLUSION
In this paper, we presented an approach to identify attack plans and predict upcoming attacks. We developed a possibilistic network based system to correlate attack scenarios based on their relationship. We conducted inference to evaluate the likelihood of attack goal(s) and predict potential upcoming attacks based on the possibilities of attack transition.

Our system demonstrates high performance when correlating and predicting attacks. This is due to the use of possibilistic networks that are especially usefull when dealing with missing information. There are still some challenges in attack plan recognition. First, we will apply our algorithms to alert streams collected from live networks to improve our work. Second, our system can be improved by integrating an expert system which is able to provide recommendations based on attack scenarios prediction.

REFERENCES
[1] [2] [3] [4] [5] [6] [7] [8] [9] [10] F. Cuppens and R. Ortalo. LAMBDA: A language to model a database for detection of attacks. In Third International Workshop on the Recent Advances in Intrusion Detection (RAID'2000), Toulouse, France, 2000. X. Qin andW. Lee. Discovering novel attack strategies from INFOSEC alerts. In Proceedings of the 9th European Symposium on Research in Computer Security, Sophia Antipolis, France, September 2004. A. Valdes and K. Skinner. Probabilistic alert correlation. In Proceedings of the 4th International Symposium on Recent Advances in Intrusion Detection (RAID), October 2001. P. A. Porras, M. W. Fong, and A. Valdes. A Mission-Impact-Based approach to INFOSEC alarm correlation. In Proceedings of the 5th International Symposium on Recent Advances in Intrusion Detection (RAID), October 2002. H. Debar and A. Wespi. The intrusion-detection console correlation mechanism. In 4th International Symposium on Recent Advances in Intrusion Detection (RAID), October 2001. B. Morin and H. Debar. Correlation of intrusion symptoms: an application of chronicles. In Proceedings of the 6th International Symposium on Recent Advances in Intrusion Detection (RAID 2003), Pittsburgh, PA, September 2003. P. Ning, Y. Cui, and D.S. Reeves. Constructing attack scenarios through correlation of intrusion alerts. In 9th ACM Conference on Computer and Communications Security, November 2002. F. Cuppens and A. Mi`ege. Alert correlation in a cooperative intrusion detection framework. In Proceedings of the 2002 IEEE Symposium on Security and Privacy, pages 202­215, Oakland, CA, May 2002. S. Cheung, U. Lindqvist, and M. W. Fong. Modeling multistep cyber attacks for scenario recognition. In Proceedings of the Third DARPA Information Survivability Conference and Exposition (DISCEX III), Washington, D.C., April 2003. P. Ning, D. Xu, C. G. Healey, and R. A. Amant. Building attack scenarios through integration of complementary alert correlation methods. In Proceedings of the 11th Annual Network and Distributed System Security Symposium (NDSS'04), San Diego, CA, February 2004. Rudolf Kruse and Christian Borgelt, 2001. Possibilistic Networks: Data Mining Applications. Dept. of Knowledge Processing and Language Engineering. Otto-vonGuericke University of Magdeburg Universität splatz 2, D-39106 Magdeburg, Germany, 2001.

[11]

[12] [13] [14] [15] [16] [17] [18] [19] [20] [21] [22] [23] [24] [25] [26] [27] [28]

S. Benferhat, S. Smaoui. Possibilistic networks with locally weighted knowledge bases. 4th International Symposium on Imprecise Probabilities and Their Applications, Pittsburgh, Pennsylvania, 2005. J. Gebhardt, R. Kruse, Learning possibilistic networks from data, in: Proceedings of the Fifth International Workshop on Artificial Intelligence and Statistics, Fort Lauderdale, FL, 1995. R. Sanguesa, U. Cortes. Learning causal networks from data: a survey and a new algorithm for recovering possibilistic causal networks. AI Communications 10, 31­61. 1997 R. Sanguesa, J. Cabos, U. Cortes. Possibilistic conditional independence: A similaritybased measure and its application to causal network learning. International Journal of Approximate Reasoning 18, 145-167., 1988. G. Klir, T. Folger. Fuzzy Sets, Uncertainty and Information, Prentice-Hall, Englewood Cliffs, NJ, 1988. M. Higashi, G. Klir, Measures of uncertainty and information based on possibility distributions, International Journal of General Systems 9, 103:115, 1983. Frank Jensen, Finn V. Jensen and Soren L. Dittmer. From influence diagrams to junction trees. Proceedings of UAI, 1994. DAPRA Cyber Panel Program. DARPA cyber panel program grand challenge problem (GCP). http://www.grandchallengeproblem.net/, 2003. J. Haines, D. K. Ryder, L. Tinnel, and S. Taylor. Validation of sensor alert correlators. IEEE Security & Privacy Magazine, January/February, 2003. X. Qin and W. Lee. Statistical causality analysis of infosec alert data. In Proceedings of the 6th International Symposium on Recent Advances in Intrusion Detection (RAID 2003), Pittsburgh, PA, September 2003. H. Debar and A. Wespi. Aggregation and Correlation of Intrusion-Detection Alerts. In Fourth International Workshop on the Recent Advances in Intrusion Detection (RAID'2001), Davis, USA, October 2001. A. Valdes and K. Skinner. Probabilistic alert correlation. In Fourth International Symposium on Recent Advances in Intrusion Detection (RAID2001), pages 58­68, Davis, CA, USA, October 2001. F. Cuppens. Managing Alerts in a Multi-Intrusion Detection Environment. In 17th Annual Computer Security Applications Conference New-Orleans, New-Orleans, USA, December 2001. P. Ning, Y. Cui, and D. Reeves. Constructing Attack Scenarios Through Correlation of Intrusion Alerts. In proceedings of the 9th ACM conference on Computer and communication security, pages 245­254, Washington DC, USA, 2002. F. Cuppens, F. Autrel, A. Mi`ege, and S. Benferhat. Recognizing malicious intention in an intrusion detection process. In Second International Conference on Hybrid Intelligent Systems (HIS'2002), pages 806­817, Santiago, Chile, October 2002. S. Benferhat, F. Autrel, and F. Cuppens. Enhanced correlation in an intrusion detection process. In Mathematical Methods, Models and Architecture for Computer Network Security (MMM-ACNS 2003), St Petersburg, Russia, September 2003. X. Qin andW. Lee. Discovering novel attack strategies from INFOSEC alerts. In Proceedings of the 9th European Symposium on Research in Computer Security, Sophia Antipolis, France, September 2004.

