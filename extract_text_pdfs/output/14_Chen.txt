Expert Systems with Applications 41 (2014) 7068­7076

Contents lists available at ScienceDirect

Expert Systems with Applications
journal homepage: www.elsevier.com/locate/eswa

A wireless multi-step attack pattern recognition method for WLAN
Guanlin Chen a,b, Yujia Zhang c, Can Wang b,
a

School of Computer and Computing Science, Zhejiang University City College, Hangzhou 310015, PR China College of Computer Science, Zhejiang University, Hangzhou 310027, PR China c Citigroup Software Technology and Services (China) Limited, Shanghai 201203, PR China
b

a r t i c l e

i n f o

a b s t r a c t
Intrusion detection and prevention technology has been broadly applied to wired networks as an important means to protect network security. However, few work in this area has been extended to the WLAN. In this paper, we propose a wireless multi-step attack pattern recognition method (WMAPRM) based on correlation analysis with the main attributes of the IEEE 802.11 frame. The method consists of six steps: clustering wireless intrusion alerts, constructing a global attack database, building candidate attack chains, filtering candidate attack chains, correlating multi-step attack behaviors and recognizing multistep attack patterns. Experimental results in real world environment show that WMAPRM is capable of identifying highly correlated multi-step attack patterns such as WEP crack with ARP + Deauthentication Flood, WEP crack with wesside-ng, config file stealing attack and authentication session hijack attack etc. The method is expected to improve both wireless intrusion detection and prevention performance in practical WLAN security scenarios. Ó 2014 Elsevier Ltd. All rights reserved.

Article history: Available online 5 June 2014 Keywords: Multi-stage attack Pattern recognition WLAN Correlation analysis Network security

1. Introduction The rapid development of computer network and the steady increase in WLAN (Wireless Local Area Networks) users have given rise to the WLAN security issue. Trustwave, an American security information security company, listed the top 10 networks risks in which two are related to WLAN: `Wireless Clients Probe for ESSID's from Stored Profiles When Not Connected' and `Continued Use of Wired Equivalent Privacy (WEP) Encryption' (Percoco, 2012). Thus, how to ensure the security of the WLAN has been a research hotspot in network security field. Intrusion detection and prevention technologies, as important methods to implement network safety protection, have been broadly applied in traditional wired network. However, because of the specialty of the wireless network, there are still lots of difficulties to apply them to WLAN. Attack pattern mining based on illegal behavior detection in WLAN and recognition of the steps in a wireless multi-step attack is an effective measure to ensure the wireless network security. Existing wireless intrusion detection and prevention systems aim to detect single-step attacks in WLAN and are incompetent in discovering multi-step attack behaviors. For instance, the previously mentioned WEP Encryption may be cracked by various attacks such as ARP (Address Resolution Protocol) + Deauthentication Flood, wesside-ng (an automated WEP cracking tool) etc. If we
 Corresponding author. Tel.: +86 13958119682; fax: +86 571 87953955.
E-mail address: wcan@zju.edu.cn (C. Wang). http://dx.doi.org/10.1016/j.eswa.2014.05.029 0957-4174/Ó 2014 Elsevier Ltd. All rights reserved.

can identify that the attacker's purpose is to crack the WEP key, pre-warning can be raised and appropriate measures can be deployed to improve WLAN security. In this paper, we propose a wireless multi-step attack pattern recognition method (WMAPRM) to detect attacks in WLAN by correlation analysis based on the main properties of IEEE 802.11 frame. WMAPRM can be easily applied to the practical scenarios of WLAN attack, and detect typical wireless attack patterns efficiently. Therefore, it is an effective mean for detecting the multistep attacks in the early stage. WMAPRM proposed in this paper consists of six individual steps: clustering wireless intrusion alerts, constructing a global attack database, building candidate attack chains, filtering candidate attack chains, correlating multi-step attack behaviors and recognizing multi-step attack patterns. The reminder of this paper is organized as follows. Section 2 discusses the related works. In Section 3, we introduce the overall framework of WMAPRM. Section 4 describes the implementation of each step of the technique in detail. We introduce our experiment environment of our research and report results in Section 5. Section 6 concludes the research work of this paper and discusses some future research direction.

2. Related works Intrusion detection and prevention has attracted a lot of attentions from research communities. In recent years, intelligent tech-

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

7069

niques such as pattern recognition are tentatively applied to the intrusion detection and prevention with some encouraging results. Geib and Goldman (2001a, 2001b) brought the plan recognition into intrusion detection and proposed an attack intention recognition algorithm to improve network security by solving the plan recognition problem in a hostile environment. Sheyner, Haines, Jha, Lippmann, and Wing (2002) proposed a method of attack recognition by constructing attack intention spontaneously. The attack intention can be generated automatically by the model checker. However the real attack intention is difficult to be pinned down precisely from the simulation. Ning, Cui, and Reeves (2002) applied correlation analysis to the logics before and after an attack to construct multi-step attack scenarios and identify attack patterns using the rules that correlate the precondition and the follow-up results of multi-step attacks. Cuppens and Miege (2002) also used similar correlation analysis method by describing the predicate logic with Prolog, and generated the correlation rules based on the preconditions and the results of the attacks. Hellerstein, Ma, and Perng (2002) extended the correlation analysis with the expert knowledgebase to discover actionable patterns in event data. Ning, Cui, Reeves, and Xu (2004) integrated the alert correlation method into TIAA (Toolkit for Intrusion Alert Analysis) package to support analyzing the correlation between the alerts. Qin and Lee (2004) used the causal network method to identify network attacks. Their method first constructs an attack tree and defines the attack rule base to correlate the alert datasets, then converts the attack tree into causal network to predict the attack plan. Wang, Ghorbani, and Li (2010) proposed a quantitative method to calculate the alerts correlation degree by combining the IP information of the alerts and analyzed the correlation between the attacks to mine the pattern of the multi-step attacks. Koc, Mazzuchi, and Sarkani (2012) proposed a network intrusion detection system based on a Hidden Naive Bayes (HBS) multiclass classifier. Shin, Lee, Kim, and Kim (2013) proposed a novel probabilistic approach using a Markov chain for probabilistic modeling of abnormal events in network systems. Kim, Lee, and Kim (2014) proposed a novel hybrid intrusion detection method based on the C4.5 decision tree and one-class SVM (Support Vector Machine). Most of the existing plan recognition methods only apply to wired networks. The data sets used in these work, including DARPA 1998, DARPA 1999, DARPA 2000 provided by MIT Lincoln lab (Lippmann, Haines, Fried, Korba, & Das, 2000) and KDD Cup 1999 (Yang, Yun, & Li, 2006) only contain attack information from wired network. The dataset LLDOS (Lincoln Laboratory Scenario (DDOS)) 1.0 and LLDOS 2.0.2 included in the DARPA 2000 is widely applied to evaluate the efficiency of intrusion detection correlation algorithms and multi-step attack pattern recognition methods. Attack detection in wireless network is a relatively new research topic and no WLAN attack scenarios are involved in these existing data sets. Characteristics of the attack behavior in a WLAN environment vary from those in a wired network. Therefore the above-mentioned data sets are not suitable for evaluating the WLAN attack pattern recognition methods. For instance, wired network attack pattern recognition chiefly focuses on the package information from the network layer and the upper layers such as IP address, port and application layer protocol etc. In contrast, attackers in a wireless environment mainly relies on MAC (Media Access Control) address and other information from the physical layer and the data link layer since it is impossible to get the IP address at this moment. In fact, no IP address will be allocated in an encrypted WLAN before the WEP or WPA (Wi-Fi Protected Access) authentication is passed. Therefore the emphasis of attack recognition in WLAN is placed on the MAC address, channel and beacon frames and other contents from layers below the network layer. Hence it

is difficult to apply pattern recognition methods from wired network directly to the detection of attacks in a wireless environment. 3. Overview of WMAPRM The WMAPRM method proposed in this paper draws on the correlation analysis method (Cuppens & Miege, 2002; Ning et al., 2002) and the automatic multi-step attack recognition method (Wang et al., 2010). By comprehensively analyzing the information from the WLAN environment, the AP (Access Point) and the IEEE 802.11 wireless data package, our WMAPRM method is capable of efficiently detecting multi-step attacks in WLAN. The overall framework of the WMAPRM method in Fig. 1 shows the following six steps: (1) Clustering wireless intrusion alerts: monitoring the IEEE 802.11 a/b/g wireless channel through the wireless sensors (such as Snort-Wireless), and capturing all the packages and the original alerts (such as Snort-Wireless alerts) transmitted in the WLAN. After the original alerts are processed, the unrelated and duplicated alerts will be eliminated, and the original alerts are clustered into the hyper alerts to prepare for the pattern mining of the subsequent multi-step attacks. (2) Constructing a global attack database: categorizing the hyper alerts based on the BSSID (Basic Service Set Identifier) information collected from APs, and constructing the global attack database for the APs in a WLAN ordered by attack time. (3) Building candidate attack chains: based on the alerts' time window, analyzing the source MAC address and the destination MAC address, and constructing candidate attack chains by querying the relevant information from the global attack database. (4) Filtering candidate attack chains: removing the candidate attack sub chains and duplicated candidate attack chains to improve the performance of the subsequent attack pattern mining.

Fig. 1. Overall framework of the WMAPRM method.

7070

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

(5) Correlating multi-step attack behaviors: defining and calculating the alerts' correlativity value of the wireless multistep attacks, and evaluating the correlation between two hyper alerts to provide the foundation for the subsequent multi-step attacks pattern recognition. (6) Recognizing multi-step attack patterns: calculating the correlativity value of the neighboring attacks within the attack chains, then removing the attack chains whose correlativity is lower than the predefined threshold, and finally recognizing the pattern of the wireless multi-step attacks. 4. Implementation of WMAPRM 4.1. Clustering wireless intrusion alerts The alert clustering process consists of three steps: alert formatting, alert reduction and alert classification. Firstly, original alerts captured by the intrusion detection system installed in the wireless sensors are preprocessed to enrich the alerts' format of the Intrusion Detection Message Exchange Format (IDMEF). We add the following information in formatting: AP's SSID (Service Set Identifier), channel, MAC address, signal strength, encryption status and encryption mechanism etc. The enriched format can better characterize the WLAN environment. Secondly, alert reduction step will reduce large amounts of unrelated and duplicated alert information in the data set. Finally, the information will be categorized using the SSID of an AP, MAC address of the attack source and the AP's address etc., and clustering alert information into hyper alerts will map attack characteristics to a specific security alert. Since the IDMEF is proposed mainly for the wired environment and lacks support for WLAN, we provide some extensions for the format. Fig. 2 indicates the class diagram of the Alert class obtained from the improvement based on the IDMEF. The main improvement we make is to add the following three classes of additional core information in the IDMEF: (1) AP class with alert target, which describes the property information of AP existing in the WLAN environment, mainly including the MAC address, SSID, BSSID, vendor, channel, speed, signal, encryption, encryption type and IP address. (2) AdditionalData class with extended alert, in which we add some important information of the wireless frame transmitted by the WLAN, consisting of MAC frame related informa-

tion like Type, Subtype, To_DS, From_DS, More_Flags, Retry, Pwr_Mgt, More_Data, WEP, Order, Duration_ID, Seq_Num, and Frag_Num. (3) Analyzer class with extended alert, in which we add the property information of the wireless sensors in the distributed environment, involving sensors' Agent_Type, Agent_ID, Agent_SID and Agent_CID. After formatting the original alerts, irrelevant alerts and duplicate alerts generated by the sensors are removed. In order to achieve better clustering and recognition performance, one more clustering process for these alerts will be performed to convert them to hyper alerts for output. Hyper alerts are categorized by the following four key properties: alert type, source MAC, destination MAC and the timestamp for the alert. Within a specific time window, we divide the hyper alerts into following three categories: (1) Hyper alerts of the same alert type, source MAC and destination MAC, which stands for the type of attacks from the same source and targeting at the same destination. (2) Hyper alerts of the same alert type and source MAC but with different destination MAC, which stands for the type of attacks from the same source but targeting to different destination. (3) Hyper alerts of the same alert type and destination MAC but with different source MAC, which stands for the type of attacks from different source but targeting to the same destination. We present definitions for these three types as follows: Definition 1 (Alert time window). đWA Ţ. We define a1 and an as the first and the last elements of an alert sequence A to describe the same attack, and aj is an alert between them đ1 < j < nŢ; a1 :alertType ź Á Á Á ź aj :alertType ź Á Á Á ź an :alertType, so that for all alerts a1 ; aj ; an 2 A, if they meet the condition: MIN (aj .timestamp-a1 . timestamp)6 WA 6MAX (an .timestampa1 . timestamp) then we define WA as the alert time window for the alert A. Definition 2 (Hyper Alert I). (HAI ). Assuming alerts in the sequence A ź ha1 ; . . . ; aj ; . . . ; an i are all located within the alert time window đWA Ţ, and for all alerts a1 ; aj ; an 2 Ađ1 < j < nŢ, if they meet the following conditions: a1 :alertType ź Á Á Á ź aj :alertType ź Á Á Á ź an :alertType ź sig id a1 :srcMAC ź Á Á Á ź aj :srcMAC ź Á Á Á ź an :srcMAC; 8 aj :srcMAC 2 SMACđ1 < j < nŢ a1 :dstMAC ź Á Á Á ź aj :dstMAC ź Á Á Á ź an :dstMAC; 8 aj :dstMAC 2 DMACđ1 < j < nŢ then we define HAI ź sig id(1, SMAC, DMAC, EID, T) as Hyper Alert I, in which sig_id is a specific alert type, SMAC is the MAC addresses collection for the attack source, DMAC is the MAC address collection for the destination, EID is a ID collection for the events raising the alert, and T is the timestamp of the first alert a1 . Definition 3 (Hyper Alert II). (HAII ). Assuming alerts belonging to alert sequence A ź ha1 ; . . . ; aj ; . . . ; an iđ1 < j < nŢ are all located within the alert time window WA , for all alerts a1 ; aj ; an 2 A, if they meet following conditions: a1 :alertType ź Á Á Á ź aj :alertType ź Á Á Á ź an :alertType ź sig id

Fig. 2. Class diagram of the improved alert.

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

7071

a1 :srcMAC ź Á Á Á ź aj :srcMAC ź Á Á Á ź an :srcMAC; 8 aj :srcMAC 2 SMACđ1 < j < nŢ a1 :dstMAC ­ Á Á Á ­ aj :dstMAC ­ Á Á Á ­ an :dstMAC; 8 aj :dstMAC 2 DMACđ1 < j < nŢ then we define HAII ź sig id(2, SMAC, DMAC, EID, T) as the Hyper Alert II, and the sig_id, SMAC, DMAC, EID and T stand for the same definitions as the Definition 2. Definition 4 (Hyper Alert III). đHAIII Ţ. Assuming alerts in an sequence A ź ha1 ; . . . ; aj ; . . . ; an i are all located within the alert time window đWA Ţ, and for all alerts a1 ; aj ; an 2 Ađ1 < j < nŢ, if they meet the following conditions: a1 :alertType ź Á Á Á ź aj :alertType ź Á Á Á ź an :alertType ź sig id a1 :srcMAC ­ Á Á Á ­ aj :srcMAC ­ Á Á Á ­ an :srcMAC; 8 aj :srcMAC 2 SMACđ1 < j < nŢ a1 :dstMAC ź Á Á Á ź aj :dstMAC ź Á Á Á ź an :dstMAC; 8 aj :dstMAC 2 DMACđ1 < j < nŢ then we define HAIII ź sig id(3, SMAC, DMAC, EID, T) as the Hyper Alert III, and sig_id, SMAC, DMAC, EID and T take the same meaning as in Definition 2. The alerts are categorized as follows: within a certain alert time window, categorize the alerts by alert type, attack source MAC and destination MAC into one of the three types: HAI ; HAII and HAIII . The priority in categorization is: HAI > HAII > HAIII . Following are the steps on how to categorize alerts: (1) Define an alert sequence WA đi; jŢ within an alert time window WA , where WA đi; jŢ will include all the alerts starting from ai to aj . (2) Set the initial status of each hyper alert set for HAII ; HAII and HAIII as empty set /; (3) When a new alert ak is generated, categorize it into HAII ; HAII and HAIII from higher to lower according to the priority of the hyper alerts. 4.2. Constructing a global attack database Considering that multi-step attacks mainly target at APs, we will detect attacks based on AP information. We convert all hyper

alerts into the global attack database with all AP attack chains according to the MAC addresses of APs and the alert time. Definition 5 (AP Attack Chain). AP attack chain is a sequence of ordered attack actions target at a specific AP, represented as APn đacŢ ź hat1 ; . . . ; ati i, in which at i 2 AT (attack collection) and the source MAC or destination MAC of ati should contain the MAC address of the AP, that is (APn .MAC2 ati .SMAC)[(APn . MAC2 ati .DMAC). At the same time, attacks in the APn (ac) are ordered chronically, i.e. when i <ź j; ati .timestamp<ź atj .timestamp. Definition 6 (Global Attack Database). Global attack database contains all the attack chain set for APs in the WLAN, represented as D ź fAP1 đacŢ; . . . ; APi đacŢ; . . . ; APn đacŢg, in which APi (ac) are ordered by the MAC address. After ordering the hyper alerts containing MAC address that is included in the set of source and destination MAC addresses, we can obtain the attack chain of the AP. In order to simplify the process, we use the Signature ID of the attack to represent a specific attack (ac), and the Signature ID is in integer format. For example, if an AP is numbered with 1, then the attack chain can be represented as:

AP1 đacŢ ź h5; 2; 7; 3; 8; 3; 6; 11; 15; 2; 7; 5i
If the total number of AP routers in a WLAN is n, the global attack database can be constructed after ordering AP nodes by their MAC addresses, as illustrated in the Fig. 3. We present attack chains for AP1 and AP2 in Fig. 3. The global attack database consists of all the n attack chains. 4.3. Building candidate attack chains We divide all the AP attack chains in the global attack database using alert time window WA to build the candidate attack chains. Definition 7 (Candidate Attack Chain). For any one AP attack chain APk (ac) in the global attack database D, if the alert time window is WAP:MAC , then we define the attack in Eq. (1) as the candidate attack chain, represented as APn .ACi .

Fig. 3. Global attack database.

7072

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076



at iţj :timestamp Ŕ at i :timestamp 6 W AP:MAC at iţjţ1 :timestamp Ŕ at i :timestamp > W AP:MAC

đ 1Ţ

Each APk (ac) can be divided into multiple candidate attack chains using Eq. (1), and each element in the candidate attack chain are all located within the same alert time window. It has to be noted that, by this way, the number of elements in each candidate attack chain may be different, since various number of alerts will be generated within the same alert time window. As we consider not only the correlation between MAC addresses of AP and alerts but also the alert time window factor in constructing candidate attack chain, when a fixed alert time window is setup, the candidate attack chains will contain the wireless multi-step attack patterns. Take the AP attack chain AP1 đacŢ ź h5; 2; 7; 3; 8; 3; 6; 11; 15; 2; 7; 5i as an example. If we set its alert time window as 30 min, Fig. 4 indicates the process of using sliding time window of WAP.MAC to generate candidate attack chains. 4.4. Filtering candidate attack chains The following step is to filter the candidate attack chains to remove the sub chains and duplicated ones. Definition 8 (Candidate attack sub chain). For two given candidate attack chains AC1 and AC2 ; đAC1 ź< a1 ; . . . ; an >; AC2 ź< b1 ; . . . ; bm >Ţ, if AC2 has subscripts i1 < i2 < Á Á Á < in which makes aj ź bin đ1 6 j 6 n < mŢ, then we call AC1 the sub chain of AC2 . Definition 9 (Longest candidate attack sub chain). If one candidate attack chain ACi is not the sub chain of any other candidate chains, then we call it longest candidate attack sub chain. Definition 10 (Pseudo attack chain set). If each element of the candidate attack chain set APn .AC is a longest candidate attack sub chain and are distinct from each other, then we call the set pseudo attack chain set, represented as APn .PAC. Filtering the candidate attack chains is also the process of generating the pseudo attack chain set, in which the candidate attack sub chains and the duplicated ones are removed from the candidate attack chains to obtain the pseudo attack chain set. The steps are listed as below:

(1) Reorder the set of candidate attack chains đAPn :ACŢ, calculating the length of each element to get the descending SORT đAPn :ACŢ. (2) Filter each element of the SORT đAPn :ACŢ. If the current candidate attack chain belongs to or is the same as any previous ones, remove it from the SORT đAPn :ACŢ. (3) Repeat the process until getting the pseudo attack chain set APn :PAC. For example, if the filter is processed on the candidate attack chains set indicated in the Fig. 4, AC3 and AC4 should be removed, then the final pseudo attack chain set is shown as Table 1. 4.5. Correlating multi-step attack behaviors This process is the core of the WMAPRM. In a real wireless multi-step attack scenario, two attacks might be correlated by time or by other properties. For example, before attackers attempt to crack the WEP key of an AP, they usually would scan the WLAN in advance. After obtaining the targets for attacking, most likely the attackers will deploy the Deauthentication Flood attack to the targets, and then crack the WEP key by ARP injection. In this typical attack scenario, these two attack behaviors have some correlations on MAC address and other properties. We proposed a concept for alert correlativity, which is applicable to the WLAN environment. It describes the correlation between two alerts in quantitative ways. If the correlativity value is large, it is very likely that these two alerts are from the same attack scenario. Definition 11 (Wireless alert correlativity). Wireless alert correlativity is an important measure to evaluate the correlation between two hyper alerts. For two hyper alerts hai and haj, they

Table 1 Pseudo attack chain after filtering candidate attack chains. No. 1 2 3 4 Name AC6 AC1 AC2 AC5 Pseudo attack chain set h3, 6, 11, 15, 2, 7, 5i h5, 2, 7, 3, 8, 3i h2, 7, 3, 8, 3, 6i h8, 3, 6, 11, 15, 2i

Fig. 4. The process of generating candidate attack chains based on sliding alert time window.

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

7073

have wireless properties đwa1 ; . . . ; wan Ţ and đwb1 ; . . . ; wbn Ţ, so their wireless alert correlativity WCđhai ; haj Ţ can be calculated as in Eq. (2):

Pn WCđhai ; haj Ţ ź

i;jź1 wij WAC đwai ; wbj Ţ Pn i;jź1 wij

đ 2Ţ

In Eq. (2), wij is the weight of the correlation between two properties i and j, which is usually set according to expert knowledge, and WACđwai ; wbj Ţ is the correlativity of the two properties. Considering the characteristics of the WLAN environment, the following multi-step wireless attack properties are selected to calculate the wireless alert correlativity: srcMAC, dstMAC, srcIP, dstIP and dstVendor. Table 2 presents the weight matrix for them. We place the following constraints on the weight matrix W: (1) In order to normalize the calculation of the wireless alert correlativity, the sum of all elements in W shall be 1. (2) W is asymmetric, for the hyper alert hai happens before the hyper alert haj. (3) Wij ź 0 means no correlation exists between the two corresponding properties i and j. If Wij is large, the two properties are highly correlated. We can see from Table 2 that the dstVendor of one alert is related to not only the dstMAC of another alert, but also the dstIP. The dstMAC of the two alerts have the highest weight value, which means the correlation on dstMAC is an important factor to determine the wireless alert correlativity value. Since one hyper alert includes multiple aggregated raw alerts, the property value of each hyper alert is not a fixed value, but a set of data types represented with different properties. Therefore, the correlativity computing of the properties for hyper alerts is not a process of calculating for a single number but for a set of number. We should categorize the properties before calculating the correlativity. In this paper, we improve the CTG classification method (Wang et al., 2010) by designing a Wireless Correlation Tree Graph (WCTG) that is applicable to WLAN environment. It categorizes the properties of wireless attacks, and computes the correlativity between them. We categorize the correlations of wireless alert properties into following three types: (1) Correlation between MAC addresses: WAC (srcMACi, srcMACj), WAC (dstMACi, srcMACj) and WAC (dstMACi, dstMACj). (2) Correlation between IP addresses: WAC (srcIPi, srcIPj), WAC (dstIPi, srcIPj) and WAC (dstIPi, dstIPj). (3) Correlation between AP Vendor and the destination addresses: WAC (dstVendori, dstMACj) and WAC (dstVendori, dstIPj). For each hyper alert, we categorize the MAC addresses set first, setting 80% as the threshold. The value is also commonly applied in

many classification algorithms. That is, if the number of the elements that from a certain type exceeds 80%, and then the set is classified as that type. The correlation between MAC addresses is a very important factor to determine the wireless alert correlativity. We define a wireless correlation tree graph based on MAC addresses, as shown in Fig. 5, which defines the categories of MAC address and the correlations. Each node of the graph represents a category of the MAC address, and the number next to the node indicates the weight value. We can calculate the correlativity of the MAC addresses with the definition of the WCTG as below: (1) Based on the WCTG, categorize the MAC addresses to obtain the node of the MAC address. (2) Judge the properties of two hyper alerts with the structure of the WCTG to calculate the wireless correlativity of the alerts. The correlation of IP addresses is the other critical factor to determine the wireless alert correlativity. The process of categorizing and correlativity calculating is similar to the one for MAC address. We define a wireless correlation tree graph shown as Fig. 6 to judge the category of the IP address. The same as above, the threshold is set to 80%. With the wireless correlation tree graph based on IP address, the correlativity of the IP addresses can be obtained. The correlations between AP vender and destination address includes the correlations between AP vender and MAC address and correlations between AP vender and IP address, represented as WAC (dstVendori, dstMACj) and WAC (dstVendori, dstIPj) respectively.We define correlativity matrixes to calculate the value of their correlations. Table 3 illustrates the correlativity matrix for AP venders and MAC addresses. Table 4 illustrates the correlativity matrix for AP venders and IP addresses.

4.6. Recognizing multi-step attack patterns After correlating the multi-step attacks, we calculate the correlativity of the neighboring alerts of each pseudo attack chain and then remove those low-correlativity attack chains. The obtained attack chains with high correlativity thereby can help to identify the pattern of the wireless multi-step attacks.

Table 2 Weight value matrix. wai waj srcMAC srcMAC dstMAC srcIP dstIP dstVendor 0.1 0.1 0 0 0 dstMAC 0 0.25 0 0 0.1 srcIP 0 0 0.1 0.1 0 dstIP 0 0 0 0.15 0.1 dstVendor 0 0 0 0 0 Fig. 5. A wireless correlation tree graph based on MAC address categories.

7074

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

Fig. 6. Wireless correlation tree graph based on IP address categories.

Table 3 Correlativity matrix for AP venders and MAC addresses. AP Vendor MAC Address OUI 00:11:50 BELKIN TP-LINK D-LINK BUFFALO ... 1 0 0 0 ... 00:19:E0 0 1 0 0 ... 28:10:7B 0 0 1 0 ... 00:07:40 0 0 0 1 ... ... ... ... ... ... ...

5. Experiment Since most of the current testing datasets in IDS (Intrusion Detection Systems) such as DARPA 1998, DARPA 1999, DARPA 2000 and KDD Cup 1999, only contain attack information from wired network and do not involve the data for WLAN attack scenarios, we build the experimental platform in our campus. The platform includes following five parts: (1) Campus WLAN environment constructed by China Mobile has covered the whole campus. The SSID of all the access points are set to ZUCC-CMCC, and all the access points can be connected without password. Users can access the Internet through the Unified Campus Authentication System after connecting to the access points. (2) WLAN environment in our lab consists of multiple access points without encryption with WEP or WPA and several desktops and laptops configured with Wi-Fi adapters. The access points and some of the terminal devices are connected to the campus wired LAN (Local Area Networks). (3) Wireless data collection environment, which includes a desktop and a laptop with Wi-Fi adapters and installed Snort-Wireless. They are in charge of collecting data transferred within the WLAN environment and outputting the alerts. (4) Attack simulator environment, which includes a number of laptops installed BackTrack5 and Beini (two popular attacking tools in WLAN). They can carry out mainstream wireless attacks like wireless detecting, WEP cracking, WPA cracking, forge AP, deny of service and session hijacking. (5) Console environment, which includes some control servers in charge of outputting the wireless multi-step attack patterns. The above environments are illustrated in Fig. 7. The process of attack testing and data collecting is as below: (1) Configure the mode of network cards for the two computers to monitor mode, and install Snort-Wireless tool to collect wireless data packages continuously and comprehensively.

Table 4 Correlativity matrix for AP venders and IP addresses. AP Vendor IP Address 192.168.0./ BELKIN TP-LINK D-LINK BUFFALO ... 0 0 1 0 ... 192.168.1./ 0 1 0 0 ... 192.168.2./ 1 0 0 0 ... 192.168.11./ 0 0 0 1 ... ... ... ... ... ... ...

We process multi-step attack pattern recognition for each pseudo attack in the set APn :PAC. The process is as below: (1) Calculate the wireless alert correlativity value for each couple of neighboring attacks in the pseudo attack chain, comparing the value with the predefined threshold value. (2) If the correlativity value is lower than the threshold value, remove them from the set, for they do not belong to the real multi-step attack pattern. (3) If the value is not less than the threshold value, keep these attack chains of the two alerts, since they are probably belong to a related wireless multi-step attack pattern. (4) After carrying out the steps above for all the neighboring attacks in the pseudo attack chains, the rest ones are the recognized wireless multi-step attack chains in which each couple of neighboring attacks have high value of correlativity.

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

7075

Fig. 7. The experimental platform.

Table 5 Statistic of raw alerts. Day 1 Collector 1 Collector 2 Total 8258 7476 15734 Day 2 7498 7023 14521 Day 3 9354 8824 18178 Day 4 8145 7598 15743 Day 5 6912 6097 13009 Day 6 9107 8320 17427 Day 7 7380 6911 14291

of the alerts is more than 100 thousand, and the detail statistic can be seen in Table 5. We got following results by applying WMAPRM method to mining the patterns of wireless multi-step attacks. (1) We got 221 hyper alerts for AP1 and 203 for AP2 by aggregating wireless alerts for the two access points used for attack testing. (2) After building candidate attack chains for the two access points by setting the value of the time window to 30 min, we generated the candidate attack chain sets AP1 .AC and AP2 .AC, and the number of candidate attack chains in these sets is 215 and 198 for each. (3) By filtering the candidate attack chain set AP1 .AC and AP2 .AC and removing the candidate sub chains and duplicated chains, we got pseudo attack chain set AP1 .PAC and AP2 .PAC, in which the number of pseudo attack chains is 149 and 133. (4) We correlated the multi-step attacks of the two filtered pseudo attack chain sets, setting the threshold of correlativity value of each couple of neighboring attacks in the sets to 0.5. In the process of recognition for the AP1 .PAC and AP2 .PAC, the number of patterns of wireless attacks with high correlativity value is 11 and 8 separately, which is just the real patterns generated by WMAPRM method, and the result is indicated in Table 6.

Table 6 Data results generated by the WMAPRM method. Access points Number of Hyper alerts 221 203 Number of candidate attack chains 215 198 Number of pseudo attack chains 149 133 Number of multi-step attack patterns 11 8 Recognition rate (%)

AP1 AP2

7.38 6.02

(2) Utilize attack simulator environment to carry out wireless attack testing. Attacker uses tools like BackTrack5 and Beini to attack the campus WLAN and the two access points in the lab. The attack types include War Driving, Dos Attack, Mac Spoofing, Rogue AP, Evil Twin and WEP cracking etc. (3) When the data collectors collect any data packages matching the predefined attack type, output the raw alert information, and save the alert into the server of the control center. Most of the alerts are coming from simulator environment, but minority may be generated by external attacks. During the week of attack testing, because the attacker carried out attacks to the WLAN with different kinds of tools, the data collectors collected enormous number of data packages, and generated a large amount of raw alert information. The total number

Recognition Rate ź

Number of multi-step attack patterns Number of pseudo attack chains Â 100% đ3Ţ

With WMAPRM, we can recognize lots of common multi-step wireless attack patterns, like WEP crack with ARP + Deauthentica-

7076

G. Chen et al. / Expert Systems with Applications 41 (2014) 7068­7076

Fig. 8. Wireless multi-step attack patterns recognized by the WMAPRM Method.

tion Flood, WEP crack with wesside-ng, config file stealing attack and authentication session hijack attack etc. The APs (AP1 and AP2 ) used in our experiment are BELKIIN F6D4230-4 and TP-LINK TL-WR340G respectively. BELKIIN F6D4230-4 is known to have the authentication session hijack attack bug and TP-LINK TL-WR340G is known to have the config file stealing attack bug. Fig. 8 shows the wireless multi-step attack patterns recognized at AP2 with WMAPRM, in which the numbers between each couple of neighboring attacks are their correlativity value. We can see from Fig. 8 that, for each attack pattern of AP2 , the all neighboring attacks have a high correlativity value, which indicates the fact that the actual multi-step attacks do have apparent correlation. Especially for the attacks to crack WEP, no matter ARP + Deauthentication Flood or wesside-ng, each couple of their neighboring attacks have correlativity value that is higher than 0.6, which means these two ways of attacks have steps that are highly correlative with each other. It can be seen from Fig. 8 that both the two WEP crack attacks targeting at AP2 and the multi-step attacks using the previously mentioned bugs can be effectively identified by our WMAPRM method. The results confirm that our WMAPRM method is effective in multi-step attack pattern recognition. 6. Conclusion In this paper, we propose a wireless multi-step attack pattern recognition method WMAPRM that can effectively identify multistep attacks in an WLAN environment. WMAPRM exploits the main attributes of the IEEE 802.11 frame with correlation analysis to uncover the correlation among various steps in a multi-step attack. Experimental results in real world environment verified the effectiveness of our method. Existing multi-step attack pattern recognition methods are applicable in most cases in wired networks. Meanwhile, intrusion detection and prevention methods in WLAN nowadays are only effective in identifying single-step attacks. To the best of our knowledge, no previous work on multi-step attack pattern recognition in wireless environment has been published. The WMAPRM method proposed in this paper overcomes the limitation of the existing techniques by providing multi-step attack pattern recognition capability in WLAN. What's more, we constructed our own experiment environment using our campus network to remedy the weakness of the existing experimental data sets. The experimental results show our method can effectively eliminate irrelevant information from the Snort-Wireless alerts and identify highly correlated wireless multi-step attacks from them, which suggest the validity of our WMAPRM method in wireless networks.

However, the WMAPRM method relies on human judgment and expert experience in setting the threshold and calculating the correlativity weights. This may introduce subjectivity into the method and affect its performance in various WLAN environments. It would be interesting to develop self-learning and self-adapting capabilities in the attack pattern recognition. We are currently working on these problems. Acknowledgements This work is supported partially by the Zhejiang Key Discipline Fund of Computer Applied Technology (No. pd2013457) and the Zhejiang Provincial Natural Science Foundation of China (No. LZ13F020001, Y1080821). References
Cuppens, F., & Miege, A. (2002). Alert correlation in a cooperative intrusion detection framework. In Proceedings of the 2002 IEEE symposium on security and privacy, Oakland, USA. Geib, C. W., & Goldman, R. P. (2001). Plan recognition in intrusion detection systems. In Proceedings of DARPA information survivability conference and exposition (DISCEX II'01), Anaheim, USA. Geib, C. W., & Goldman, R. P. (2001). Probabilistic plan recognition for hostile agents. In Proceedings of the fourteenth international Florida artificial intelligence research society conference, Key West, USA. Hellerstein, J. L., Ma, S., & Perng, C. S. (2002). Discovering actionable patterns in event data. IBM Systems Journal, 41(3), 475­493. Kim, G., Lee, S., & Kim, S. (2014). A novel hybrid intrusion detection method integrating anomaly detection with misuse detection. Expert Systems with Applications, 41(4), 1690­1700. Koc, L., Mazzuchi, T. A., & Sarkani, S. (2012). A network intrusion detection system based on a Hidden Naive Bayes multiclass classifier. Expert Systems with Applications, 39(18), 13492­13500. Lippmann, R., Haines, J. W., Fried, D. J., Korba, J., & Das, K. (2000). The 1999 DARPA off-line intrusion detection evaluation. Computer Networks, 34(4), 579­595. Ning, P., Cui, Y., Reeves, D. S., & Xu, D. (2004). Techniques and tools for analyzing intrusion alerts. ACM Transactions on Information and System Security, 7(2), 274­318. Ning, P., Cui, Y., & Reeves, D. S. (2002). Constructing attack scenarios through correlation of intrusion alerts. In Proceedings of the 9th ACM conference on computer and communications security, Washington, DC, USA. Percoco, N. J. (2012). Trustwave 2012 global security report. Trustware SpiderLabs. Technical report. Qin, X., & Lee, W. (2004). Attack plan recognition and prediction using causal networks. In Proceedings of the 20th annual computer security applications conference, Tucson, USA. Sheyner, O., Haines, J., Jha, S., Lippmann, R., & Wing, J. M. (2002). Automated generation and analysis of attack graphs. In Proceedings of the 2002 IEEE symposium on security and privacy, Oakland, USA. Shin, S., Lee, S., Kim, H., & Kim, S. (2013). Advanced probabilistic approach for network intrusion forecasting and detection. Expert Systems with Applications, 40(1), 315­322. Wang, L., Ghorbani, A., & Li, Y. (2010). Automatic multi-step attack pattern discovering. International Journal of Network Security, 10(2), 142­152. Yang, W., Yun, X., & Li, J. (2006). Efficient approach to intrusion detection based on boosting rule learning. Computer Research and Development, 43(7), 1252­1259.

