Wuhan University Journal of Natural Sciences

WUJliS

Vol. 10 No. 1 2005 089-092

Article ID:1007-1202(2005)01 0089-04

Two.Stage Algorithm for Correlating the Intrusion Alerts
0
[] WANG Liang-min 1'2, MA Jian-feng it
1. The Kcy I.aboratory of Computer Network and Information Security, Xidian Univcrsily. Xi' an 710071. Shaanxi, China : 2. School of Computer, Jiangsu University. Zhenjiang 212013,,] iangsu, China

Introduction

To solve the problem of the alert flooding and information sernantics in the existing Intrusion Detection Sys tem(II)S), we present a two-stage algorithm for correlating the alerts. In the first stage, the high level alerts is integrated by using the Chronicle patterns based on time intervals. which describe and match the alerts with the temporal time constrains of an input sequence. In the second stage, the pro paring relationship between the high level alerts is defined, which is applied to correlate the high level alerts, and the attack scenario is constructed by drawing the auack graph. In Ihe end a given example shows the performances of lifts tw(> stage correlation algorithm in decreasing the numl)er and im proving the information semantic of the inlrusiol~ alerts pro duced by die IDS.

Abstract:

Key w o r d s : ordering

intrusion detection; alert correlation; partial

CLC number: TI' 393

Received date: 2004 05 30
Foundation item: ,%upported by Ihe National Nattlral Science Funda lion of ('hina (90201012) and Eli "lbch Research and [)cw'lol;)menl

Program of ('hina ( 2002.A_/\11:~021) Biography: WAN(; Liang rain ( 1!)77 ), nmlc, Ph. I) candidate~ research dir(,ction: intrl/sioll delecrion, itllrtlsioll Ioleralwe, flHd scour ity protocol. }'~-ntail: liangminwang(a hennaik corn 1""[b whom corresp(mdirag should bc a(ldresscd. E mail: tjfrna (a hommil, tom

trusion detection is regarded as the key technology to de tect the malicious behaviors upon the network security. Unfortunately, the alerts generated by the existing II)Ses are low information semantic and big quantity which overwhelm the security operators il"Z] , and which is the vulnerability some intrusion toolsr on. Several alert correlation methods have been proposed to address this problem. These methods fall inlo three classes. The first class correlates alerts base on the similarities between alert attributes [~'(~1. Though they are effectively in grouping some alerts and decreasing the alert number, the methods of this class cannot discover the casual relationship between related alerts. The second class based the alert correlation on attack scenarios specified by human users or learned through training datasets ie'r~ This method is restricted to describe known attacks. The third class is based on the one-order logic relationship of the alerts which are generated by an attacker i~" s~. These methods observe that some earlier alerts are preparing for the tater ones, then correlate these alerts with preparing relationships by construct the attack scenarios. Compared with these three classes of methods, the later two classes can potentially express the relationship between alerts and uncover the intrusion intention by the attack scenario. An approach including two correlation algorithms is presented in this paper, which uses the Chronicle patterns to in tegrate some relaled alerts into a high-level alert, then con slructs the attack scenarios by drawing the attack graph which discovers the new relationships among these higkleve[ alerts.

89

get)}

1 The Formalism Model and the HighLevel Alert
Debar [~j reported that the scalability is another problem existed in the IDS except the alert flooding and information semantics in 2001. Recent years, the IDMEF [91 of IETF, have been presented to solve this problem which made the interactions among the information of alerts from heterogeneous sensors possible. 1.1 The Data Model of Alerts Definition 1 The data model of alerts is a quadruplet, Alert= ( name, time, source, target) , where name is the name of the alert;time is an ordered couple time= (begin, end),begin and end denote the alert begin time and the end time of the attack respectively; source and target respectively denote the source and the target of the attack. Obviously, our data model satisfies the definition of IDMEF of IETF, which is able to achieve large-scale deployment. 1.2 The Chronicle Formalism Based on Time Inter. vals Morin [e] introduce the Dousson' s~~ Chronicle formalism to correlate the alerts, in which time is considered as a linearly ordered discrete set of points and the attack an action finished on the time point. Otherwise, we assume that the attack be a continual behavior which generates plenty of same-name alerts at the most occasion. The definition of time interval is introduced in this paper. The definition of the chronicle formalism based on the time interval are given as follows: Definitmn 2 The chronicle model of alert correlation based on the time interval is a quintuple, Chronicles =(Times, Constrains, P_Events, P_Assertions, Actions ), where 9 Times is a set of the pair (begin, end), which denotes the time interval between two points begin and end; 9 Constrains is a set of the constrains between the two time points in the pair of the element in the Times set; 9 P_Events is the set of event patterns (alert se quence patterns) in a time interval of the Times, which represent relevant changes of the observed system for this chronicle. 9 P_Events = {{Alertk(name, time, source, tar90

#=l,'",m} 9 P_Assertions is a set of assertion patterns which represent the context of the occurrences of events; 9 Actions is a set of external actions, which will be performed by the system when a chronicles is recognized. Definition 3 The assertions of the Chronicles formalism in P_Assertions is the rdfying predicates, such as event, noevent and occur, which are used to describe the time constrains among the elements in the set of P_ Events. Their syntax and information semantics are list as follows: 9 event(P, (tl, t2)): The alert P happened in the time interval [~tl, t2 ] ; 9 noevent(P, ( h , t2 )) : The chronicles would not be recognized if the alert P happened in the time interval

t,_2;
9 occurs(n1, n2), P, ( h , te)): The alert P occurred exactly N times in the time interval [-h, te], N ~ (nl, he) and the value o0 can be used for ne. Where P ~ P_Events, (tt, te ) ~ Times. 1.3 The Alert Chronicle Patterns and the HighLevel Alert For example, an attack, named example, always generated an alert name1 at first, then some name2 alerts. After the alert name2 is achieved, the alert name3 will be reported in 2 or 3 time periods. The formal Chronicle pattern of this attack example is shown in Fig. 1. Definition 4 The high-level alert has a form of the uniform alert data model, which is a quadruplet too, Alert = (name, time, source, target), where name is the name of this high level alert, time, source and target is defined in Definition 1. This high-level alert is a sequence of many alerts which are from the same source, to the same target and recognized by a chronicle pattern. Suppose there is a sequence of input alerts(n1,1), //2 , 3 ) , (?l I , 5 ) , (1l 2 , 6 ) , (*11 ' 12), (he, 16), (n:,, 19)
chronicle example Ira_source, re_target] event(alert[namel, re_source, re_target], (tl ,tl )) occurs( ( 1,10, alert[name2, re_source, re_target], (re, le + 10) ) event(alert[name3, re_target, m_source],(t:t ,&) t:~--t.2~ 13 when recognized { emit event(alert[example, m source, m target], O1 ,&))

Fig. 1

Example of chronicle

where (hi ,K) denotes the alert n~ are input in/( second. By the Fig. 1, the alert sequence(<, 12), (Tze, 13), (n:~, 19) will be recognized as the chronicle at 19'h second. For example, the high-level alert alert(example, source, target, (/l, te )) is reported when the alert sequence (nl, 12), (he, 13), (n:~, 19) is recognized in Fig. 1. This high level alert represents a step of an attack. In addition, this definition provides conveniences to correlate the alerts and construct the attack scenario in the next step that the high-level alert has a uniform data model defined in Definiton 1.

Suppose three alert Alert1, Alert2 and Alert3 with the same source or the target, Alertl preparing for Alert2, and Alert2 preparing for Alert3, then Alertl should be preparing for Alert3 by the Theroml. Now we introduce the definition of the directly preparing relation ship to simplify the preparing relationship: Definition 6 All the alerts of the {Alerti I i = 1 , ' " , m / are from the same source or the same target, if the Alertl prepared for Alert2, and no other Alert3 satisfies timel_end~time2_begin and time2_end<time3_ begin, then Alert1 is directly prepared for Alert2.

2 Constructing the Attack Scenario Using the Preparing Relationship
As we all know, when an attack beginning, the in truders construct a concrete plan of this action, which named the attack scenario. In the proceeding section, the individual alerts are integrated to the high-level alert which represents a step of the attack. In this section, we will construct the attack scenarios by using of the oneorder logic relationship between the highqevel alerts.

2.2 Constructing the Attack Scenario Based on the Attack Graph
Considering the graph is more comprehensible than the text does, we present an algorithm to draw the attack graph to correlate the alerts and high level alerts, and then provide the attack scenarios to the security operator. By the Theorem 1, we can learn that the preparing relationship between the attacks, which have the same source or target, is partial ordering relation. Such that these attacks can be array in an ordered line. And the drawing methods of the attack scenario are built as fol[OWS. Step 1 Use a knot X to denote the alert X; Step 2 Select an alert with the same source or target as the existing alert set T from the sequence in order. If the alert A prepare for alert X, then the knot A is set left of knot X; if the alert X is preparing for alert A, then put the knot A right of knot X; Step 3 "Ib the arbitrarily selected alert X from T,if alert X is directly prepared for the new alert A, then draw an oriented arc from knot X to knot A. Step 4 Go to step 2,unless a deadline or the time constrain is achieved and no alerts satisfying are found in the input alert sequence. This deadline is used 1o restrict the scale of the attack graph which is determined by the operator according to the existing security environment, such as the patience of the attack and the computing ability of the CPU.

2.1

The Prepare Relationship between the Alerts

Obviously, most intrusions are not isolated, but re lated as different stages of attacks, with the early stages preparing for the later ones. The preparing relationship is formally defined in Definition 5. Definition 5 Let two alerts (alert or high-level alert)Alertl=(namel, timel, sourcel, targetl), Alert2 = (name2, time2, source2, target2), satisfy two conditions as follows. 1) sourcel= source2 or targetl= target2,i, e. A lertl and Alert2 are from the same source or attack the same target; 2) timel_end~ fime2_begin, i.e. the Alert2 begins after the Alertl is ended; Then the Alert1 and the Alert2 satisfy the preparing relationship, or the attack name1 is preparing for the attack name2. According the definition of the high-level alert, obviously, Theorem 1 is obtained. Theoreml {Alert/] i = l , ' " . m } is the set of alerts(or high-level alerts), where all the Alerti ,have the same source or the target,i, e. all the Alerti are from the same source or attack the same target. Then the prepar ing relationship between the two alerts in the set {Alert, I i=1 ,'.. ,m } is a partial ordering relation.
Wuhan ~iveNRy aourt~! of Natural Scions 2~

3 The Implementation of the Algorithm and an Example
We implement this algorithm in a correlation system with the structure shown in Fig. 2. The Chronicle recognition system integrates the alert sequence to a high-level alert by the chronicle pattern-base. Then the higklevel

91

alerts and the other alerts are sent to the correlation module based on the attack graph to construct the attack scenarios. The security operators can find the intention of the attack from the attack graph easier than from the thousands of IDS alerts. In addition, they can design new patterns of the alert sequence and add them to the pattern-base.
(Security Operator)
,,. . . . . . . . . . . . . . . . :.:.;.......... ........

"] I ['-"--'-~kCorrelation ModuleJ [Shron'c. les [ ',1. ~ ,.," ,..," . .......d~'attern-baseJ 'I[ Chron cles ~ i L[,Recogniton Module)
',

(- Attack graph

~ ~

thehigh-level-alert flow the IDS alert flow Fig. 2

@ the sensor t___'---' the correlation system

logic, which begins with the development of the chronicle formalism, follows that the alerts matching the attack patterns is integrated to the high-level alert which represents a step of an intrusion. The other is base on the one order logic, which defines the preparing relationship between alerts and proves that is a partial ordering relation. By the partial ordering relation, an algorithm is provided to draw the intuitionistic graph, which shows the attack scenario to the security operator on line. In our future research, we plan to detect the attacks missed by IDSes and guess the future attacks, which will possibly be launched by the attackers. And the methods based on the pattern recognition and heuristic learning are in our consideration.

Correlation system base on logic methods

References
EI~ Debar H, Wespi A. Aggregation and Correlation of Intru sion-Detection Alerts. Proceedings o f the 4tk International Symposium, Recent Advances in Intrusion Detection. Berlin: Springer-Verlag, 2001.8,5-103. E2] Morin B, Debar H. Correlation of Intrusion Symptoms: an Application of Chronicles. Proceedings of the 6th International Conjerence on Recent Advances in Intrusion Detection. Berlin: Springer-Verlag, 2003.94 112. Eurocpton. Stick. http://v,~z~,, eurocompton, net~stick~ projects& html/, April 2002. Network Security Consultants. IDSwakeup. h t t p : / / z z ~ . hsc. f r/ ressources/outils/ idsz~keup/ , Oct 2002. Staniford S, Hoagland J, Alemey J M. Practical Automated Detection of Stealthy Portscans. Journal o f Computer Security, 2002, 10 (1): 10,5-136. Valdes A, Skinner K. Probabilistic Alert Correlation. Pro ceedings of the 4th International Symposium, Recent Advances in Intrusim~ Detection, ()el 2001. I~rlin: SpringerVerlag, 54-68. ('uppens F, ()rtalo R. I.AMBI)A: A I.anguage to Model a Database for Detection of Attacks. 77~ird International Workshop on the Recent Ad'vances in Intrusion Detection, ()ct 2000. Berlin: Springer-Verlag, 197-216. Ning Peng, Xu Ding-bao, Healey C G, et al. Building At

Suppose there is a series of attack behavior which use the tools traceroute to begin rout tracing, then the Superscan is used to scan the TCP port to avoid the IC MP blocked, and a vulnerable service of the ASP is found or the list privilege of IIS FTP anonymity service is gained to attempt a overflow attack, finally the program slream, c is used to exhaust the system~ In our system, an attack graph is shown in Fig. 3 to represent the attack scenario to the operator.
am~

[3] ~4~ ~5]

Fig. 3

Example of attack scenario

E6]

In fact, an attack behavior represented by an arbitrary knot in Fig. 3 generates plenty of general IDS alerts. We can catch the intentions of the intruder easily form Fig. 3 which represents the holistic behaviors of the attack. This attack graph is easier to understand than a number of alerts reported individually by the II)Ses.
Thus it improves the information semantics and decreases the number of the alerts.

E7~

E8~

tack Scenarios flarough Integration of Complementary Alert Correlation Methods. The 11'~' Ammal Netv.x)rk and Distrih uted System Security Symposium. San Diego, California,
E9~ USA, Feb 2004. 97 111. Curry I), Debar H. Intrusion Detection Message Exchange Format. http:/'/z~=~,, ietf. org/interne~dra./'ts/, Aug 2003. EIO~ l)ousson C. Alarm Driven Supervision for Telecommunication Networks: Online Chronicle Recognition. Annales des Tele communications , 1996, 51 ( 9 ) : 501-,:508.
[]

4

Conclusion

In this paper, we presented a two stage method which integrates IDS alerts to high-level alerts and corre lates the high alerts to the attack scenario. It is integrated by two correlation algorithms. One is based on the reified

92

