The 2010 Military Communications Conference - Unclassified Program - Cyber Security and Network Management

Situation Awareness of Multistage Cyber Attacks by Semantic Event Fusion
Sunu Mathew, Shambhu Upadhyaya
Department of Computer Science and Engineering University at Buffalo Buffalo, New York 14260 Email: (smathew2, shambhu)@buffalo.edu

Moises Sudit
Department of Industrial and Systems Engineering University at Buffalo Buffalo, New York 14260 Email: sudit@buffalo.edu

Adam Stotz
Information Fusion Division Calspan-UB Research Center 4455 Genesee Street Buffalo, NY 14225 Email: stotz@cubrc.org

Abstract--In this paper, we present strategies for real-time Situation Awareness of multistage cyber-attacks by utilizing heterogeneous sensor event streams. A flexible and practically usable attack modeling approach based on network connectivity and attack progression semantics is used to produce multistage attack templates. Events in live alert streams are correlated based on their semantics and the attack templates to provide analysts with effective perception, comprehension and projection of likely attacks and their progression. The techniques form the basis of the Event Correlation for Cyber Attack Recognition System (ECCARS), which is tested and validated extensively with realistic datasets.

The rest of this paper is organized as follows ­ Section 2 provides an overview of the problem along with formal definitions, and outlines our assumptions and solution approach. Section 3 provides descriptions of semantic event correlation and presents the design and implementation of the techniques as part of the ECCARS system. Section 4 describes experimental results and Section 5 compares our solution approach with existing literature and finally, Section 6 concludes the paper with directions for future research. II. P ROBLEM D EFINITION , A SSUMPTIONS OVERVIEW A. Definitions Definition 1.1: (Problem) Detection of Goal-Oriented Multistage Attacks: Given a protected, limited access network , a proper subset of publicly accessible hosts , a set of deployed sensors , the event streams generated by them during a certain time-frame , and a comparison function , the problem of multistage attack detection is as follows: Generate a set of event-sets such that for a set of multistage attacks that actually happen during the time-frame , , is covered (as defined by C) by one or more event sets . The set constitutes ground truth attack scenarios and is the set of hypothesized attack scenarios. Here, the event stream can be likened to alert streams and a multistage attack is basically a sequence of unauthorized intrusive steps taken by an adversary against the network. Definition 1.2: Situation Awareness: Situation Awareness (SA) is the perception of elements in the environment within a volume of time and space, the comprehension of their meaning, and the projection of their status in the near future [6]. We use SA methodology as a guide to define and develop systematic and effective solutions to the multistage attack detection problem. Situation awareness in general terms involves the understanding and formation of an accurate mental picture or consciousness of an evolving situation.
AND

S OLUTION

I. I NTRODUCTION With the increasing sophistication of computer attacks and the dangers posed by successful attacks against high-value information assets (e.g., financial, military and utility systems), detection of atomic exploits is no longer adequate; it has become necessary to address the detection of attack scenarios that are composed of multiple stages. Practical attack scenario detection has become complicated ­ analysis indicates that a sensor typically generates 10 to 20 thousand alerts each day [10] in organizational networks and the situation is compounded by the well known problems of false positives and false negatives associated with intrusion detection. Several techniques have been developed for attack scenario detection, mainly based on alert correlation and use of network vulnerability graphs. In this paper, we approach the problem of detecting multistage attacks in real-time by analyzing the content of event streams generated by network sensors such as the intrusion detection systems (IDS). We adopt a practical correlation approach that considers the high-level multistage attack semantics of heterogeneous sensor events without delving into exploit level details. Flexible attack models called Guidance Templates are used to guide this correlation process and produce dynamic attack hypotheses that are relevant to an evolving situation. Our techniques are implemented in a comprehensive situation awareness tool called ECCARS (Event Correlation for Cyber Attack Recognition System) which is experimentally validated with realistic data, and is a readily deployable solution for diverse networks.

 ˘Ą¤ŁŚĽ¨§Š

§ # AEĽF7@GIHQPRŠ 6  Ą87@9¤ACB$DE5 V3 WTYX 3 ` Tab ` TUTc 6 d ` Tc#fe # ` T ` Tc#

 "!$# Ľ&%(')0'2143 S ` T

ŁŁ

TgXheiT

T

B. Assumptions

p

Access to the network is through a set of publicly

978-1-4244-8180-4/10/$26.00 Š2010 IEEE

1286

p

p

available hosts (e.g., web server, ftp server) that constitute a demilitarized zone (DMZ). Access to an internal host is possible only after taking any preliminary steps that may be necessary (e.g., intruding into other hosts). We thus make the assumption that the IP addresses of sensor events generated as a result of attacks can provide important information useful for correlating successive attack steps. Events generated by high level IDSs (e.g., Snort) and system and application log-file entries form the basis for reasoning about attacks. Non-cyber observables and other kinds of cyber-data (e.g., low-level program behavior, network flows) are not considered in this work.

C. Solution Overview Our event fusion schemes are designed around a novel correlation approach that considers the multistage attack semantics possessed by heterogeneous events. Since our problem domain involves the detection of multistage attacks, we first start out by developing a set of attack categories that represent the semantic stages of typical zero-knowledge multistage attack scenarios. The events (alerts) in the signature sets of sensors on the network are mapped to these semantic categories based on event descriptions available in the sensor documentation. An event is also associated with a criticality value, which is an a priori defined real number used to relate and compare the threat semantics of events (e.g., an intrusion is more serious than a scan and therefore, can have an appropriately higher criticality value); the semantic category that events are mapped to can provide a guideline for deciding this value. Flexible attack models called `Guidance Templates' are constructed by analysts using the semantic categories and general network topology, and are used to dynamically `guide' event fusion. Similarities in IP addresses (and hence, the sources and destinations of events on the network) and the degree of match of event semantics with the guidance template are used to correlate events from heterogeneous streams. Dynamic attack hypotheses (sets of events) called attack tracks are generated, suitable metrics that indicate relative threat levels are calculated and are assigned as track attack score values, and these scores are used to rank the tracks. A graphical modeling environment and an intuitive visualization framework are part of the system and aid in providing analysts with effective situation awareness. III. T ECHNICAL D ETAILS A. Event Semantics and Event Correlation The attack signature descriptions associated with IDS alerts provide information about the conditions under which they are raised. Heterogeneous sensor events can be classified differently based on criteria such as service (e.g., web attacks, ftp attacks), the protocol stack layer most relevant to the attack (e.g., application layer attacks, network layer attacks) and consequence (e.g., denial of service). Our approach seeks to assign heterogeneous sensor events with semantics that are

relevant in a zero-knowledge multistage attack model in order to enable attack correlation in real-time. It is well known [7] that a zero-knowledge multistage goal-oriented cyber attack consists of four broad stages ­ Reconnaissance, Intrusion, Privilege Escalation and Goal. We refine these steps to create a finite set of categories (called Attack Categories) that cover the broad semantics of any multistage attack. The entire signature set of each sensor that is part of the monitoring framework is mapped to these semantic categories based on event descriptions in the sensor documentation. The categorization is detailed in [11]. Each attack category has a two part name ­ the first indicates the general category (e.g., Reconnaissance, Intrusion, Privilege Escalation and Goal) and the second indicates a more specific variation. Sniffing, Footprinting, Scanning and Enumeration represent Reconnaissance steps that provide the zero-knowledge attacker with the location and other specifics of target machines. Intrusion, Escalation and Goal steps have specialized variations. Semantic configuration files that specify alert to attack category mappings can be developed for each sensor and these files can be loaded as part of initialization routines prior to correlation. Heterogeneous sensor streams now automatically acquire semantic structure (based on a finite set of attack stages) without manual consideration of thousands of exploit descriptions. B. Guidance Templates ­ Semantic Constructs A novel contribution of our work is a flexible approach to heterogeneous event fusion that is based on attack models ("Guidance Templates") constructed using the semantic attack categories. These models represent multistage attacks that are semantically valid for the network, and are developed by taking into account network layout and the semantics of logical attack progression. A guidance template consists of a series of stages consisting of attack categories in each stage. The attack model represented by the guidance template is defined by the organization of the attack categories in the stages. A multistage attack that follows the template model consists of a sequence of one or more attack categories from these stages. This sequence of attack categories is generated based on the evidence presented by the event stream and is called an Attack Track. A sample guidance template for a network with an unprotected demilitarized zone (DMZ) and a protected internal subnet is shown in Fig. 1. Stages 1, 2 and 3 represent multistage attacks limited to the external part of the network (see network on the right) while stages 4 onwards represents penetration into the protected subnet. In practice, actual attack hypotheses (attack tracks) might match the guidance template to varying degrees depending on the events encountered in the stream. It is possible to develop specialized guidance templates that capture the unique characteristics of different deployment environments without going down to exploit-level details. For example, defense networks that have subnets with varying security requirements and restrictions could have guidance templates tailored to their

1287

External (DMZ) Network
Stage 1 Stage 2 Stage 3 Stage 4

Internal (Protected) Subnet
Stage 5 Stage 6 Stage 7

Recon_Sniffing

Recon_Enumeration

Escalation_OS

Recon_Sniffing

Recon_Enumeration

Escalation_OS

Goal_DoS

Recon_Scanning

Intrusion_User

Escalation_Service Recon_Scanning

Intrusion_User

Escalation_Service Goal_Corruption

The two correlation principles described above can be combined together to generate valid multistage attack paths. Consideration of IP address similarity can yield clusters of events that may be related. The segmentation of event clusters (which do not convey much semantic information) into multistage attack hypotheses (attack tracks) is accomplished by the semantic event correlation component. C. Track Ranking Metrics Various metrics can be used for assignment of attack score values to tracks in order to indicate their relative threat levels. The semantics of events that comprise the tracks, the number of distinct stages in a track, and the extent of network penetration are some of the criteria that can be used to evaluate and compare tracks. Different metrics (or combinations thereof) can be used to simultaneously rank tracks in parallel and thus enable threat evaluation across multiple dimensions. One metric that we use as a situation awareness indicator in our experiments takes into account the significance posed by the terminal stages of tracks and is called the depth metric which is indicative of the highest threat stage and its criticality value. Criticality is a real-valued number signifying relative threat level associated with each event and is assigned a priori based on event semantics. D. System Design and Implementation The techniques that we have described in the preceding sections are implemented as part of a comprehensive tool ­ the Event Correlation for Cyber-Attack Recognition System (ECCARS), the architecture of which is depicted in Fig. 2. Open source information and human input from analysts are used to create a correlation and fusion model consisting of guidance templates (Sec. III.A) and attack categories via the Fusion Model Editor (FUME) interface. The set of supported and available sensors and their associated signature sets can also be specified. The Input Manager collects and formats input from IDS sensors and other event logs, and this is then correlated to generate attack tracks in real-time by the Information Fusion Engine for Real-time Detection (INFERD). Track ranking metrics (Sec. III.C) that are used to rank the tracks as well as "defragmentation" processes that improve the quality of the output are integral components of INFERD. Output from INFERD may also be piped to visualization components as well as third-party tools to better present multistage attack hypotheses to analysts. Dynamic attack hypotheses that are generated may then be used for impact assessment (and possibly, attack mitigation) and to refine the situation awareness process (e.g., by adjusting the parameters of different sensors), while also involving the human analyst in the loop. INFERD's fusion algorithm which essentially fuses a live alert stream under a guidance template model has the worst case asymptotic time-complexity of where is the no. of events.

Recon_Footprinting

Intrusion_Root

Recon_Footprinting

Intrusion_Root

Goal_Espionage

Attack Track 1
Recon_Sniffing (External) Stage 1 Recon_Scanning (External) Stage 1 Intrusion_User (External) Stage 2 Escalation_Service Recon_Sniffing (Internal) (External) Stage 4 Stage 3

Attack Track 2
Recon_Sniffing (External) Stage 1 Intrusion_User (External) Stage 2 Escalation_Service (External) Stage 3 Recon_Sniffing (Internal)

Stage 4

Fig. 1. Stage organization of a Guidance Template for zeroknowledge attacks progressing from an external DMZ to the internal part of a network

topology ­ a well developed attack that ventured into a critical part of the network could be viewed as qualitatively different from an attack that only targeted the external parts of the network like the DMZ. Event fusion is based on a combination of two techniques ­ Semantic event correlation and IP address correlation. Event Fusion by Semantic Correlation: Attack tracks or hypothesized scenarios consist of sets of attack categories that have transitions among themselves representing attack progression from one step to the next. The process of generating attack tracks begins by dynamically filtering out events from the input sensor stream that are found to be semantically irrelevant to the guidance template that is being used. Semantic attack category `bins' are dynamically instantiated when events that belong to the category are encountered in the stream. These attack track categories thus serve to aggregate and contain run-time sensor events that share the category semantics. These categories are then connected by means of edges representing a possible transition from one attack category to the next if such a progression is permitted by the guidance template. Attack tracks thus represent attack paths that are semantically valid with respect to the guidance template used. This represents the first step in event correlation to match a coherent attack model. Event Fusion by IP-Address Correlation: The IP address information provided by events can also be used for multistage attack correlation. The general principle of IP correlation is that two events can be linked if their addresses indicate that they are from the same host or if they indicate that the events are a result of successive attack steps. For example, if ( ) then is a valid transition indicating possible attack progression. Semantic attack category bins can also be related to each other if their constituent events are related by means of IP address.

7Iv¤wxy7Iv"w ! Ą rr w7%"Š t "Q r ! Ą rr w7@QŠ qs ru7t %  w  rr w7@ rr

 Ą8wdŠ

w

IV. E XPERIMENTS AND VALIDATION We have performed extensive tests with specially developed datasets that represent multistage attacks carried out against a

1288

OPEN SOURCE ANALYST PROCESS REFINEMENT

FUME GUIDANCE TEMPLATE DATABASE IMPACT ASSESSMENT

RANKING MEASUREMENT INPUT MANAGER ATTACK TRACK GENERATOR FRAGMENTATION HANDLER

Snort 3.2

Web Logs

Dragon

OTHER SA PROCESSES

INFERD

OUTPUT MANAGER

VISUALIZATION & THIRD PARTY APPS

Fig. 2. Overall architecture of the Event Correlation for Cyber-Attack Recognition System Fig. 3.

Overview of the Experimental Network OSIS (Courtesy: Skaion Corp.)

military network. These datasets were developed by Skaion Corporation under the ARDA P2INGS program for the purpose of multistage attack detection research [16] and to address the paucity of realistic datasets for evaluating cyber SA tools. Several versions of this dataset were developed and documented and are available to researchers for benchmarking SA solutions. Our experimental network emulates an unclassified network used by the United States Intelligence Community called the Open Source Information System (OSIS). The configuration consists both of physical hosts and machines that simulate a number of virtual hosts. The OSIS network consists of four enclaves ­ the BPRD (100.10/16), SGC (100.5/16), SHIELD (100.20/16) and UNCLE (100.30/16). Two external enclaves with limited privileges are also simulated ­ the MI 5-1/2 (89.44.0.0/16) and the Village (92.6.0.0/16). Both Windows and Linux machines, web, mail and other servers are part of the network. The event traffic available to us is calibrated to match realistic levels, and consists of both host and network events generated by normal activity and background attacks in addition to specially developed multistage attacks similar in spirit and technique to the Stakkato intrusions [14]. The data available to us also documents ground truth with respect to these attacks so that ECCARS' performance in multistage attack detection can be quantified. An overview of the OSIS network is shown in Fig. 3. Below, we examine the performance of ECCARS with regards to multistage attack detection from a quantitative standpoint ­ this evaluates the system as a solution to the overall multistage attack detection problem defined earlier. A. Performance Evaluation: Multistage Attack Detection Quantitative evaluation of ECCARS is carried out in a `blind' fashion (i.e., without a priori knowledge of the types of attacks present in the event streams) to ensure that the basic fusion process is sound, and that the approach succeeds in detecting generic multistage attacks from heterogeneous event streams. We generate multistage attack hypotheses consisting

of sets of sensor events and the availability of ground truth data about actual events generated during different attack steps allows a third-party to calculate the extent to which the hypotheses match actual attacks for evaluation purposes. The validation steps are as follows:

p p p

p

Initialize ECCARS with relevant parameters (sensor specific routines, guidance templates, etc.). Event streams from heterogeneous sensors are fed to the system which fuses them on-the-fly to generate `result' attack tracks. Ground truth data collected in a controlled setting by dataset designers contains details of sensor outputs that are generated as a result of specific attack steps. A third party generates actual multistage attack event-sets or `ground-truth' attack tracks based on this data for the purpose of evaluating the effectiveness of ECCARS. A suitable comparison function is defined so that `groundtruth' tracks can be mapped to `result' tracks. This assignment of ground truth to result tracks enables the evaluation of system performance using standard metrics (e.g., Precision, Recall) used for evaluating intrusion detection systems.

` c e TYT X Ľ # Y T X v t xf rWt 5gC7I7IRx&hfxyw qiS Ą ` Tc# Ľ TYX Š  7Iu r where defined as S is a comparison 7Iu r vjkjl function. l ` Tchere l , else ` Tc#nm0TYS X lpo is  S ĄĄ `` Tc# ĽĽ TYX Š Š  j q # S Tc# TYX  ` xg t&r .  is the percentage of match and the TYX 's that cover Tc# are candidate tracks for this multistage
attack.

Attack coverage (based on the comparison function) and track assignment are defined specifically for ECCARS as follows: Attack Coverage: A multistage attack is said to be covered if and only if

1289

GT0(10) GT1(50) GT2(30) GT3(25) GT4(150) M ATRIX

R0 0.00 0.10 0.67 0.20 0.00

R1 0.00 0.20 0.00 0.00 0.10

R2 0.00 0.00 0.00 0.80 0.00 TABLE I

R3 0.00 0.00 1.00 0.00 0.50

R4 1.00 0.00 0.00 0.00 0.00

R5 0.00 0.80 0.00 0.00 0.00

Match % 0.00 0.25 0.50 0.75 0.95 0.00 0.25 0.50 0.75 0.95 0.00 0.25 0.50 0.75 0.95 0.00 0.25 0.50 0.75 0.95

Recall

DEPICTING SIMILARITY THRESHOLDS BETWEEN G ROUND T RUTH AND R ESULT T RACKS , THE FINAL ASSIGNMENT IS AS FOLLOWS ­ G ROUND TRUTH TRACKS [GT0, GT1, GT2, GT3 AND GT4] ARE ASSIGNED TO R ESULT TRACKS [R4, R5, R3, R2 AND R3] RESPECTIVELY

Precision

and a Track Assignment: For a multistage attack for this attack, the track assignset of candidate tracks ment for is the candidate track such that . The definition above gives us, for each multistage attack that is covered, a set of candidate tracks in the result set that have a degree of overlap with the attack in terms of sensor events. A multistage attack that is covered is considered to have been `detected' while attacks that are not covered by at least one result track are considered to have been missed. A result track that does not cover any actual ground-truth track is considered to be a false positive. The second definition allows us to make an assignment of a candidate result track to a ground-truth track; the candidate result track with the highest absolute number of event matches with the ground truth track is chosen for final assignment. This is depicted in Table I ­ the rows represent ground truth ( ) tracks with the number of constituent events in parentheses, while the columns represent result tracks ( ). The intersection of rows and columns indicates the percentage (in fractional terms) of event matches between a track and an track. Initially, a threshold for is used to identify candidate tracks for a track; this is followed by consideration of the absolute number of event matches of candidate tracks for final assignment of the track to an track. We also evaluated ECCARS by making use of the standard performance metrics ­ Precision and Recall. The precision metric measures the accuracy of attack hypotheses while recall measures the quality of attack detection. Additional system-specific metrics that have been used to evaluate ECCARS are ­ Fragmentation and Misassociation. These metrics evaluate the effective accuracy in correlating events as part of a track (multistage attack). Test Datasets: The datasets for the multistage attack scenarios are labeled as 4s5, 4s6, 4s8, 4s16 and 4s17. They contain background traffic in addition to actual attacks. The attacks are variations of a multistage attack theme called `Bank-Shot Multistage Attack' which consists of the following stages:

T ` r T # l oVl Tus m ` c T Ľul TYX m ` Tc# s T #l

` TY#

Fragmentation

TgX

d5Ttse

Mis-association

4s5 Alerts:4509 Tracks:263 97.70% 92.80% 92.40% 92.00% 91.30% 100.00% 94.90% 94.60% 94.20% 93.40% 0.00% 0.00% 0.00% 0.00% 0.00% 0.00% 5.10% 5.40% 5.80% 6.60%

4s6 Alerts:6329 Tracks:159 92.50 83.60% 83.00% 83.00% 82.40% 94.20% 85.30% 84.60% 84.60% 84.00% 5.10% 1.30% 1.30% 0.00% 0.00% 0.00% 12.80% 13.50% 14.70% 15.40%

ECCARS

PERFORMANCE METRICS WITH S KAION MULTISTAGE ATTACK SCENARIOS

TABLE II

  6



  6

v



v

v

  6

  6

v

script" which connects to a mysql database The attacker queries the database for confidential information The datasets also contain variations of the attack that were designed to mislead sensors ­ several requests that generate similar signatures to the attack are performed to mask the actual attack. Multistage Attack Detection: Variation in attack coverage for different values of percentage of match are shown in Table II. The general trend observed is that performance marginally declines, as the match-percentage approaches 1.0. This is because of the vagaries associated with high-level attack correlation on blind data. Ground truth is estimated based on post-attack analysis and has the benefit of hindsight; several attacks are present in the results as `attack track fragments' which only partially match the ground truth attack track. However, we find that virtually all attack paths are detected by ECCARS ­ this can be seen by relaxing the match percentages as shown in the table. In general, we find that precision and recall rates of 85% are obtained with diverse attack scenarios and these numbers have been validated as quite encouraging for SA solutions by third-party domain experts involved in the testing.

p

V. C OMPARISON

WITH

R ELATED W ORK

p p p p

Attacker performs preliminary scanning of the target in the BPRD subnet An initial attack on a Windows system fails Attacker moves to a secondary target running Linux The attacker compromises the target via its web server by carrying out a buffer overflow attack on a "well-known

Techniques for correlation of intrusion sensor alerts for attack scenario detection has been recently reviewed in a book by Jajodia et al. [8]. Several approaches in the literature are based on correlating events based on similarities in their attributes (e.g., source and destination IP address). Staniford et al. [15] and Cuppens et. al. [2] are some efforts that adopt attribute matching as a correlation method. In [9], an effort is made to reduce alert volume by identifying and removing root-

1290

causes that are responsible for generating large alert clusters; attribute similarities are again used for this purpose. The main shortcomings of these approaches are that they simply cluster events without providing any semantic information (e.g., what kind of attack scenario does an alert cluster indicate?) about potential scenarios, and that they do not indicate causality (i.e., attack progression). Another class of correlation approaches uses attack strategies or scenarios that are either learned from training data by the application of data mining algorithms, or specified manually by human analysts. Techniques such as Dain et al. [4] and correlation based on STATL [5] and LAMBDA [3] use this approach ­ these suffer from the limitation that attacks that are unseen in training data or not explicitly specified go undetected. Several other correlation techniques can provide causality information by requiring a priori enumeration of the prerequisites and consequences of different sensor events. JIGSAW [17] and [1] adopt this approach but have the restriction that they require perfect matches between prerequisite and consequence attributes before correlating events. MIRADOR [17] and TIAA [12], [13] adopt similar approaches but allow for more flexibility in correlation by permitting partial attribute matches. These techniques, while allowing for the detection of novel attack scenarios and revealing causality, have the serious limitation that they require complete, exhaustive, and accurate enumerations of the prerequisites and consequences of all events; this is infeasible. The technique we have presented here retains the benefit of being able to detect novel scenarios and the capability to convey the semantics of attack progression, while being feasible in practical environments. VI. C ONCLUSION In this paper, we have presented a comprehensive situation awareness solution for the detection of goal-oriented multistage attacks against a computer network. The novelty of our work lies in the high-level semantic approach that we adopt to event correlation which makes the technique feasible in realistic network environments. In fact, we believe that this notion is very powerful and can form the basis for developing an effective solution to other attack paradigms such as insider threat if relevant semantics are considered. For example, considering user actions in terms of attack semantics (say, a certain series of user actions might indicate the possibility of data exfiltration) may prove to be an effective way of modeling insider threat. We have demonstrated experimentally that our techniques are able to provide high-quality inferences of evolving multistage attacks. The practical usability of the techniques and tools that we have presented in this paper depend to a large extent on proper maintenance and updation of the relevant databases. While the guidance template for a network might remain the same, day-to-day accuracy of sensor alert mappings has to be maintained. It is seen that exploit databases, like the Snort signature databases, are constantly updated ­ new alerts have to be seamlessly incorporated into ECCARS' databases.

Continually refining guidance templates to achieve greater accuracy is another useful capability to have. Development of a pre-processor plugin as a means to achieving these goals is part of future work. We also contemplate developing an alert de-duplication module to pre-process the sensor alerts prior to feeding them to the correlation engine. ACKNOWLEDGMENTS This research has been supported in part by Alion Science and Technology subcontract F30602-03-C-0245 from ARDA and AFRL programs, and by NSF Grant No. DUE-0802062. Sunu Mathew is currently working at Amazon.com, Inc. The authors would like to thank Skaion Corporation for providing the dataset used in the experiments. R EFERENCES
[1] S. Cheung, U. Lindqvist, and M. Fong. Modeling multistep cyber attacks for scenario recognition. In Proceedings of the DARPA Information Survivability Conference and Exposition (DISCEX III), pages 284­292, Washington, DC, USA, 2003. [2] F. Cuppens. Managing Alerts in a Multi-Intrusion Detection Environment. In ACSAC '01: Proceedings of the 17th Annual Computer Security Applications Conference, page 22, Washington, DC, USA, 2001. [3] F. Cuppens and R. Ortalo. LAMBDA: A Language to Model a Database for Detection of Attacks. In Proceedings of Recent Advances in Intrusion Detection, pages 197­216, Toulose, France, 2000. [4] O. Dain and R. Cunningham. Fusing a Heterogeneous Alert Stream into Scenarios. In Proceedings of the ACM Workshop on Data Mining for Security Applications, pages 1­13, Philadelphia, PA, USA, 2001. [5] S. Eckmann, G. Vigna, and R. Kemmerer. STATL: An Attack Language for State-based Intrusion Detection. Journal of Computer Security, 10(1/2):71­104, 2002. [6] M. R. Endsley. Situation Awareness Global Assessment Technique (SAGAT). In Proceedings of the National Aerospace and Electronics Conference (NAECON), pages 789 ­ 795, 1988. [7] J. Haines, D. Ryder, L. Tinnel, and S. Taylor. Validation of Sensor Alert Correlators. IEEE Security and Privacy, 2003. [8] S. Jajodia, P. Liu, V. Swarup, and C. Wang. Cyber Situational Awareness. Advances in Information Security, Springer, 2010. [9] K. Julisch. Clustering Intrusion Detection Alarms to support Root Cause Analysis. ACM Transactions on Information and System Security, 6(4):443­471, 2003. [10] S. Manganaris, M. Christensen, D. Zerkle, and K. Hermiz. A Data Mining Analysis of RTID Alarms. Computer Networks, 34:571­577, 2000. [11] S. Mathew, D. Britt, R. Giomundo, S. J. Upadhyaya, M. Sudit, and A. Stotz. Real-time Multistage Attack Awareness through Enhanced Intrusion Alert Clustering. In Proceedings of the Military Communications Conference (IEEE MILCOM), volume 3, pages 1801­1806, Atlantic City, NJ, USA, 2005. [12] P. Ning, Y. Cui, D. Reeves, and D. Xu. Techniques and Tools for Analyzing Intrusion Alerts. ACM Transactions on Information and System Security (TISSEC), 7(2):274­318, 2004. [13] P. Ning and D. Xu. Hypothesizing and reasoning about attacks missed by intrusion detection systems. ACM Transactions on Information and System Security (TISSEC), 7(4):591­627, 2004. [14] The Stakkato incident aka Case 216: http://www.nsc.liu.se/ nixon/stakkato.pdf. [15] S. Staniford, J. Hoagland, and J. McAlerney. Practical Automated Detection of Stealthy Portscans. Journal of Computer Security, 10(1/2):105­ 136, 2002. [16] R. Stapleton-Gray and S. Gorton. Rendering the Elephant: Characterizing Sensitive Networks for an Uncleared Audience. In Proceedings of the IEEE International Information Assurance Workshop, pages 208­ 214, West Point, NY, USA, 2006. [17] S. Templeton and K. Levitt. A Requires/Provides Model for Computer Attacks. In NSPW '00 - Proceedings of the 2000 Workshop on New Security Paradigms, pages 31­38, Ballycotton, County Cork, Ireland, 2000.

1291

