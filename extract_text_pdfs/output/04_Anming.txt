Proceedings of the 5” World Congress on Intelligent Control
and Automation,June 15-19,2004, Hangzhou. P.R. China

%?3?EfE$%%e%g$
n?dJ‘k%&
19H. $BfiM

2004$6JJ15-

Study on the Applications of Hidden Markov
Models to
*
Computer Intrusion Detection
Zhong Anming

Jia Chunfu

I,*

”College of Information Technology and Sciences, Nankai University, Tianjin 300071,China (E-mail: zhonganming@eyou.com)
2’State Key Laboratory of Information Security, Institute of Software of Chinese Academy of Science, Beijing 100039,China
(E-mail: ctjia@nankai.edu.cn)
Abstrac: - In this paper, the problem of the applications of
HMM (Hidden Markov Model) to computer intrusion detection
is discussed. Both first-order HMM and second-order HMM are
tested to compare their performances of computer intrusion
detection. HMMs are used to build a profile of normal activities
on a computer from the training data of normal activities on the
computer. The norm profile is then used to detect anomalous
activities from testing data of both normal and intrusive activities
on the computer for intrusion detection. Using the data set of
DARF’A 2000 LLDOS 1.0, our experiments show that first-order
HMM reveals better intrusion detection performance than that
of second-order HMM.
Keywords - Compufer secwig, InIrusion defeefion, HMM

I. INTRODUCTION
Vulnerabilities and bugs of information systems are often
exploited by malicious users. As information systems become
increasingly complex, vulnerabilities and bugs are inevitable
for technical and economic reasons. Hence, the possibility of
intrusions into information systems always exists. In order to
protect information systems, it is highly desirable to detect
intrusive activities while they are occumng. There are two
genera1 approaches to detect intrusions: pattern recognition
(misuse detection) and anomaly detection. Pattern recognition
techniques identify and store signature patterns of known
intrusions, match activities in an information system with
known pattems of intrusion signatures, and signal intrusions
when there is a match. Pattern recognition techniques are
efficient and accurate in detecting known intrusions, but
cannot detect novel intrusions whose signature pattems are
unknown [l]. Anomaly detection techniques establish a
profile of a subject’s normal activities (a norm profile),
compare observed activities of the subject with its norm
profile, and signal inbusions when the subject’s observed
activities differ largely from its norm profile [1,2]. This paper
focuses on anomaly detection techniques for intrusion
detection. There are basically two kinds of source data can be
applied to intrusion detection [3]: computer audit data which
record a sequence of events occurring on a host machine and
network traffic data which capture data packets travelling on
the network. Computer audit data can be generated by OS
audit modules (such as BSM for Solaris), while network
traffic data can be captured by specially designed network

traffic analysis utilities (such as Tcpdump for Linux). Our
study use computer audit data as source data.
In the researches of intrusion detection based on computer
audit data, the key problem is how to build the norm profile to
precisely describe the characters of the audit data. Various
methods have been used in former researches [4,5].Since the
audit data can always be represented by a sequence of states
of the object computer, the stochastic processes theory can be
applied to do the sequence analysis and get their characters we
need. The study by N. Ye and her colleagues revealed that the
frequency properry of multiple event types for a given
sequence of events is necessary for intrusion detection, and
the ordering property provides additional advantage than the
frequency property to intrusion detection [I].
The HMM (Hidden Markov Model) is a very powerhl
statistical method of cbaractering the observed date sample
arranged in a discrete-time series. It has the ability to process
non-linear and time-variant systems and can be viewed as a
double-embedded stochastic process [2]. Using HMM, we can
capture both the frequency property and the ordering property
of the audit state sequence.
In our research, we apply both first-order HMM and
second-order HMM to build the norm profile from computer
audit data for intrusion detection. It is clear that the secondorder HMM takes more calculation cost. But does it produce
better detection performance? This is the problem to be solved
in this paper.
In the following section of this paper, we first give a brief
introduction to HMM, and the main algorithms used in firstorder HMM and second-order HMM. We then describe the
application of these models to intrusion detection, including
data sources and problem representation. Finally, we analyse
our experiment results and compare the intrusion detection
performance of these models.

11. OVERVIEW OF HMM
HMM is a special kind of discrete-time stochastic process
model, by the term “discrete-time stochastic process”, we
mean that if we observe a system at some discrete points of
time f = 1, 2, 3, 4, .._and get the system state q, (which is a
random variable and its value can’t be known with certainty
before timer), then [q,,tal} describes B stochastic process of
the system. HMM is a kind of discrete-time stochastic process
with the following two special properties:

Suppaned by Tianjin Nahlral Science Foundation Key Projects of China (Grant 01360071 I , 03380061 1)

4352
0-7803-8273-0/04/$20.0002004 IEEE

1). The probability distribution of state i at time I only
depends on the previous d states, and a state transition from
time t-d through time t is independent of time. That is, it must
be a stationary d-order Markov stochastic.
2). It has an observation symbol sequence according to its
state sequence, and the observation symbol is a probabilistic
function of the state, i.e., the HMM is a doubly embedded
stochastic process with an underlying stochastic process that
is not observable (it is hidden), but can only be observed
through another set of stochastic processes that produce the
sequence of observations [ 6 ] .
From the discussions above we can define the following
notation for our model [6,7]
N = number of states in the model;
M = total number of distinct observation symbols;
T = length of observation sequence;
q, = the state io which we are at time 1;
0,=the observation symhol observed at time 2;
0 = 01,0
%..., OT, the observation symbol sequence;
V = {v,,..., vM}, the discrete set of possible observation
symbols;
II = { x i } , xi= P(ql = i), the probability of being in state
i at the beginning of the experiment ,i.e., at t = I;
A , = {aB}NXN
where a,= P(q,+,=jlq, = i), the probability
of being in state j at time t+1 given that we were in state i
at time 1, and A , is independent of time;
A1 = {agkJNXNxN
where avk=P(q,+l= klq, =j,qcl = i), the
probability of being in state k at time t+l given that we
were in state j at time t and in state i at time 1-1, also A2 is
independent of time;
E = {b,{k)}l, b,{k) = P(vk at 114, =J]. the probability of
observing the symbol vtgiven that we are in state j .
Then, first-order HMM is defined as

1=(N,M,V,n,A,B)
1

The Segmental K-means algorithm and the ForwardBackward algorithm for first-order HMM are described in
details in [ 7 ] ,so we put our emphasis upon the introduction of
these algorithms for second-order HMM.
A. Fomard-Backward algorithm for second-order HMM
1). Forward algorithm
Consider the forward variable a,(i, j ) defined as

a,(i,
j ) = P ( O I , O 2 , . . . , O , , q=, i~, q, , = j l %
25t5T; l5i,j5N

i.e., the probability of the partial observation sequence up to
time I on condition that the system is on state i at time 1-1 and
on state j at time t. given the model A, P(0lA) can be computed
inductivelv as follows:
a. Initialisation

a2(i,j)=n,b,(Ol)a,bj(0,),
1 5 i,j 5 N
h. Recursive computation
N

a , + l ( j & = &(i2j)akkbk(O,+,),
;=I

25t5T-I; 16j,k<N

c. Termination

2). Backward algorithm
We define the backward variable b,(i. j ) as
P,(i.j)=P(O,+,,O,+,,...,O, lq,-l =h,
= j A ,

(1)

25t5T-1; I<i,j<N

and second-order HMM can be defined as

2 = (N,M,V,n,Ai3A2,B)

(3)

(2)

Similar to the forward algorithm, we have
a. Initialisation

When applying HMM to intrusion detection based on
computer audit data, there are two key issues involved, one is
how to build the model (that is to adjust the parameters o f A , ,
A2, E and n) from the training data so that the gained model
can precisely describe the characters of norm training data, the
other is bow to distinguish anomaly from the test data given
the model, we address all these issues based on the probability
of P(OlA), that is to say, in training phase we adjust the
parameters in HMM until P(0lA) is maximized, and in testing
phase we recognize an Observation sequence U as anomaly if
its probability P(0lA) is less than a preset threshold .

PT(i,j ) = 1,

12 i, j 5 N

b. Recursive computation
N

P , ( j , k )= C P , + , ( i , j ) a ~ k b , ( O , + l ) ,
,=I

2515T-1; 15j,k5N

c. Termination

111. MAlN ALGORITHMS
INVOLVED

In our experiment, we use Segmental K-means algorithm
[SI to train the HMM, we use Forward-Backward algorithm to
compute P(0lA) when testing our model. The Segmental Kmeans algorithm should use the Viterbi algorithm [9] to get
the best state sequence given 0 and 1.

B. Viterbi algorithm for second-order HMMr9]
The Viterbi algorithm can find the best state sequence
I
t
Q = (ql,q 2 , ..,q;) according to the given observation
sequence 0 and given HMM A, where “best state sequence”

4353

means the sequence that maximizes P(Q,Ol a).
We define

0,,0,,.~.,0,
In) (11)
i.e., the largest probability the system goes through the state
sequence ql,q2,...,q,.,(at state i), q,(at statel] and generate the
ohservation symbol sequence 01,02,
...,0, given a secondorder HMM 1.
The best state sequence can be found through the
following procedure:
a. Initialisation
6 , ( i , j ) = i r , a , b i ( 0 , ) b j ( 0 2 ) , l S i 5 N ; 1 5 j 5 N (12)

l S i 5 N ; 15 j 5 N (13)

91(i,J)
= 0,

h. Recursion
J,+,w) = ~ ~ ~ [ ~ , ( i . J ) a , j b , ( ~ , + , ) ,

2<t<T-l;
9,+,
( j , k )= argmaxl6, (i,i)a,
IlKN

15i,j,k5N

(14)

l5i,j,k<N

(15)

1

25t<T-I;
c. Termination

..

q;.l = v,+l(q,
sq7+l
I 1 5 f 5 T -1

(17)
Up to now we get the hest state sequence Q*, which is
needed in the Segmental K-means algorithm to train the HMM.
The Segmental K-means algorithm for second-order
HMM is similar to that for first-order HMM 171, the
difference is the computation of Q'.

Solaris-based host machines name Pascal is available in the
DARPA 2000 LLDOS 1.0. Snlaris has a utility named BSM
(Basic Security Module) that records auditable events on the
host and produces audit data. There are two kinks of audit
data in general: those generated by kemel events are called
Kemel-Level Audit Records, and those generated by userlevel events are called User-Level Audit Records [Ill.
Information in an audit record includes event type, user ID,
process ID, session ID, path, return value etc. There are 208
different types of auditable events in BSM. It is reported that
event type is very effective in detecting intrusive activities [ 11,
so we only use the information of event type in our
experiments.
The DARPA 2000 LLDOS 1.O data of Pascal cover about
3 hours of activities, the details of these data are available on
[12], there are 81755 normal events and 32327 intrusive
events generated by 4 intrusive sessions during the 3 hours,
we use the audit records for the normal events in the first hour
to train our HMMs and the whole set of the 3-hour data to test
our models.
B. Data representation and HMM implement
We consider the event type of an audit event as the
observation symbol of HMM, and the sequence of event type
in the training and testing audit data constitute the observation
sequence 0.Then we can use the algorithms described in
section I11 to do the intrusion detection experiment.
Our experiment has two phases: training phase and
testing phase. During the training phase, the Segmental Kmeans algorithm is used to train the HMM to fit the
observation sequence 0.In the testing phase; we move a
window (whose length equals to parameter K used in the
Segmental K-means algorithm) through the test data to get the
test sequences of auditable event type. Then the ForwardBackward algorithm is used to calculate the probability of a
given test sequence 0,If P(Oj2) is less than the preset signal
threshold the test sequence 0 is considered anomaly.

IV. APPLICATION
OF HMMTo INTRUSION
DETECTION

V. RESULTS ANDDISCUSSIONS

In this section we describe the data used in our
experiments and the details of how the HMMs are applied to
the problem of intrusion detection.
A . Datasource
The Information Systems Technology Group (IST) of
MIT Lincoln Laboratory has collected and distributed the first
standard corpora for evaluation of computer network
intrusion detection systems. These evaluations that are called
DARF'A data set measured probability of hit and probability
of false alarm for each intrusion detection system under
test. They are of interest to all researchers working on the
general problem of workstation and network intrusion
detection [lo]. We use the DARPA 2000 LLDOS 1.0 data in
our experiment to test the HMM model. The LLDOS 1.0 data
is an attack scenario that includes,a distributed denial of
service attack run by a novice attacker. Audit data from a

In this section we present the results of our experiments
and give some discussions on the application of HMM to
intrusion defection.
Firstly we define some terms used generally in the
analysis of testing results of an intrusion detection,system [13]:
I). Hit rate: The ratio of the number of correctly identified
intrusive events to the total number of intrusive events in a set
of testing data.
2). False alarm rate: The ratio of the number of normal
events identified as intrusive events to the total number of
normal events in a set of testing data.
3). Signal threshold: A value chosen on the probability
scale between 0.0 and 1.0. It is used as a criterion to
distinguish intrusive events from normal events.

4354

1

testing data as normal or intrusive based on the probability
P(OI1) calculated from the Forward-Backward algorithm.
After identifying each audit record in a set of testing data as
normal or intrusive, we compute the hit rate and the false
alarm rate. Hence for a given signal threshold, we obtain a

1

08

d

0.6
0.4

pair of hit rate and false alarm rate values. By varying the
value chosen for the signal threshold we obtain pairs of hit
rate and false alarm rate values as points on the curve. The
closer the curve is to the upper-left comer of the chart (which
means we get higher hit rate with lower false alarm rate), the
better the detection performance [13].
Fig. 1 through Fig. 4 show the ROC curves of first-order
HMM and second-order HMM applied to intrusion detection
with N=8, K=10 and N=12, K=IO, where K is the parameter
used in Segmental K-means Algorithm and also is the window
size during testing phase, and N is the preset number of states
in HMM. From these ROC curves we can see that regardless
of different state number, first-order HMM produces a better
intrusion detection performance than second-order HMM. Our
experiment results also reveal that although there are 208
different types of auditable events in the audit data, HMM
with only 8 states can do the intrusion detection work with
satisfactoly hit rate and false alarm rate, which means the
computational cost of HMM is much lower than that of
ordinary Markov Model.

0.2

false alarm rate
0

0

0.1

0.2

0.3 0.4

0.5

0.6

0.7

0.8

1

0.9

Figure 1. The detection performance of tint-order HMM
applied to Pascal data set, with N=8 and K=IO

’I@--

08

0.2

false alarm rate
0
0

0.1

0.2

0.3 0.4

0.5

0.6 0.7

0.8

1

0.9

Figure 2. The detection performance of secondader HMM
applied toPascal data set, withN=8 and K=IO

‘m

Former researches done on the application of HMM to
computer intrusion detection reveal that the profile database
of the HMM method is small and the HMM method can detect
intrusion quickly once the normal database has been built up,
moreover, the HMM method can build a nearly complete
database with only small parts of normal data [2]. However,
We show in the paper that the performance of second-order
HMM in not as good as first-order HMM, although the
computational cost of second-order HMM is much higher.
This may be attributed to the interdependency among events
in the audit event sequence is not that strong and can be
properly described by first-order HMM, and second-order
HMM overestimates the interdependency among adjacent
events. Our experiments also show that the detection
performance is affected by the preset state number N of the
HMM, further studies can be done on this subject.

08

d

0.6

02

false alarm rate
0

0

0.1

0.2 0.3 0.1 0.5

0.6 07

0.8

0.9

1

Figure 3. The detection performance of first-order HMM
applied to Pascal data set, with N=12 and K=lO
1

e w - -

-

08

0.6

VI. CONCLUSION

2

0.4

REFERENCES

0.2

0

false alarm rate

0

0.1

0.2

0.3 0.4

0.5

0.6

0.7

[I]
0.8

0.9

N. Ye, X. Li, Q.Chen, S. M. Emran, M. Xu,“Probabilistic Techniques
for Intrusion Detection Based on Computer Audit Data”, IEEE Trans.

1

Systems, Man, and Cybernetics, Vol. 3 I , No. 4, pp.267-274, May 2001.

Figure 4. The detection performance of second-order HMM
[Z]

applied to Pascal data set, with N=12 and K=IO

Y.

Qiao,

X. W. Xin, Y . Bin. S . Ge, “Anomaly Intrusion Detection

Method Based on H M M , IEEE Trans. electronics letters, Vol. 38, No.

It is clearly that a good detection performance should be
characterized by a high hit rate and a low false alarm rate. We
use a Relative Operating Characteristic (ROC) curve [I41 to
analyse the intrusion detection performance of HMM. Given a
signal threshold, we can identify each audit event in a set of

4355

13, pp. 663-664, June 2002

[3] S. A. Hofmeyr, S. Forrest, A. Somayaji, “lntmsion Detection Using
Sequences of System Calls”, hnp:llww\u.cs.unm.edui-steveahi.
[4]

S. Forrest, S. A. Hafmyr, A. Somayaji. “A Sense of Self for Unix

AccousL, Speech, Signal Processing, vol. ASSP-38, No. 9, pp. 1639-

Processes”, IEEE Symposium on Research in Security and Prjwcy, Los

1641, Sept. 1990.

Alamitos, CA, 1996. IEEE Computer Society Press.

[SI N. Ye, T. Ehiabar, Y. Zhang, “First-order Versus High-order Stochastic

[9] G D. Fomey, Ir., “The Viterbi algorithm”, Proc. IEEE, vol. 61, pp. 268278,1973.

Models for Computer Intrusion Detection”, Quality and Reliability

[IO] hnp:llwww.ll.mit.eduIDARPA.

Engineering International. Int. pp. 243-250,2002(18).

[6] D. Husmeier, “A Tutorial on Hidden Markov Models”, Published online
hnp:llwww.biors.ac.u~dirk.
[7]

Rakesh Dugad, U .B. Desai, “A Tutorial on Hidden Markov Models”,

[I 11 hnp:lldocs.sun.ca~dbld~cl806-178916jb25~4~3?~=~i~~.
I121 h n p : l l w w w . l l . m i t . e d ~ A ~ ~ ~ ~ 2 O O O ~ ~ t ~ ~ i n d e x . h ~ l .

[I31 S . Xiao-xing, W.Tai-jun. H. Zhen-ya, “The Leaming Algorithm o f the
Second-Order HMM and Its Relationship with the First-Order H M M ,

hnp:ll”ision.ai.uiuc.eduldugadlguestbo~W=dd~M~~st.h~.M~y
199

Journal ofApplied Sciences, Vol. 19, No. 1, pp. 29-32, March 2001

6.

181 B. H. Juang, L. R. Rabiner, “The Segmental K-mans Algorithm for
estimating the parameters of Hidden Markov Models”, IEEE Trans.

1141 Swets, John A, The Relotiw Operoi,ng Choroetprisic in Ps)’chologp,

4356

Science, Vol. 182, pp. 990-100.

