Real Time Alert Correlation and Prediction using Bayesian Networks
Ali Ahmadian Ramaki, Masoud Khosravi-Farmad, Abbas Ghaemi Bafghi
Data and Communication Security Lab., Computer Engineering Department, Ferdowsi University of Mashhad, Mashhad, Iran ali.ahmadianramaki@stu.um.ac.ir, masoud.khosravifarmad@stu.um.ac.ir, ghaemib@um.ac.ir
Abstract-- Nowadays, to provide a picture of the current intrusive activities in the network, detection methods are important to tackle the probable risks of attackers' malicious behaviors. Intrusion Detection Systems (IDSs), as detection solutions, are one of the main devices to record and analyze suspicious activities. A huge number of low-level alerts generated by IDSs clearly reflect the need for a novel alert correlation system to reduce alert redundancy, correlate security alerts, and discover multi-step attack scenarios. In this paper, we propose a novel alert correlation framework which processes the generated alerts in real time, correlate the alerts, construct the attack scenarios using the concept of Bayesian networks and forecasts the next goal of attackers using the creation of attack prediction rules. The proposed framework has two modes: on-line and offline. In the off-line mode, a Bayesian Attack Graph (BAG) is constructed using the concept of Bayesian networks. Then, in the on-line mode, the most probable next steps of the attacker are predicted. Experimental results show that the framework is efficient enough in detecting multi-step attack strategies without using any predefined knowledge. The results also show that the algorithm perfectly forecasts multi-step attacks before they can compromise the network. Keywords- Network Security, Intrusion Detection, Alert Correlation, Intrusion Prediction, Bayesian Network.

of generated alerts, the high rate of false alerts (irreverent alerts), the inability to correlate and discover the causal relationship between the raw alerts, the inefficiency in detecting the multi-step attack scenarios and the prediction of the attacker's next goal which is the most important one. With regard to the aforementioned drawbacks, there is a need to alert correlation systems which receive and analyze the alerts generated by various detection sensors like IDS, firewall, honeypot and so on. These systems provide a high level picture of current security situation of a network or system. Alert correlation is a process in which generated alerts by one or more sensors in a network are analyzed in order to provide an overview of probable intrusion efforts [2]. An alert correlation system consists of some components. Each component has a specific role in the whole correlation process. The end goal of alert correlation process is to reduce the quantity of generated alerts by improving the quality of them. So far many alert correlation frameworks have been proposed [1, 2, 3, 4, 5]. These frameworks have been used in different scopes such as network security management (NMS), IT security and SCADA systems [1]. One of the most important IT security applications of alert correlation is to detect multi-step attack scenarios through which the attacker launches a complex attack using a set of single step attacks. The existing alert correlation frameworks use different techniques for constructing attack scenarios using causal relationships between the alerts. These techniques are divided in three main categories: similarity-based, sequentialbased, and case-based [1, 2]. With the development of information networks and the increasing use of security sensors in monitored networks, there is a need to develop an alert correlation framework which is able to process alerts in real time and be scalable for large environments. This is called stream mining based alert correlation. The main challenges in this area are coping with the high volume of generated alerts, one time processing and the changing nature of received alerts over time. To provide a picture of the current intrusive activities in the network, we need a real time alert correlation system which is able to predict the future behavior of the attackers. In this paper, we propose a novel alert correlation framework which processes the generated alerts in real time, correlate the alerts, construct the attack scenarios using the concept of Bayesian networks and forecasts the next goal of attackers using the creation of attack prediction rules. Three main data sources are used in proposed framework: alert, vulnerability, and topology databases. The other major features of the proposed framework

I.

INTRODUCTION

Nowadays, the internet plays an important role in our daily life. This is due to the various services provided for the users. Although this technology is a good opportunity for progress, it also brings some threats with itself. The main reason is the increasing wave of malwares and cyber attacks through which the attackers exploit the vulnerabilities of the hosts in the networks to gain unauthorized access to user's data [1]. So, it is necessary to use security mechanisms and devices to tackle the risks of malicious activities. Different organizations use the defense in depth approach to prevent the probable risks of cyber attacks. In this approach, the security solutions are divided into three categories: prevention, detection and recovery. The intrusion detection systems (IDSs), as detection solutions, are one of the main devices to record suspicious activities. These systems use logs and network packets to discover abnormal activities based on anomaly and misuse detection approaches [2]. Although IDSs play an important role in increasing system and network security, they have some drawbacks. The use of IDSs will bring some challenges which have been reported in previous works [1]. These challenges include the high volume

978-1-4673-7609-9/15/$31.00 Å 2015 IEEE

98

are scalability for heterogeneous resources, filtering the irrelevant alerts using a context-based alert management approach, and detecting multi-step attacks while each step occurring at least once in a time. The rest of the paper is organized as follows: the next section presents a brief review of the related works. Section III reviews relevant concepts of Bayesian networks and Bayesian attack graph (BAG). Section IV describes the proposed alert correlation framework with its components role in the off-line and the on-line modes. Experimental results of the proposed framework on a standard dataset are presented in section V. Finally, the last section draws the conclusion and future works. II. RELATED WORKS There are some research works that have been done in the area of developing alert correlation frameworks. Salah et al. [1] have categorized correlation techniques into three groups: similarity-based [7, 8], sequential-based [10-13] and casebased [18] methods. In continue, based on the main features of the proposed framework, we will describe some remarkable related works. The main feature of the proposed framework are real time analysis of the intrusion alerts, the use of Bayesian networks for extracting causal relationships between alerts and the ability to predict the next step of the attacks. In the area of real time sequence analysis, Ramaki et al. [8] proposed RTECA for alert correlation in early warning systems (EWSs) context. RTECA is an alert correlation scheme that is work based on combination of statistical and stream mining approaches. The method works in real-time by extracting attack sub-patterns from sequences of alerts, which could be part of multi-step attack scenarios. In RTECA, a Causal Correlation Matrix (CCM) is used for representing correlation strength between the alert types in attack scenarios. As another work, Soleimani and Ghorbani [7] have proposed an approach to detect multi-step attack scenarios using combination of stream mining and machine learning methods. In their work, a decision tree-based method is used for learning the specification of each multi-step attack pattern and detecting them in alert sequences. Also, they use alert correlation matrix (ACM) for extracting the correlation strength of each two alert types in the system. Kavousi and Akbari [10] proposed an algorithm to detect attack behavior patterns from a large number of intrusion alerts without pre-defined knowledge of the multi-step attacks. Their correlation system has two modes, the off-line and the on-line modes. In the off-line mode, multi-step attack patterns from historical alerts are learned using a Bayesian causality analysis approach and the in the on-line mode, raw alerts are correlated in real time and based on the attack patterns extracted by the off-line mode. Qin [11] proposed a probabilistic correlation model based on Bayesian mechanisms to correlate alerts and mine the related alerts if they match to these three features: they have a causal relationship; they have a sequential relationship based on a time constraint and there exists a high statistical one-way dependency from the effect alert to the causal alert. In the context of prediction of the next attacker's goal in a multi-stage attack scenario, Farhadi et al. [12] have proposed a

method based on stream mining, which is able to predict the future events using Hidden Markov Model (HMM). They construct attack scenarios using alert frequencies in different time windows and analyze the correlated alerts. High falsenegative rate in detecting the scenarios is the main drawback of the ASEA algorithm proposed by them. Moreover, their algorithm is not able to detect new attack strategies. In [13], Fredj proposed a global alert correlation system that deals with heterogeneous alerts, unifies them, removes false alerts, aggregates the alerts and correlates them to create multi-step attack scenarios. The framework is based on absorbing Markov chain model that is able to predict the future behavior of an attacker but this prediction only shows the gravity of the attacker and not included the next step of a running attack. In this paper, we propose an alert correlation framework that is able to predict the next attack step based on the under running alert type instead of attack intention [12] in an efficient manner. The other capability of the current framework is the power of new attack scenario detection without any predefined knowledge about attack scenarios. III. PRELIMINARIES The concepts used in this paper are Bayesian Networks and Bayesian Attack Graphs (BAG), which are briefly explained in the following. A. Bayesian Networks A Bayesian network is a directed acyclic graph (DAG) whose nodes represent random variables (     ) and arcs represent conditional independencies among these variables. Furthermore, each node has a conditional probability distribution that quantifies the effect of the parents on the node [14]. Given a set of random variables         in a Bayesian network, the joint probability of all the variables is given by the chain rule as (1), where   denotes the specific values of the variables in the parent nodes of  .


          


(1)

In Bayesian networks, probabilistic beliefs about the connections strength are updated as new information becomes available using Bayes' theorem, (2), where  is the posterior probability,  is the prior probability,  is the probability of observed information  given a particular event  and  is the unconditional probability of occurring .
    (2)

B. Bayesian Attack Graphs A Bayesian attack graph (BAG) is a 4-tuple     [14] where         denotes the set of nodes (Aggregated Alerts). The set of ordered pair, , reflects the directed edges in the graph. Each directed edge (    connects node  to  . Therefore node  is considered as the preconditions of alerts in

99

node  to generate.  represents conjunctive or disjunctive relations the relation between edges entering a node with possible values of {AND, OR}. If all preconditions must be held before generation of an alert  , conjunctive relation (AND) is used, and if at least one of the preconditions must be satisfied, the disjunctive relation (OR) is used.  is a set of conditional probability distributions (CPD) representing the values of   . In a BAG, each node has a table-CPD also known as conditional probability table (CPT), which specifies the chances of observing the nodes relevant alerts given different combinations of states of its parents. IV. PROPOSED ALERT CORRELATION FRAMEWORK The proposed framework in this paper provides a real-time algorithm for alert correlation. The framework extracts causal knowledge based on Bayesian network. There are challenges towards this aim: there are significant amount of low level alerts; alerts of a multi-step attack do not reach the correlation component at the same time; and the most important challenge is that the received alerts are analyzed and omitted upon arrival; because in real-time applications the memory is limited. In continue, we describe the overall functionality of the proposed framework based on some assumptions. In this paper, we assume that in a heterogeneous environment, there are a number of IDSs that monitor the users' behaviors and trace their activities and generate low level alerts based on their actions. Then, the generated alerts by each IDS is transmitted to a central alert correlation unit. Then the alerts are normalized and sorted based on their creation timestamp. After that, the main attack scenario detection is applied on the alerts database. Alerts generated by the sensors are categorized into larger parts, named batches. Each batch is divided into the smaller parts, named time windows (see Fig. 1) [9]. When a batch of alerts is completed, the alerts are sorted based on their creation timestamp and after that, the alerts are aggregated and divided in some smaller parts that called time windows. Aggregated alerts are called meta-alerts. Processing a time window starts when that window is completed. Then, relevance analysis of the alerts is applied for extracting causal correlated alerts that might be parts of some under running attack scenarios. In this framework, there is a prediction component that is responsible for generating prediction rules which represent all of probable actions with their probability values which may be launched by an attacker.

combinations of the alerts. Using the Correlation database and by generating an off-line Bayesian attack graph, the system learns multi-step attack scenarios in the off-line mode. In the on-line mode, the effect of observed alerts are propagated thorough the BAG generated in the off-line mode and the most probable next steps of the attacker are calculated and prioritized. Finally, the results are sent to the IRS as prediction rules. In the following, the role of each component of these modes is described. A. Off-line Mode As stated before, in the off-line mode, BAG model of the aggregated alerts is generated. This process is performed in four steps: alert preprocessing, alert aggregation, causal relationship discovery and BAG construction, which will be described in the following sections. The last two components are the main contributions of the paper in the off-line mode.
Off-line Alerts Database

Alert Preprocessing

Vulnerability Database CAS Database with TPCA BAG Construction

Topology Database

Alert Aggregation

Causal Relationship Discovery

A A A A A

AAS Database

Figure 2: The proposed alert correlation in the off-line mode

1) Alert Preprocessing The alert preprocessing component, see Fig. 2, is composed of two phases: alert normalization and alert verification based on two main databases, vulnerability database and topology database. In the normalization phase, alerts that are generated by multiple IDSs are collected and stored in a central database before they are modeled and converted into a standard format called Intrusion Detection Message Exchange Format (IDMEF) [16]. This is necessary because alerts from different sensors and workstations can be encoded in different formats. In the verification phase, the normalized alerts are verified to check the validity of each alert according to its effect on the overall monitored environment. In order to actively and accurately distinguish true alerts from false positives, the validation process uses several sources of information (e.g. vulnerability and topology databases) and tries to find the logical connections between them.

Figure 1. Time window of size win [9]

2) Alert Aggregation Aggregation component reduces the number of generated low level alerts to simplify alerts analysis and management. The operations of this component on the raw alerts dose not eliminate the main security information of generated alerts.

Our proposed alert correlation framework has two modes: off-line (see Fig. 2) and on-line (see Fig. 2). In the off-line mode, at the beginning, it aggregates alerts based on the similarity of their alert types. Next, a Bayesian network-based approach is leveraged for discovering the possible

100

Thousands of alerts, generated by the IDSs, are converted into an aggregated alert (or meta-alert). An alert consists of some attributes based on specific characteristics of network traffic. The most important features of a raw alert (i.e., source IP address, destination IP address, source and destination port number, intrusion type or alert type, attack severity and timestamp) is used for the alert correlation process. In the aggregation component [9], all alerts with the same alert type, which are satisfying a predefined time frame condition, are merged together. Combination of these alerts forms meta-alerts. The number of meta-alerts is less than the number of original alerts. More formally, if there is an alert-set {At1, At2, ..., Atn} in a time interval and each alert has a set of features as mentioned above, it is possible to assume these alerts are similar if At1_[alertType] = At2_[alertType] = ... = Atn_[alertType]. A meta-alert (named Ah) of these similar alerts, is shown in [9]. The output of this component is stored in aggregated alerts set (ASS) database. 3) Casual Relationship Discovery After aggregating the alerts, the causal relations between them are inferred from the history of meta-alerts (AAS database). Let Ah and Bh be two different meta-alerts of type A and B, respectively (Ah_[alertType]=A and Bh_[alertType]=B). These alerts are causally related if the bellow criteria are held: 1- Their relevant features are equal to each other based on two equality conditions:
a) {A h _[srcIPs] = Bh _[srcIPs], A h _[dstIPs] = Bh _[dstIPs], A h _[srcPorts] = Bh _[srcPorts], A h _[dstPorts] = Bh _[dstPorts], A h _[attackSeverity] = Bh _[attackSeverity]}, b) {A h _[dstIPs] = Bh _[srcIPs], A h _[dstPort] = Bh _[srcPort]}

their probabilities are calculated during the causal relationship discovery phase as described in step 3. The procedure of BAG construction of the network is described below. Input: AAS, CAS and TPCA. Output: BAG of the alerts generated by IDSs. 1- For each causal relationship existing in CAS database between meta-alerts  and  in the form of (  ), a directed edge will connect  to  (   ). If there is an edge (or edges) entering node  already, the conjunctive or disjunctive relations (i.e. AND, OR relations) between new edge and the existing edge(s) must be determined ( ). 2- In a BAG, each node has a CPT. This table shows the probability of a node (generating an alert) given the states of its parents (generating the alerts of the parents). In the proposed framework, after all the edges are added to the network, the CPT of each node is generated as follows. The transition that changes the state of the network from  to  for      is called  . The conditional probability distribution function of  is    which is defined as (4) and (5), where: a) If the relation between incoming edges to node  is AND, the product rule is used.
                        

    

(4)

2- Meta-alerts Ah and Bh have been generated within a time window. After discovering casual relations between meta-alerts (stored in correlated alerts set (CAS) database), their occurrence probabilities need to be determined. For example, the probability of relation    will be expressed with the notation . Now, we define two sets of causal relations:   and  . The   refers to the number of all causal relations in the form of    which satisfy aforementioned equality conditions. Also, the  represents the number of all relations triggered by A. Now, probabilities of correlated alerts (TPCA),  , can be calculated using (3).
       (3)

b) If the relation between incoming edges to node  is OR, the noisy OR operator is used [15].
                                  

(5)

As the result of the above procedure, the BAG of the alerts with CPTs representing the TPCA conditioned to the different states of the parents is constructed. B. On-line Mode As mentioned before, in the on-line mode, see Fig. 3, the most probable next steps of the attacker are predicted in four main steps: alert preprocessing, alert aggregation, probability propagation and alert prediction. The first two steps are same as shown in the off-line mode. The last two components are the main contributions of the paper in the on-line mode. In the following, the role of these components is described. 1) Probability Propagation As described in before, in order to generate the BAG of the alerts generated by IDS, the causal dependencies between the meta-alerts and the probability of transitions between them (conditional probabilities) are needed. Some of meta-alerts are

4) BAG Construction In order to generate the BAG of the alerts generated by IDS, the causal dependencies between the meta-alerts and the probability of transitions between them (conditional probabilities) are needed. These dependencies are captured and

101

considered as preconditions for some other meta-alerts to generate. So, successful generation of these preconditions makes the network state more probable for the other metaalerts generations. In other words, the probability of each metaalert is affected by the probability of its casual parents. A network may experience different attacks or changes during its lifetime. The probabilities of the meta-alerts will be changed if any evidence in the network is observed, i.e. any alert observation. For example if a meta-alert is observed during the on-line mode, the probability of the relevant node in BAG are changed to 1. In this case, prior probabilities are propagated using CPTs and the Bayes' theorem, (2), and hence the probabilities of meta-alerts are calculated.
On-line Alert Stream

The meta-alerts with the higher posterior probabilities represent the most probable next choices for the attackers. The information about the meta-alerts with the posterior probabilities higher than a predefined threshold  are sent to the IRS in the form of a table containing three elements: ID, prediction rule and the probability. V. EVALUATION

This section presents the experimental results of proposed framework. To this aim, three evaluation measures are examined including aggregation statistics, the completeness of the detected attack scenarios, and the prediction accuracy. Required parameters for running the algorithm are listed in Table I. The proposed framework has been tested using the first alert-set of DARPA 2000 dataset that called LLDDoS 1.0 [17]. We describe the functionality of the proposed framework in detecting this attack scenario. The alerts are generated by RealSecure IDS after replaying the DARPA network traffic. The LLDDoS 1.0 attack scenario is consisting of five steps that are drawn in [9].
Table I: The parameters of the proposed algorithm for the experiments
Parameter Name Parameter Value

Alert Preprocessing

Vulnerability Database

Alert Prediction

Prediction Rules Database

Topology Database

Alert Aggregation

Probability Propagation

Batch Length Win (Time Window) t (in Meta-alert)

1h 5 min 1 min 0.9

Figure 3: The proposed alert correlation in the on-line mode

W

For modification of probabilities, the changes in meta-alerts states are propagated through the BAG in two ways: a) Forward propagation - For descendants of the affected meta-alerts which are influenced directly by the evidence.

b) Backward propagation - For ancestors of the affected meta-alerts, with obtaining their posterior probabilities (updated probabilities) after observing meta-alerts. In the other words, backward propagation corrects the initial hypothesis on all prior meta-alerts. The procedure of propagating probabilities is executed automatically when additional information about the states of the network is available or any observation about the attacker's actions is made. C. Alerts Prediction The BAG can be used for predicting the next steps of the attacks. Every meta-alert has a certain probability of generation. This probability can change during the lifetime of the system due to the occurrence of attack incidents. Let         be the set of meta-alerts in a BAG and           be a set of observed meta-alerts. The probability of meta-alerts in O is set to 1. Let     be a meta-alert whose posterior probability has to be calculated. Therefore we need to calculate   using (6).
          (6)

The generated alerts were given to the correlation algorithm. LLDDoS 1.0 attack scenario includes 1813 raw alerts with 19 unique alert types. These alert types are presented in [12]. One of the main purposes of this study is the effect of aggregation component in the proposed framework. The result of this component is depicted in Table II (with 32% reduction rate).
Table II: Aggregation statistics
Dataset LLDDoS 1.0

# Raw Alerts # Meta-alerts

1813 1236

In continue, we apply the algorithm on alert-set of first scenario. The results of the causal relationship discovery component after running the algorithm are represented in Table III. Fig. 4. represents the BAG of the RealSecure alerts for the inside traffic of the first scenario. The results of applying the proposed algorithm in processing the first scenario of DARPA 2000 shows that the DDoS attack is completely detected by the algorithm. Also the generated BAG, see Fig. 4, is similar to the obtained attack graphs of the other existing works such as [7, 12, 13]. To evaluate the accuracy of the prediction rule generation, we used 30% of the test dataset for prediction. With the remaining of the test dataset, we created the BAG. Table IV represents the accuracy of the prediction for different attack steps based on (7). The results show that when the length of

102

attack scenarios increases (attack nears the final steps), the accuracy of these predictions increases significantly.
Table III: CAS and TPCA values of the LLDDoS 1.0 after running algorithm
No. (   No. of Corr(  ) No. of Corr( ) P(B|A)

1 2 3 4 5 6 7 8 9 10 11

                                

15 65 49 77 5 4 69 47 56 26 12

21 78 63 92 7 11 87 89 72 35 14

0.71 0.83 0.77 0.84 0.71 0.36 0.79 0.52 0.77 0.74 0.85 (7)

similarity of their alert types and generates the meta-alerts. Next, a Bayesian Attack Graph (BAG) is constructed using the concept of Bayesian networks. Using the historical data, and by generating CASs, it learns multi-step attack scenarios. Then, in the on-line mode, for modification of probabilities, the changes in meta-alerts states are propagated through the BAG. We also provided a prediction facility in the framework to predict the next steps of an active multi-step attack by observing its early behaviors. In some cases, the prediction component can estimate the next steps of the attacks with more than 90% accuracy. REFERENCES
[1]
S. Salah, G. MaciÃ¡-FernÃ¡ndez, and J. E. DÃ­az-Verdejo, "A model-based survey of alert correlation techniques." Computer Networks, vol. 57, no. 5, pp. 1289-1317, 2013. F. Valeur, G. Vigna, C. Kruegel, and R. Kemmerer. "Comprehensive approach to intrusion detection alert correlation." Dependable and Secure Computing, IEEE Transactions on, vol. 1, no. 3, pp. 146-169, 2004. H. W. Njogu, L. Jiawei, J. N. Kiere, and D. Hanyurwimfura, "A comprehensive vulnerability based alert management approach for large networks." Future Generation Computer Systems, vol. 29, no. 1, pp. 27-45, 2013. Elshoush, H. T. Ibrahim, "An innovative framework for collaborative intrusion alert correlation." Science and Information Conference (SAI), IEEE, pp. 607-614, 2014. R. Yusof, S. R. Selamat, S. Sahib, M. Z. Mas'ud, and M. F. Abdollah, "Enhanced Alert Correlation Framework for Heterogeneous Log." Informatics Engineering and Information Science. Springer Berlin Heidelberg, pp. 107-122, 2011. B. C. Cheng, G. T. Liao, C. C. Huang, and M. T. Yu, "A novel probabilistic matching algorithm for multi-stage attack forecasts." Selected Areas in Communications, IEEE Journal on, vol. 29, no.7, pp. 1438-1448, 2011. M. GhasemiGol, and A. GhaemiBafghi. "Ecorrelator: an entropybased alert correlation system." Security and Communication Networks, vol. 8, no. 5, pp. 822-836, 2015. M. Soleimani, and A. A. Ghorbani, "Multi-layer episode filtering for the multi-step attack detection." Computer Communications, vol. 35, no. 11, pp. 1368-1379, 2012. A. A. Ramaki, M. Amini, and R. E. Atani, "RTECA: Real time episode correlation algorithm for multi-step attack scenarios detection." Computers & Security, vol. 49, pp. 206-219, 2015. attack strategies from intrusion alerts." Security and Communication Networks, vol. 7, no. 5, pp. 833-853, 2014.

[2]

[3]

 

 

[4]

Table IV: Accuracy of prediction rule mining
LLDDoS 1.0 Attack Scenario Step Prediction Accuracy

[5]

1 2 3 4 5
SP S: M1 D: M2

92.3% 94.4% 96.7% 98.5% 99.2%

[6]

[7]

[8]
SAO S: M2 D: M3

SAO S: M2 D: M1

AM S: M2 D: M3

[9]

Rsh S: M1 D: M2

Rsh S: M3 D: M2

TXD S: M4 D: M2

[10] F. Kavousi, and B. Akbari, "A Bayesian networkbased approach for learning

[11] X. Qin, "A probabilistic-based framework for infosec alert correlation". Diss.
MZ S: M2 D: M1 AM: Admind MZ: Mstream_Zombie PS: Port Scan Rsh: RemoteShell SDoS: Stream_DoS SP: Sadmind Ping SAO: Sadmind_Amslverify_Overflow TXD: TelnetXdisplay PS S: M6 D: M5 SDoS S: M5 D: M6 M1: 172.016.112.050 M2: 202.077.162.213 M3: 172.016.115.020 M4: 172.016.112.010 M5: 078.111.082.041 M6: 131.084.001.031 MZ S: M2 D: M3 TEA S: M2 D: M3

Georgia Institute of Technology, 2005.

[12] H. Farhadi, M. AmirHaeri, and M. Khansari, "Alert correlation and
prediction using data mining and HMM." The ISC International Journal of Information Security, vol. 3, no. 2, 2011.

[13] O. B. Fredj, "A realistic graphbased alert correlation system." Security and
Communication Networks, 2015.

[14] N. Poolsappasit, R. Dewri, and I. Ray, "Dynamic security risk management
using bayesian attack graphs." Dependable and Secure Computing, IEEE Transactions on, vol. 9, no.1, pp. 61-74, 2012.

[15] Y. Liu, and H. Man, "Network vulnerability assessment using Bayesian
networks." Defense and Security. International Society for Optics and Photonics, pp. 61-71, 2005.

Figure 4: BAG of the LLDDoS 1.0 dataset (inside part)

[16] H. Debar, D. A. Curry, and B. S. Feinstein, "The intrusion detection message
exchange format (IDMEF)." 2007.

VI.

CONCLUSION AND FUTURE WORKS

[17] M. Zissman, "DARPA Intrusion Detection Scenario Specific Data Sets."
http://http://www.ll.mit.edu, 2000.

In this paper, an efficient alert correlation framework is presented, which is suitable for detecting multi-step attack scenarios. It has two modes: on-line and off-line. In the off-line mode, at the beginning, it aggregates alerts based on the

[18] Cheung, S., Lindqvist, U., & Fong, M. W. (2003, April). Modeling multistep
cyber attacks for scenario recognition. In DARPA information survivability conference and exposition, 2003. Proceedings (Vol. 1, pp. 284-292). IEEE.

103

