Discovering Multi-stage Attacks Using Closed
Multi-dimensional Sequential Pattern Mining
Hanen Brahmi1 and Sadok Ben Yahia2
1

Faculty of Sciences of Tunis
Computer Science Department
Campus University, 1060 Tunis, Tunisia
hanenbrahmi@gmail.com
2
Institut Mines-TELECOM, TELECOM SudParis,
UMR CNRS Samovar, 91011 Evry Cedex, France
sadok.benyahia@fst.rnu.tn

Abstract. Due to the growing amount and kinds of intrusions, multistage attack is becoming the one of the main methods of the network
security threaten. Although, the Intrusion Detection Systems (IDS) are
intended to protect information systems against intrusions. Nevertheless,
they can only discover single-step attacks but not complicated multistage attacks. Consequently, IDS are plugged with the problem of the
excessive generation of alerts. Therefore, it is not only important, but
also challenging for security managers to correlate security alerts to predict a multi-stage attack. In this respect, an approach based on sequential
pattern mining technique to discover multi-stage attack activity is eﬃcient to reduce the labor to construct pattern rules. In this paper, we
introduce a novel approach of alert correlation, based on a new closed
multi-dimensional sequential patterns mining algorithm. The main idea
behind this approach is to discover temporal patterns of intrusions which
reveal behaviors of attacks using alerts generated by IDS. Our experiment
results show the robustness and efciency of our new algorithm against
those in the literature.
Keywords: Multi-stage
attacks,
Intrusion
detection
Multi-dimensional sequential patterns, Alert correlation.

1

system,

Introduction

Nowadays, as a security infrastructure the Intrusion Detection System (IDS)
have evolved significantly since their inception.
The criticism of the weakness of IDSs focuses on the fact that it can be violated
by a multi-stage attack. The latter is a complex attack that comprises multiple
correlated intrusion activities. A single multi-stage attack may generate a huge
amount of uncorrelated intrusion alerts. In order to cope with such quantities of
alerts, alert correlation approaches are used [1,2,5]. Alert correlation is the task
of analyzing the alerts triggered by one or multiple IDSs. Suppose a security
analyst is responsible for analyzing a huge number of this kind of alerts and
H. Decker et al. (Eds.): DEXA 2013, Part II, LNCS 8056, pp. 450–457, 2013.
c Springer-Verlag Berlin Heidelberg 2013
⃝

The CMD-PrefixSpan Algorithm to Discover Multi-stage Attacks

451

to take appropriate decisions. It is clear that it will be embedded in the huge
amount of knowledge and be found quickly overwhelmed. Therefore, the critical
task of analyzing and correlating all these alerts is time consuming and prone
to human errors.
The input data for alert correlation tools can be gathered from various sources
such as IDSs, fire-walls, web server logs, etc.. All the alerts stored in databases
can be viewed as sequences of alerts related to a time order. In this respect, it has
been shown that finding out multi-stage attacks by analyzing the alert sequences
is a promising method [4]. Alongside, the set of alerts can be considered as a
multi-dimensional data stored in a Data Warehouses (DW). In this respect,
alert correlation techniques using DW will have several advantages [1]. In fact,
it will provide a high level representation of the alerts along with a temporal
relationship of the sequence in which these alerts occurred.
In this paper, we investigate another way aiming at discovering the multistage attacks based on a DW perspective. Thus, we introduce a new alert
correlation system, which focuses on the multi-dimensional and temporal characteristics of alerts. The system is based on a closed multi-dimensional sequential pattern mining algorithm, called Closed Multi-Dimensional Prefix Span
(CMD PrefixSpan). Through extensive carried out experiments on the reallife log of alerts flagged out by IDS Snort1 , we show the significance of our
approach in comparison with those fitting in the same trend.
The remaining of the paper is organized as follows. Section 2 sheds light on
some related work. We introduce our novel approach to discover multi-stage
attacks in Section 3. We also relate the encouraging results of the carried out
experiments in Section 4. Finally, Section 5 concludes and points out avenues of
future work.

2

Related Work

In order to discover composite multi-stage attacks, several approaches for alert
correlation have been proposed.
Indeed, Ning et al. [5], Cuppens and Miège [2] built alert correlation systems
based on matching the pre-/post-conditions of alerts. The proposed methods
originate from the idea that attack steps are directly related, since an earlier
attack enables or positively aﬀects the later one. One challenge of these approaches is that a new attack cannot be paired with any other attacks, since its
prerequisites and consequences are not defined.
Along with the same preoccupation, Li et al. [4] proposed an approach based
on sequential pattern mining technique to discover multi-stage attack patterns.
The authors apply the GSP algorithm [8], to mine attack behavior sequence
patterns from alarm databases.The main moan that can be addressed to this
approach stands in the fact that it inherits the drawbacks of GSP algorithm.
Hence, this approach may not be suﬃcient in mining large sequence databases
having numerous long patterns as the alert logs.
1

Snort is a free open source IDS available at http://www.snort.org/.

452

H. Brahmi and S. Ben Yahia

The main thrust of this paper is to propose a new algorithm for mining multidimensional closed sequential patterns, called CMD PrefixSpan, to discover
multi-stage attack behavior patterns. The main reason behind our choice comes
from the observation that a multi-stage attack usually has relatively fixed attack
pattern and occurs in a confined time span [4]. Moreover, it has been shown that
the alerts have a multi-dimensional characteristic [1]

3

Discovering Multi-stage Attacks

The alerts can be stored as a global sequence of alerts sorted by ascending time
of detection (timestamp). The sequences of alerts describe the behaviors and
actions of attackers. Thus, we can find out multi-stage attacks by analyzing
these alert sequences.
We present in the following the key settings that will be of use in the remainder.
3.1

Formal Background

Let a set of records be a global sequence of alerts. The set is denoted SA =
<A-id, S>, where A-id is an alert identifier and S is a set of alert information
sequences occurring in the same time. Our algorithm only focuses on the attack
names and timestamp attributes in the alerts.
Definition 1. (n-dimensional sequence). A n-dimensional sequence (n > 1)
is an ordered list of (n-1)-dimensional sequence. It can be denoted as <s1 s2 ...sr >n ,
where n is the number of dimensions and si is a (n-1)-dimensional sequence element for 1 ≤ i ≤ r.
The support of si is the number of sequences containing si in SA, denoted
as sup(si ). Given a user-specified minimum support threshold min Supp, the set
of frequent multi-dimensional sequential patterns, denoted by F MDS, includes
all multi-dimensional sequences whose support is greater than or equal to the
min Supp.
Example 1. Table 1 shows an example of a global sequence of alerts, with its
time of detection timestamp in ascending order. Table 2 illustrates the multiple
subsequences, SA, generated by dividing the global alert sequence according to
timestamp and the name of attack. Note that, in order to run quickly, we map
the attack names to letter.
According to SA shown in Table 2, the subscripts in alert information sequences
denotes the dimension numbers. The dimensions 1, 2 and 3 represent the attack names, the sessions and the days, respectively. <<<ab>1<dc>1 >2 <<df>1
<bc>1 >2 >3 is a 3-dimensional sequence, whose elements <<ab>1 <dc>1 >2 and
<<df>1 <bc>1 >2 are 2-dimensional sequences.
Given min Supp = 2, the 1-dimensional sequence element <ab>1 is a frequent
multi-dimensional sequential pattern in SA. In fact, there are two alert records
A1 and A2 which support the pattern in SA.

The CMD-PrefixSpan Algorithm to Discover Multi-stage Attacks
Table 1. A global sequence of
alerts
Attack
Names
...
a
b
c
d
f
c
...

Timestamp
...
11-08-09-16:12:14
11-08-09-16:13:18
11-08-09-16:34:46
11-08-09-16:45:10
11-08-10-02:06:53
11-08-10-02:12:47
...

Other
attributes
...
...
...
...
...
...
...
...

453

Table 2. A multi-dimensional sequence of alerts
SA
A-id
A1
A2
A3

Alert information’
<<<ab>1 <dc>1 >2 <<df>1 <bc>1 >2 >3
<<<ab>1 >2 <<c>1 <be>1 >2 <<dg>1 <hf>1 >2 >3
<<<bc>1 <ac>1 >2 <<fh>1 <ab>1 >2 >3

Definition 2. (l-sequence). The total number of occurrences of patterns in a
sequence s is called the length of the sequence. An n-dimensional sequence with
a length l, is called l-sequence.
Example 2. A= <<<ab>1<dcf>1 >2 <<df>1 <bc>1 >2 >3 is a 9-sequence, since
pattern a occurs 1 time, pattern b 2 times, pattern c 2 times, pattern d 2 times
and pattern f 2 times in the sequence. Consequently, we have A(1)=a, means
that the 1st occurrence in A is a.
According to the multi-dimensional sequence of alerts SA shown in Table 2,
there are two diﬀerent representations of SA: the standard and the simplified
formats as shown in Table 3.
Table 3. SA in both standard and simplified formats
A-id
A1
A2
A3

SA in standard format
<<<ab>1 <dc>1 >2 <<df>1 <bc>1 >2 >3
<<<ab>1 >2 <<c>1 <be>1 >2 <<dg>1 <hf>1 >2 >3
<<<bc>1 <ac>1 >2 <<fh>1 <ab>1 >2 >3

SA in simplified format
<(a1) (b1) (d2) (c1) (d3) (f1) (b2) (c1)>3
<(a1) (b1) (c3) (b2) (e1) (d3) (g1) (h2) (f1)>3
<(b1) (c1) (a2) (c1) (f3) (h1) (a2) (b1)>3

The standard format of SA can be transformed into the simplified format.
The conversion is based on the definition of the dimensional scope relation DS(S,
k, j) defined as follows.
Definition 3. (Dimensional Scope relation). Given an n-dimensional alert
information sequence S that includes two patterns S(k) and S(j), such as k and
j denote the i-th occurrence of patterns in S. Let s be an i-dimensional sequence
element of S that contains S(k) and S(j) in its diﬀerent element. Then, the
dimensional scope of S(k) and S(j) is DS(S, k, j) = i.
Example 3. Let A = <<<ab>1<dcf>1 >2 <<df>1 <bc>1 >2 >3 be a
3-dimensional sequence. DS(A, 1, 2) = 1, DS(A, 2, 3) = 2, DS(A, 3, 4) = 1,
DS(A, 4, 5) = 1.
Definition 4. (Prefix). Given two n-dimensional sequences A = <s1 s2 ...sp >n
and B = <f1 f2 ... fq >n (q ≤ p), B is a prefix of A if and only if si = fi for 1
≤ i ≤ q.

454

H. Brahmi and S. Ben Yahia

Example 4. Let A = <<<ab>1<dcf>1 >2 <<df>1 <bc>1 >2 >3 be a
3-dimensional sequence, with a simplified format <(a1) (b1) (d2) (c1) (d3) (f1)
(b2) (c1)>3 . <(a1)>3 , <(a1)(b1)>3 and <(a1) (b1) (d2)>3 are the prefixes of A.
Definition 5. (Projection). Consider two n-dimensional sequences A = <s1
s2 ... sp >n and B = <f1 f2 ... fq >n (q ≤ p) such that B is a prefix of A. A
subsequence A’ = <g1 g2 ... gr >n of sequence A is called a projection of A with
respect to B if and only if (1) A’ has prefix B and (2) the last (p − iq ) elements
of A’ are the same as the last (p − iq ) elements of A.
Example 5. For instance, if we project A = <(b1) (c1) (a2) (c1) (f3) (h1) (a2)
(b1)>3 with respect to prefix B = <(a1)>3 , then we have two diﬀerent projections
A’, where the first is <(a1) (c1) (f3) (h1) (a2) (b1)>3 and the second <(a1) (b1)>3 .
Definition 6. (Postfix.)Let A’=<g1 g2 ... gr >n be the projection of A = <s1 s2
... sp >n with respect to prefix B =<g1 g2 ... gq >n . Then C =<gq+1 gq+2 ... gr >n is
called the postfix of A with respect to prefix B. In this respect, we conclude that the
postfix can be easily obtained by directly removing the prefix from the projection.
Example 6. By removing the prefixes from the projections of A = <(b1) (c1)
(a2) (c1) (f3) (h1) (a2) (b1)>3 , the resulting postfixes of the projection <(a1)
(c1) (f3) (h1) (a2) (b1)>3 is <(c1) (f3) (h1) (a2) (b1)>3 and of the second
projection <(a1) (b1)>3 is <(b1)>3 .
Definition 7. (Projected database). The α-projected database, denoted by
S|α, is the collection of postfixes of sequences in database S with respect to α.
Definition 8. (Closed frequent multi-dimensional sequence). The closure
γ of a frequent multi-dimensional sequential pattern A is the maximal superset
of A having the same support value as that of A. Hence, the set of closed frequent multi-dimensional sequential patterns, denoted by F CMDS, includes all
sequences in F MDS which do not have a super-sequence with the same support,
such as:
F CMDS = {A|A ∈ FMDS ∧ (! B ∈ FMDS| A ⊆ B ∧ sup(A) = sup(B))}.
3.2

The CMD PrefixSpan Algorithm

Originally, the PrefixSpan algorithm [7] is used for mining frequent sequential
patterns in transaction database to discovery the customer purchase patterns.
Consequently, it is not straightforward to apply this algorithm to find closed
multi-dimensional sequential patterns within alert logs. In fact, PrefixSpan
does not consider the fact of having a dimensional scope values between frequent
patterns in a projected database. Moreover, it produces an overwhelming large
number of sequential patterns. Several of them are considered as redundant.
These problems worsen if several dimensions are considered [3,9].
As a solution, we enhance the eﬃciency of the extraction by considering condensed representations of the mined knowledge, based on the notion of closed
patterns [6]. The pseudo-code is shown by Algorithm 1.

The CMD-PrefixSpan Algorithm to Discover Multi-stage Attacks

455

Algorithm 1. CMD PrefixSpan
Input: The alert information’ sequences SA, and the minimum support
threshold min Supp
Output: The frequent closed set of sequential patterns FCMDS
1 Begin
2
// 1st step: Construction of MTable;
3
Foreach s ∈ S|α do
4
for i=1 to Length(s) do
5
p = pattern of n-dimensional sequence element si ;
6
DS = max(s1 .scop, s2 .scop, ..., si .scop);
7
If p is a frequent pattern and cell(p, DS) of MTable has not yet
counted in the same A-id then
8
add 1 to the cell(p, DS);
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

// 2nd step: Mining of frequent multi-dimensional sequential patterns
for i=1 to n do
Foreach pattern p found in MTable do
If the support count of cell(p, i) ≥ min Supp then
Append p to α to form α’ and its dimensional scope given that
the last pattern of α is i;
Store α’ in FMDS;
Foreach α’ ∈ FMDS do
Construct α’-projected database;
If the size of α’-projected database is larger than min Supp then
Call CMD PrefixSpan(α’, Length+1, S|α’);
// 3rd step: Derivation of frequent closed multi-dimensional sequential
patterns
FCMDS = ∅;
forall α’ ∈ FMDS do
FCMDS = FCMDS ∪ {γ(α’)}

return FCMDS
End

Within the first step, the CMD PrefixSpan algorithm uses a in-memory
data structure which is called MTable (Multi-dimensional Table) (lines 2−8).
MTable allows to store the scope relations, where each column corresponds to a
pattern and each row corresponds to a dimensional scope value. Each cell(p, i) in
the table records the number of alerts in the projected database S|α that contains
pattern p and its dimensional scope knowing that the last element of sequence α is
i. After constructing the table, it is easy to find those cells that are frequent. The
second step of the proposed algorithm uses frequent prefixes to divide the search
space and to project sequence databases, as well as the frequent cells founded
within MTable (lines 9−18). By recursively finding the sequential patterns in
the projected database, we will finally derive all the frequent multi-dimensional
sequential patterns from SA. The resulted set is stored in F MDS. Finally, the
third step allows to compress the latter by finding the closed multi-dimensional

456

H. Brahmi and S. Ben Yahia

sequential patterns in an alert log (lines 19−22). The obtained F CMDS exactly
captures all the information enclosed in an alert log.

4

Experimental Results

To evaluate the eﬀectiveness and eﬃciency of our proposed algorithm CMD PrefixSpan, we carried out extensive experiments on a PC equipped with a 3 GHz
Pentium IV and 8 Go of main memory running under Linux Fedora Core 6.
During the carried out experiments, we use a real-life log of alerts flagged out
by the IDS Snort deployed on a network of “National Security Agency” from
“Inter-Service Academy Cyber Defense Competition”2 and captured during the
period November 2008 to November 2011.
Figures 1 (a, b, c) plot the comparison of the CMD PrefixSpan, EXTPrefixspan and ExtSeq-MIDim algorithms in terms of running times. We
take into account three diﬀerent perspectives, including: (1) diﬀerent support
thresholds; (2) diﬀerent data volumes; and (3) diﬀerent number of dimensions.
Basically, the results of Figure 1 (a) shows that the running times of CMD PrefixSpan, EXT-Prefixspan and ExtSeq-MIDim increase rapidly as the minimum support decreases continuously. Whenever, we continue to decrease the
min Supp (e.g., to 0.02%), the CMD PrefixSpan algorithm will outperform
a lot the two frequent multi-dimensional sequence mining algorithms due to the
generation of an explosive number of frequent sequences for the latters.
The second simulation is to compare the scalability in terms of running times
for diﬀerent volume of alerts. During this experiment, we fix the min Supp as
0.02%. In this respect, according to Figure 1 (b), we remark that the running time
of the three algorithms linearly increases with the number of alerts. Otherwise,
it is clear that CMD PrefixSpan is faster than both EXT-Prefixspan and
ExtSeq-MIDim algorithms.
(a)
CMD_PrefixSpan
EXT-Prefixspan
ExtSeq-MIDim

2000

100
10

(c)
800

CMD_PrefixSpan
EXT-Prefixspan
ExtSeq-MIDim

700
Runtime (sec)

1000

(b)
2500

Runtime (sec)

Runtime (sec)

10000

1500
1000
500

600
500
400

CMD_PrefixSpan
EXT-Prefixspan
ExtSeq-MIDim

300
200
100

0.04

0.035
0.03
0.025
0.02
Minimum Support Threshold (%)

0

200

400
600
800
Number of alerts

1000

0

3

4

5

6

Dimensions

Fig. 1. The running times of CMD PrefixSpan vs. EXT-Prefixspan and ExtSeqMIDim

In addition, we compare the running times of the algorithms when the number
of dimensions changes. To this end, we present Figure 1 (c) where the min Supp
is fixed as 0.02%. The results indicate that the CMD PrefixSpan algorithm
2

http://www.itoc.usma.edu/research/dataset/

The CMD-PrefixSpan Algorithm to Discover Multi-stage Attacks

457

performs much better than the EXT-Prefixspan and ExtSeq-MIDim algorithms. The main reason is that the former is not influenced by this factor while
the latters deteriorate when the number of dimensions increases.

5

Conclusion

In this paper, we proposed a novel system for alert correlation to identify the
multi-stage attacks. The central idea of the proposed system focuses on the introduction of a closed multi-dimensional sequential patterns mining algorithm.
The CMD PrefixSpan algorithm mines sequential patterns from the alert sequences to form multi-stage behavior patterns. Carried out experiments showed
the eﬀectiveness of the introduced approach.
Within a dynamic network environment, the novel multi-stage attacks appear
continuously. Thus, a future work will include the use of incremental mining
algorithm to detect recently appeared attacks.

References
1. Brahmi, H., Brahmi, I., Ben Yahia, S.: Nouvelle Approche de Corrélation d’Alertes
basée sur la Fouille Multidimensionnelle. In: Actes des 8èmes journées francophones
sur les Entrepôts de Données et l’Analyse en ligne (EDA), Bordeaux, France, pp.
93–102 (2012)
2. Cuppens, F., Miège, A.: Alert Correlation in a Cooperative Intrusion Detection
Framework. In: Proceedings of the IEEE Symposium on Security and Privacy,
Berkeley, California, USA, pp. 202–215 (2002)
3. Huang, G., Zuo, N., Ren, J.: Mining Web Frequent Multi-dimensional Sequential
Patterns. Information Technology Journal 10(12), 2434 (2011)
4. Li, W., Zhi-tang, L., Jun, F.: Learning Attack Strategies Through Attack Sequence
Mining Method. In: Proceedings of the International Conference on Communication
Technology (ICCT), Guilin, China, pp. 1–4 (2006)
5. Ning, P., Cui, Y., Reeves, D.S., Xu, D.: Techniques and Tools for Analyzing
Intrusion Alerts. Journal ACM Transactions on Information and System Security 7(2), 274–318 (2004)
6. Pasquier, N., Bastide, Y., Taouil, R., Lakhal, L.: Eﬃcient Mining of Association
Rules Using Closed Itemset Lattices. Journal of Information Systems 24(1), 25–46
(1999)
7. Pei, J., Han, J., Mortazavi-asl, B., Pinto, H., Chen, Q., Dayal, U., Hsu, M.-C.:
PrefixSpan: Mining Sequential Patterns Eﬃciently by Prefix-Projected Pattern
Growth. In: Proceedings of the 17th International Conference on Data Engineering
(ICDE), Heidelberg, Germany, pp. 215–224 (2001)
8. Srikant, R., Agrawal, R.: Mining Sequential Patterns: Generalizations and
performance Improvements. In: Proceedings of the 5th International Conference
on Extending Database Technology: Advances in Database Technology (EDBT),
Avignon, France, pp. 3–17 (1996)
9. Vijayalakshmi, S., Mohan, V., Raja, S.S.: Mining Constraint-based
Multidimensional Frequent Sequential Pattern in Web Logs. European Journal of Scientific Research 36(3), 480–490 (2009)

